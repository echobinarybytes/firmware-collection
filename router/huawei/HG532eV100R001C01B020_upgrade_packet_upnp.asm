
Elf32_Sym struc  # (sizeof=0x10, align=0x4, mappedto_1)
                         # XREF: LOAD:00400930/r
                         # LOAD:00400940/r ...
st_name:.word ?          # offset (00401780)
st_value:.word ?         # offset (00000000)
st_size:.word ?
st_info:.byte ?
st_other:.byte ?
st_shndx:.half ?
Elf32_Sym ends


Elf32_Dyn struc  # (sizeof=0x8, align=0x4, copyof_2)
                         # XREF: LOAD:stru_400160/r
                         # LOAD:00400168/r ...
d_tag:.word ?
d_un:Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249 ?
Elf32_Dyn ends


Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249 union  # (sizeof=0x4, align=0x4, copyof_3)
                         # XREF: Elf32_Dyn/r
d_val:.word ?
d_ptr:.word ?
Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249 ends


 #
 # +-------------------------------------------------------------------------+
 # |   This file has been generated by The Interactive Disassembler (IDA)    |
 # |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
 # |                      License info: 48-3FBD-7F04-2C                      |
 # |                      Jiang Ying, Personal license                       |
 # +-------------------------------------------------------------------------+
 #
 # Input SHA256 : 5FDCCF57D60F8DF6431D29737AA17F0BE35894E7D35DDF14F3AABADC906A44CA
 # Input MD5    : 5D8C6E860768F65D4F60734490728E90
 # Input CRC32  : AF11C1E0

 # File Name   : C:\Users\xjy\Desktop\HG532eV100R001C01B020_upgrade_packet.bin\upnp
 # Format      : ELF for MIPS (Executable)
 # Imagebase   : 400000
 # Interpreter '/lib/ld-uClibc.so.0'
 # Needed Library 'libcfmapi.so'
 # Needed Library 'libatputil.so'
 # Needed Library 'libhttpapi.so'
 # Needed Library 'libmsgapi.so'
 # Needed Library 'libbhalapi.so'
 # Needed Library 'libxmlapi.so'
 # Needed Library 'libcrypto.so'
 # Needed Library 'librsa.so'
 # Needed Library 'libgcc_s.so.1'
 # Needed Library 'libc.so.0'
 #
 # Options     : --opsex
 # Options     : -fPIC
 # Options     : -fCPIC
 # Options     : --mips32r2
 # Options     : --o32
 #

 # Processor       : mipsb
 # Target assembler: GNU assembler
 # Byte sex        : Big endian

.set noreorder
.set noat



 # Segment type: Pure code
.text # LOAD
dword_400000:.word 0x7F454C46  # File format: \x7FELF
.byte 1                  # File class: 32-bit
.byte 2                  # Data encoding: big-endian
.byte 1                  # File version
.byte 0                  # OS/ABI: UNIX System V ABI
.byte 0                  # ABI Version
.byte 0, 0, 0, 0, 0, 0, 0  # Padding
.half 2                  # File type: Executable
.half 8                  # Machine: MIPS
.word 1                  # File version
.word _ftext             # Entry point
.word 0x34               # PHT file offset
.word 0                  # SHT file offset
.word 0x70001007         # Processor-specific flags
.half 0x34               # ELF header size
.half 0x20               # PHT entry size
.half 8                  # Number of entries in PHT
.half 0                  # SHT entry size
.half 0                  # Number of entries in SHT
.half 0                  # SHT entry index for string table
 # ELF32 Program Header
 # PHT Entry 0
dword_400034:.word 6     # Type: PHDR
.word 0x34               # File offset
.word dword_400034       # Virtual address
.word 0x400034           # Physical address
.word 0x100              # Size in file image
.word 0x100              # Size in memory image
.word 5                  # Flags
.word 4                  # Alignment
 # PHT Entry 1
.word 3                  # Type: INTERP
.word 0x134              # File offset
.word aLibLdUclibcSo0    # Virtual address
.word 0x400134           # Physical address
.word 0x14               # Size in file image
.word 0x14               # Size in memory image
.word 4                  # Flags
.word 1                  # Alignment
 # PHT Entry 2
.word 0x70000000         # Type: REGINFO
.word 0x148              # File offset
.word unk_400148         # Virtual address
.word 0x400148           # Physical address
.word 0x18               # Size in file image
.word 0x18               # Size in memory image
.word 4                  # Flags
.word 4                  # Alignment
 # PHT Entry 3
.word 1                  # Type: LOAD
.word 0                  # File offset
.word dword_400000       # Virtual address
.word 0x400000           # Physical address
.word 0x15D94            # Size in file image
.word 0x15D94            # Size in memory image
.word 5                  # Flags
.word 0x10000            # Alignment
 # PHT Entry 4
.word 1                  # Type: LOAD
.word 0x16000            # File offset
.word unk_426000         # Virtual address
.word 0x426000           # Physical address
.word 0x7FC              # Size in file image
.word 0x890              # Size in memory image
.word 6                  # Flags
.word 0x10000            # Alignment
 # PHT Entry 5
.word 2                  # Type: DYNAMIC
.word 0x160              # File offset
.word stru_400160        # Virtual address
.word 0x400160           # Physical address
.word 0x120              # Size in file image
.word 0x120              # Size in memory image
.word 7                  # Flags
.word 4                  # Alignment
 # PHT Entry 6
.word 0x6474E551         # Type: STACK
.word 0                  # File offset
.word 0                  # Virtual address
.word 0                  # Physical address
.word 0                  # Size in file image
.word 0                  # Size in memory image
.word 7                  # Flags
.word 4                  # Alignment
 # PHT Entry 7
.word 0                  # Type: NULL
.word 0                  # File offset
.word 0                  # Virtual address
.word 0                  # Physical address
.word 0                  # Size in file image
.word 0                  # Size in memory image
.word 0                  # Flags
.word 4                  # Alignment
aLibLdUclibcSo0:.ascii "/lib/ld-uClibc.so.0"<0>


 # Segment type: Pure data
.data # REGINFO
unk_400148:.byte 0xB2
.byte    0
.byte    1
.byte 0xF6
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x42  # B
.byte 0xE4
.byte 0x70  # p

 # ELF Dynamic Information

 # Segment type: Pure code
.text # LOAD
stru_400160:Elf32_Dyn <1, <0x7FA>>  # DT_NEEDED libcfmapi.so
Elf32_Dyn <1, <0xF67>>   # DT_NEEDED libatputil.so
Elf32_Dyn <1, <0xF75>>   # DT_NEEDED libhttpapi.so
Elf32_Dyn <1, <0xF83>>   # DT_NEEDED libmsgapi.so
Elf32_Dyn <1, <0xF90>>   # DT_NEEDED libbhalapi.so
Elf32_Dyn <1, <0xF9E>>   # DT_NEEDED libxmlapi.so
Elf32_Dyn <1, <0xFAB>>   # DT_NEEDED libcrypto.so
Elf32_Dyn <1, <0xFB8>>   # DT_NEEDED librsa.so
Elf32_Dyn <1, <0xFC2>>   # DT_NEEDED libgcc_s.so.1
Elf32_Dyn <1, <0xFD0>>   # DT_NEEDED libc.so.0
Elf32_Dyn <0xC, <0x402980>>  # DT_INIT
Elf32_Dyn <0xD, <0x414410>>  # DT_FINI
Elf32_Dyn <4, <0x400280>>  # DT_HASH
Elf32_Dyn <5, <0x401780>>  # DT_STRTAB
Elf32_Dyn <6, <0x400930>>  # DT_SYMTAB
Elf32_Dyn <0xA, <0x1014>>  # DT_STRSZ
Elf32_Dyn <0xB, <0x10>>  # DT_SYMENT
Elf32_Dyn <0x70000016, <0x426470>>  # DT_MIPS_RLD_MAP
Elf32_Dyn <0x15, <0>>    # DT_DEBUG
Elf32_Dyn <3, <0x426480>>  # DT_PLTGOT
Elf32_Dyn <0x70000001, <1>>  # DT_MIPS_RLD_VERSION
Elf32_Dyn <0x70000005, <2>>  # DT_MIPS_FLAGS
Elf32_Dyn <0x70000006, <0x400000>>  # DT_MIPS_BASE_ADDRESS
Elf32_Dyn <0x7000000A, <5>>  # DT_MIPS_LOCAL_GOTNO
Elf32_Dyn <0x70000011, <0xE5>>  # DT_MIPS_SYMTABNO
Elf32_Dyn <0x70000012, <0x1D>>  # DT_MIPS_UNREFEXTNO
Elf32_Dyn <0x70000013, <0xB>>  # DT_MIPS_GOTSYM
Elf32_Dyn <0x6FFFFFFE, <0x402960>>  # DT_VERNEED
Elf32_Dyn <0x6FFFFFFF, <1>>  # DT_VERNEEDNUM
Elf32_Dyn <0x6FFFFFF0, <0x402794>>  # DT_VERSYM
Elf32_Dyn <0>            # DT_NULL
.align 6
 # ELF Hash Table
elf_hash_nbucket:.word 0xC5
elf_hash_nchain:.word 0xE5
elf_hash_bucket:.word 0xA9, 0, 0x93, 0, 0, 0, 0x30, 0x39
.word 0, 0, 0, 0, 0xBB, 0x75, 0x25, 0, 0
.word 0, 0, 0x45, 0x2A, 0, 0x4F, 0, 0xC6
.word 0x52, 0, 0, 0x79, 0x22, 0, 0xE3, 0x33
.word 0, 0, 0x47, 0x1A, 0xD4, 0x8D, 0x5C
.word 0, 0xDD, 0xC3, 0, 0, 0, 0, 0x35, 0
.word 0xCE, 0xC, 0, 0x16, 0, 0x78, 0x98
.word 0, 6, 0x9F, 3, 0xA, 0xAB, 0, 0xC8
.word 0x19, 0, 0x36, 0xC1, 0x6E, 0, 0, 0x5A
.word 0, 0xA3, 0, 0xA2, 4, 0x76, 0, 0, 0x42
.word 0xAA, 0xB, 0xBD, 0xC4, 0x62, 0, 0
.word 0, 0xE, 0, 0x86, 0x74, 0x4A, 0x88
.word 0xB1, 0, 0, 0x6B, 0x43, 0x63, 0x12
.word 0x9E, 0, 0x3A, 0xCF, 0, 9, 0x15, 0x1C
.word 0x97, 0, 0x28, 0, 0x51, 0x17, 0x56
.word 0x4D, 0xF, 0xB2, 0xB9, 0x4E, 0, 0x3E
.word 0x1B, 0xAE, 0, 0x4C, 0xE1, 0x9A, 2
.word 0x37, 0x10, 0, 0x18, 0, 0, 0xAF, 0xA4
.word 0x32, 0x80, 0, 0, 0x60, 0x8E, 0x20
.word 0x3D, 0x13, 0x40, 0, 0x31, 0x3C, 0x24
.word 0, 0xA6, 0, 0x57, 0, 0, 0, 0x11, 0x65
.word 0x23, 0, 0x8B, 0, 0, 0x9B, 0x1E, 0x14
.word 0xD, 0, 0, 0xAD, 0x92, 0x5E, 0x3F
.word 0x50, 0x70, 0x2F, 0x21, 8, 0x66, 0x4B
.word 0x5F, 0, 0x26, 0x41, 0x77, 0x5D, 0x34
.word 0, 0x68, 0x1D, 0, 0, 0
elf_hash_chain:.word 0, 0, 0, 0, 0, 0, 0x5B, 0, 0xCC, 0x7D
.word 0, 0x2C, 0x53, 0, 0x6A, 0x91, 0x7F
.word 0xB5, 0x6D, 0x7B, 0x44, 0x29, 7, 0x71
.word 0, 0x1F, 0, 0x2B, 0x94, 0xB0, 0x27
.word 0x49, 0xE2, 0xD0, 0x72, 0xBC, 0x2D
.word 0x95, 0x84, 0x2E, 0, 0x38, 0x48, 0x46
.word 0x54, 0x64, 0, 0x59, 0x8F, 0, 0x61
.word 0xE0, 0x90, 0x3B, 0, 0, 0x81, 0, 0
.word 0, 0x9C, 0x7E, 0, 0, 0x7A, 0x67, 0x9D
.word 0xA7, 0x58, 0, 0x6C, 0, 0x82, 0xC0
.word 0xD5, 0, 0x83, 0xC9, 0x69, 0x55, 0xB4
.word 0, 0xA8, 0x85, 0x99, 0, 0xA5, 0x6F
.word 0, 0xC5, 0, 0, 0x7C, 0, 0xDF, 0xCD
.word 0, 0, 0, 0, 0, 0x73, 0, 0xA1, 5, 0
.word 0, 0, 0, 0, 0xDE, 0, 0, 0, 0, 0, 0
.word 0xA0, 0x89, 0xBE, 0, 0, 0x96, 0, 0
.word 0, 0xD9, 0xE4, 0x8A, 0, 0x87, 0xDB
.word 0, 0, 0xB6, 0, 0x8C, 0, 0xDA, 0xB7
.word 0xD3, 0xC2, 0, 0, 0, 0, 0, 0xBF, 0
.word 0, 0xB8, 0, 0xD1, 0, 0xDC, 0, 0, 0
.word 0xAC, 0, 0, 0xB3, 0, 0xC7, 0xD6, 0
.word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.word 0, 0, 0, 0xBA, 0, 0, 0xD8, 0, 0, 0
.word 0, 0, 0, 0, 0xD2, 0xCA, 0, 0, 0, 0
.word 0, 0, 0, 0xCB, 0, 0, 0, 0, 0, 0, 0
.word 0, 0xD7, 0, 0, 0, 1, 0, 0, 0, 0, 0
.word 0, 0, 0, 0, 0, 0, 0, 0, 0
 # ELF Symbol Table
Elf32_Sym <0>
Elf32_Sym <aFbss - byte_401780, \  # "_fbss"
           g_aucMacAddr, 0, 0x10, 0, \
           0xFFF1>
Elf32_Sym <aDynamicLinking - byte_401780,\  # "_DYNAMIC_LINKING"
           1, 0, 0x13, 0, 0xFFF1>
Elf32_Sym <aGlobalOffsetTa - byte_401780,\  # "_GLOBAL_OFFSET_TABLE_"
           dword_426480, 0, 0x11, 0, \
           0xFFF1>
Elf32_Sym <aGp - byte_401780, 0x42E470, \  # "_gp"
           0, 0x10, 0, 0xFFF1>
Elf32_Sym <aFdata - byte_401780, _fdata,\  # "_fdata"
           0, 0x10, 0, 0x13>
Elf32_Sym <aBssStart - byte_401780, \  # "__bss_start"
           g_aucMacAddr, 0, 0x10, 0, \
           0xFFF1>
Elf32_Sym <aFtext - byte_401780, _ftext,\  # "_ftext"
           0, 0x10, 0, 0xA>
Elf32_Sym <aEnd - byte_401780, _end_0, \  # "_end"
           0, 0x10, 0, 0xFFF1>
Elf32_Sym <aRldMap - byte_401780, \  # "__RLD_MAP"
           __RLD_MAP, 0, 0x11, 0, 0x14>
Elf32_Sym <aEdata - byte_401780, \  # "_edata"
           g_aucMacAddr, 0, 0x10, 0, \
           0xFFF1>
Elf32_Sym <aAtpMsgSend - byte_401780, \  # "ATP_MSG_Send"
           _ATP_MSG_Send, 0, 0x12, 0, 0>
Elf32_Sym <aStrcpy - byte_401780, \  # "strcpy"
           _strcpy, 0, 0x12, 0, 0>
Elf32_Sym <aInit - byte_401780, \  # "_init"
           _init_proc, 0x1C, 0x12, 0, 9>
Elf32_Sym <aUclibcMain+9 - byte_401780, \  # "main"
           main, 0x5A4, 0x12, 0, 0xA>
Elf32_Sym <aAtpUpnpGetserv - byte_401780,\  # "ATP_UPNP_GetServiceByDomain"
           ATP_UPNP_GetServiceByDomain, \
           0x54, 0x12, 0, 0xA>
Elf32_Sym <aAtpUtilSocketc_2 - byte_401780,\  # "ATP_UTIL_SocketClose"
           _ATP_UTIL_SocketClose, 0, \
           0x12, 0, 0>
Elf32_Sym <aUpnpdestroyall_0 - byte_401780,\  # "UpnpDestroyAllStatVar"
           UpnpDestroyAllStatVar, 0x8C, \
           0x12, 0, 0xA>
Elf32_Sym <aTspXmlGetnodef - byte_401780,\  # "TSP_XML_GetNodeFirstChild"
           _TSP_XML_GetNodeFirstChild, \
           0, 0x12, 0, 0>
Elf32_Sym <aOptarg - byte_401780, 0, 0, \  # "optarg"
           0x11, 0, 0>
Elf32_Sym <aAtpHttpClientc_0 - byte_401780,\  # "ATP_HTTP_ClientCheckAuthorization"
           _ATP_HTTP_ClientCheckAuthorization,\
           0, 0x12, 0, 0>
Elf32_Sym <aGAstactionarra - byte_401780,\  # "g_astActionArray"
           g_astActionArray, 0x3B0, \
           0x11, 0, 0x12>
Elf32_Sym <aAtpUpnpFreeeve - byte_401780,\  # "ATP_UPNP_FreeEvent"
           ATP_UPNP_FreeEvent, 0x98, \
           0x12, 0, 0xA>
Elf32_Sym <aAtpUtilSocketj - byte_401780,\  # "ATP_UTIL_SocketJoinMcast"
           _ATP_UTIL_SocketJoinMcast, 0,\
           0x12, 0, 0>
Elf32_Sym <aAtpUpnpGetvers - byte_401780,\  # "ATP_UPNP_GetVersion"
           ATP_UPNP_GetVersion, 0xC, \
           0x12, 0, 0xA>
Elf32_Sym <aAtpUtilTimerch - byte_401780,\  # "ATP_UTIL_TimerChgPeriod"
           _ATP_UTIL_TimerChgPeriod, 0, \
           0x12, 0, 0>
Elf32_Sym <aSignal - byte_401780, \  # "signal"
           _signal, 0, 0x12, 0, 0>
Elf32_Sym <aAtpMsgInit - byte_401780, \  # "ATP_MSG_Init"
           _ATP_MSG_Init, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUpnpNeedtoe - byte_401780,\  # "ATP_UPNP_NeedToEvent"
           ATP_UPNP_NeedToEvent, 0x1C, \
           0x12, 0, 0xA>
Elf32_Sym <aAtpUtilBgetmal - byte_401780,\  # "ATP_UTIL_BgetMalloc"
           _ATP_UTIL_BgetMalloc, 0, \
           0x12, 0, 0>
Elf32_Sym <aGPvupnpshmhand - byte_401780,\  # "g_pvUpnpShmHandle"
           g_pvUpnpShmHandle, 4, 0x11, \
           0, 0x18>
Elf32_Sym <aAtpUtilGvarget - byte_401780,\  # "ATP_UTIL_GVarGetValue"
           _ATP_UTIL_GVarGetValue, 0, \
           0x12, 0, 0>
Elf32_Sym <aPuts - byte_401780, _puts, \  # "puts"
           0, 0x12, 0, 0>
Elf32_Sym <aStrdup - byte_401780, \  # "strdup"
           _strdup, 0, 0x12, 0, 0>
Elf32_Sym <aSnprintf+2 - byte_401780, \  # "printf"
           _printf, 0, 0x12, 0, 0>
Elf32_Sym <aSrand - byte_401780, _srand,\  # "srand"
           0, 0x12, 0, 0>
Elf32_Sym <aListen - byte_401780, \  # "listen"
           _listen, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUpnpForcebr - byte_401780,\  # "ATP_UPNP_ForceBroadcast"
           ATP_UPNP_ForceBroadcast, \
           0xCC, 0x12, 0, 0xA>
Elf32_Sym <aAtpUtilStrfile_3 - byte_401780,\  # "ATP_UTIL_StrFileTell"
           _ATP_UTIL_StrFileTell, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpUpnpMalloc - byte_401780,\  # "ATP_UPNP_Malloc"
           ATP_UPNP_Malloc, 0x20, 0x12, \
           0, 0xA>
Elf32_Sym <aStrchr - byte_401780, \  # "strchr"
           _strchr, 0, 0x12, 0, 0>
Elf32_Sym <aAtpHttpClientc - byte_401780,\  # "ATP_HTTP_ClientCreate"
           _ATP_HTTP_ClientCreate, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtoi - byte_401780, _atoi, \  # "atoi"
           0, 0x12, 0, 0>
Elf32_Sym <aFree - byte_401780, _free, \  # "free"
           0, 0x12, 0, 0>
Elf32_Sym <aUpnpgetactionb - byte_401780,\  # "UPnPGetActionByName"
           UPnPGetActionByName, 0x174, \
           0x12, 0, 0xA>
Elf32_Sym <aFtell - byte_401780, _ftell,\  # "ftell"
           0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilSocketd - byte_401780,\  # "ATP_UTIL_SocketDisconnect"
           _ATP_UTIL_SocketDisconnect, \
           0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilStrfile_1 - byte_401780,\  # "ATP_UTIL_StrFilePrintf"
           _ATP_UTIL_StrFilePrintf, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpUpnpRegdevi_0 - byte_401780,\  # "ATP_UPNP_RegDeviceAndService"
           ATP_UPNP_RegDeviceAndService,\
           0xCCC, 0x12, 0, 0xA>
Elf32_Sym <aGPstupnpgvarhe - byte_401780,\  # "g_pstUpnpGvarHead"
           g_pstUpnpGvarHead, 4, 0x11, \
           0, 0x18>
Elf32_Sym <aGetopt - byte_401780, \  # "getopt"
           _getopt, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilGvarget_0 - byte_401780,\  # "ATP_UTIL_GVarGetMemHandle"
           _ATP_UTIL_GVarGetMemHandle, \
           0, 0x12, 0, 0>
Elf32_Sym <aStrcmp - byte_401780, \  # "strcmp"
           _strcmp, 0, 0x12, 0, 0>
Elf32_Sym <aAtpHttpServera - byte_401780,\  # "ATP_HTTP_ServerAppendSocket"
           _ATP_HTTP_ServerAppendSocket,\
           0, 0x12, 0, 0>
Elf32_Sym <aStrstr - byte_401780, \  # "strstr"
           _strstr, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUpnpRefresh_0 - byte_401780,\  # "ATP_UPNP_RefreshDeivce"
           ATP_UPNP_RefreshDeivce, \
           0x314, 0x12, 0, 0xA>
Elf32_Sym <aGAstsertypetos - byte_401780,\  # "g_astSerTypeToSerID"
           g_astSerTypeToSerID, 0x50, \
           0x11, 0, 0x12>
Elf32_Sym <aExit - byte_401780, _exit, \  # "exit"
           0, 0x12, 0, 0>
Elf32_Sym <aAtpUpnpUnlockt - byte_401780,\  # "ATP_UPNP_UnLockTr064Device"
           ATP_UPNP_UnLockTr064Device, \
           0xBC, 0x12, 0, 0xA>
Elf32_Sym <aGPstupnpstack - byte_401780,\  # "g_pstUPnPStack"
           g_pstUPnPStack, 4, 0x11, 0, \
           0x18>
Elf32_Sym <aSrand+1 - byte_401780, \  # "rand"
           _rand, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilSockets_0 - byte_401780,\  # "ATP_UTIL_SocketSetMcastIf"
           _ATP_UTIL_SocketSetMcastIf, \
           0, 0x12, 0, 0>
Elf32_Sym <aGStdevdesc - byte_401780, \  # "g_stDevDesc"
           g_stDevDesc, 0x20, 0x11, 0, \
           0x18>
Elf32_Sym <aAtpXmlGetchild - byte_401780,\  # "ATP_XML_GetChildNodeByName"
           ATP_XML_GetChildNodeByName, \
           0x150, 0x12, 0, 0xA>
Elf32_Sym <aAtpCfmGetparao - byte_401780,\  # "ATP_CFM_GetParaOfMsgBySeqNum"
           _ATP_CFM_GetParaOfMsgBySeqNum,\
           0, 0x12, 0, 0>
Elf32_Sym <aAtpUpnpFree - byte_401780, \  # "ATP_UPNP_Free"
           ATP_UPNP_Free, 0x2C, 0x12, 0,\
           0xA>
Elf32_Sym <aFseek - byte_401780, _fseek,\  # "fseek"
           0, 0x12, 0, 0>
Elf32_Sym <aSocket - byte_401780, \  # "socket"
           _socket, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilSocketc - byte_401780,\  # "ATP_UTIL_SocketCreateServer"
           _ATP_UTIL_SocketCreateServer,\
           0, 0x12, 0, 0>
Elf32_Sym <aUpnprestoresta - byte_401780,\  # "upnpRestoreState"
           upnpRestoreState, 0x104, \
           0x12, 0, 0xA>
Elf32_Sym <aMemcmp - byte_401780, \  # "memcmp"
           _memcmp, 0, 0x12, 0, 0>
Elf32_Sym <aInetAddr - byte_401780, \  # "inet_addr"
           _inet_addr, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilGetmime - byte_401780,\  # "ATP_UTIL_GetMimeTypeFromSuffix"
           _ATP_UTIL_GetMimeTypeFromSuffix,\
           0, 0x12, 0, 0>
Elf32_Sym <aAtpDbinit - byte_401780, \  # "ATP_DBInit"
           _ATP_DBInit, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilSockbas_0 - byte_401780,\  # "ATP_UTIL_SockBaseStart"
           _ATP_UTIL_SockBaseStart, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpTr064Getdom - byte_401780,\  # "ATP_TR064_GetDomainNameOfService"
           ATP_TR064_GetDomainNameOfService,\
           0x130, 0x12, 0, 0xA>
Elf32_Sym <aTspXmlAddfirst - byte_401780,\  # "TSP_XML_AddFirstChildNode"
           _TSP_XML_AddFirstChildNode, \
           0, 0x12, 0, 0>
Elf32_Sym <aUpnpsetssdpsoc - byte_401780,\  # "upnpSetSsdpSocket"
           upnpSetSsdpSocket, 0x140, \
           0x12, 0, 0xA>
Elf32_Sym <aTspXmlGetnoden - byte_401780,\  # "TSP_XML_GetNodeNextSibling"
           _TSP_XML_GetNodeNextSibling, \
           0, 0x12, 0, 0>
Elf32_Sym <aUpnpdestroyall - byte_401780,\  # "UpnpDestroyAllActions"
           UpnpDestroyAllActions, 0x8C, \
           0x12, 0, 0xA>
Elf32_Sym <aDeviceIterator - byte_401780,\  # "device_iterator"
           device_iterator, 0x60, 0x12, \
           0, 0xA>
Elf32_Sym <aAtpCfmaSetpara - byte_401780,\  # "ATP_CFMA_SetPara"
           _ATP_CFMA_SetPara, 0, 0x12, \
           0, 0>
Elf32_Sym <aAtpUtilSockets_1 - byte_401780,\  # "ATP_UTIL_SocketSend"
           _ATP_UTIL_SocketSend, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpHttpServerc - byte_401780,\  # "ATP_HTTP_ServerCreate"
           _ATP_HTTP_ServerCreate, 0, \
           0x12, 0, 0>
Elf32_Sym <aPerror - byte_401780, \  # "perror"
           _perror, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilSockets - byte_401780,\  # "ATP_UTIL_SocketSetTTL"
           _ATP_UTIL_SocketSetTTL, 0, \
           0x12, 0, 0>
Elf32_Sym <aInetNtoa - byte_401780, \  # "inet_ntoa"
           _inet_ntoa, 0, 0x12, 0, 0>
Elf32_Sym <aMemset - byte_401780, \  # "memset"
           _memset, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilSocketr - byte_401780,\  # "ATP_UTIL_SocketRecv"
           _ATP_UTIL_SocketRecv, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpDbdomaintok - byte_401780,\  # "ATP_DBDomainToKeyList"
           _ATP_DBDomainToKeyList, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpUtilGvardel - byte_401780,\  # "ATP_UTIL_GVarDelModule"
           _ATP_UTIL_GVarDelModule, 0, \
           0x12, 0, 0>
Elf32_Sym <aGApchttpextend - byte_401780,\  # "g_apcHttpExtendDirectives"
           0, 0, 0x11, 0, 0>
Elf32_Sym <aAtpHttpClients_0 - byte_401780,\  # "ATP_HTTP_ClientSendEx"
           _ATP_HTTP_ClientSendEx, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpUtilStrfile_5 - byte_401780,\  # "ATP_UTIL_StrFileReSize"
           _ATP_UTIL_StrFileReSize, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpCfmExtreboo - byte_401780,\  # "ATP_CFM_ExtReboot"
           _ATP_CFM_ExtReboot, 0, 0x12, \
           0, 0>
Elf32_Sym <aUpnpgetlocatio - byte_401780,\  # "upnpGetLocationUrl"
           upnpGetLocationUrl, 0x100, \
           0x12, 0, 0xA>
Elf32_Sym <aTspXmlRemoveat - byte_401780,\  # "TSP_XML_RemoveAttr"
           _TSP_XML_RemoveAttr, 0, 0x12,\
           0, 0>
Elf32_Sym <aUpnpisrootdevi - byte_401780,\  # "upnpIsRootDevice"
           upnpIsRootDevice, 0xAC, 0x12,\
           0, 0xA>
Elf32_Sym <aBspSysGetinfo - byte_401780,\  # "BSP_SYS_GetInfo"
           _BSP_SYS_GetInfo, 0, 0x12, 0,\
           0>
Elf32_Sym <aAtpMsgSendandr - byte_401780,\  # "ATP_MSG_SendAndRecv"
           _ATP_MSG_SendAndRecv, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpHttpClientd - byte_401780,\  # "ATP_HTTP_ClientDisconnect"
           _ATP_HTTP_ClientDisconnect, \
           0, 0x12, 0, 0>
Elf32_Sym <aAtpCfmMsgfree - byte_401780,\  # "ATP_CFM_MsgFree"
           _ATP_CFM_MsgFree, 0, 0x12, 0,\
           0>
Elf32_Sym <aTspXmlCreateno - byte_401780,\  # "TSP_XML_CreateNode"
           _TSP_XML_CreateNode, 0, 0x12,\
           0, 0>
Elf32_Sym <aAtpUtilStrfile_2 - byte_401780,\  # "ATP_UTIL_StrFileBuffer"
           _ATP_UTIL_StrFileBuffer, 0, \
           0x12, 0, 0>
Elf32_Sym <aUpnpisssdpall - byte_401780,\  # "upnpIsSsdpAll"
           upnpIsSsdpAll, 0x3C, 0x12, 0,\
           0xA>
Elf32_Sym <aAtpHttpPacketg - byte_401780,\  # "ATP_HTTP_PacketGetHeaderValue"
           _ATP_HTTP_PacketGetHeaderValue,\
           0, 0x12, 0, 0>
Elf32_Sym <aUpnpisservicev - byte_401780,\  # "UpnpIsServiceValid"
           UpnpIsServiceValid, 0x28, \
           0x12, 0, 0xA>
Elf32_Sym <aStrncpy - byte_401780, \  # "strncpy"
           _strncpy, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUpnpDestroy - byte_401780,\  # "ATP_UPNP_DestroyAllDevices"
           ATP_UPNP_DestroyAllDevices, \
           0x74, 0x12, 0, 0xA>
Elf32_Sym <aAtpUpnpMsgproc - byte_401780,\  # "ATP_UPNP_MsgProc"
           ATP_UPNP_MsgProc, 0x54C, \
           0x12, 0, 0xA>
Elf32_Sym <aAtpHttpPacketd - byte_401780,\  # "ATP_HTTP_PacketDestroy"
           _ATP_HTTP_PacketDestroy, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpCfmGetparao_0 - byte_401780,\  # "ATP_CFM_GetParaOfMsgByOID"
           _ATP_CFM_GetParaOfMsgByOID, \
           0, 0x12, 0, 0>
Elf32_Sym <aAtpCfmCfgmsghe - byte_401780,\  # "ATP_CFM_CfgMsgHeadBuilder"
           _ATP_CFM_CfgMsgHeadBuilder, \
           0, 0x12, 0, 0>
Elf32_Sym <aTspXmlAppendch - byte_401780,\  # "TSP_XML_AppendChildNode"
           _TSP_XML_AppendChildNode, 0, \
           0x12, 0, 0>
Elf32_Sym <aTspXmlParse - byte_401780, \  # "TSP_XML_Parse"
           _TSP_XML_Parse, 0, 0x12, 0, \
           0>
Elf32_Sym <aTspXmlFreenode - byte_401780,\  # "TSP_XML_FreeNode"
           _TSP_XML_FreeNode, 0, 0x12, \
           0, 0>
Elf32_Sym <aAtpDbkeylistto - byte_401780,\  # "ATP_DBKeyListToDomain"
           _ATP_DBKeyListToDomain, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpUtilBgetfre - byte_401780,\  # "ATP_UTIL_BgetFree"
           _ATP_UTIL_BgetFree, 0, 0x12, \
           0, 0>
Elf32_Sym <aAtpUpnpRegacti - byte_401780,\  # "ATP_UPNP_RegAction"
           ATP_UPNP_RegAction, 0x104, \
           0x12, 0, 0xA>
Elf32_Sym <aFclose+1 - byte_401780, \  # "close"
           _close, 0, 0x12, 0, 0>
Elf32_Sym <aLocaltime - byte_401780, \  # "localtime"
           _localtime, 0, 0x12, 0, 0>
Elf32_Sym <aUpnpfreeglobal - byte_401780,\  # "UpnpFreeGlobalVar"
           UpnpFreeGlobalVar, 0x1C, \
           0x12, 0, 0xA>
Elf32_Sym <aAtpHttpPackets - byte_401780,\  # "ATP_HTTP_PacketSetHeader"
           _ATP_HTTP_PacketSetHeader, 0,\
           0x12, 0, 0>
Elf32_Sym <aAtpCfmGetparan - byte_401780,\  # "ATP_CFM_GetParaNumOfMsg"
           _ATP_CFM_GetParaNumOfMsg, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpUpnpCheckex - byte_401780,\  # "ATP_UPNP_CheckExpiredSubscription"
           ATP_UPNP_CheckExpiredSubscription,\
           0x1F8, 0x12, 0, 0xA>
Elf32_Sym <aAtpUtilSocketc_1 - byte_401780,\  # "ATP_UTIL_SocketConnect"
           _ATP_UTIL_SocketConnect, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpCfmUtilconv - byte_401780,\  # "ATP_CFM_UtilConvertValueType"
           _ATP_CFM_UtilConvertValueType,\
           0, 0x12, 0, 0>
Elf32_Sym <aStrftime+4 - byte_401780, \  # "time"
           _time, 0, 0x12, 0, 0>
Elf32_Sym <aBspNetGetbasem - byte_401780,\  # "BSP_NET_GetBaseMacAddress"
           _BSP_NET_GetBaseMacAddress, \
           0, 0x12, 0, 0>
Elf32_Sym <aFopen - byte_401780, _fopen,\  # "fopen"
           0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilStrfile_6 - byte_401780,\  # "ATP_UTIL_StrFileWriteBin"
           _ATP_UTIL_StrFileWriteBin, 0,\
           0x12, 0, 0>
Elf32_Sym <aGAucmacaddr - byte_401780, \  # "g_aucMacAddr"
           g_aucMacAddr, 6, 0x11, 0, \
           0x17>
Elf32_Sym <aAtpUtilBgetstr - byte_401780,\  # "ATP_UTIL_BgetStrdup"
           _ATP_UTIL_BgetStrdup, 0, \
           0x12, 0, 0>
Elf32_Sym <aFread - byte_401780, _fread,\  # "fread"
           0, 0x12, 0, 0>
Elf32_Sym <aAtpUpnpLocktr0 - byte_401780,\  # "ATP_UPNP_LockTr064Device"
           ATP_UPNP_LockTr064Device, \
           0xB0, 0x12, 0, 0xA>
Elf32_Sym <aSetsockopt - byte_401780, \  # "setsockopt"
           _setsockopt, 0, 0x12, 0, 0>
Elf32_Sym <aFclose - byte_401780, \  # "fclose"
           _fclose, 0, 0x12, 0, 0>
Elf32_Sym <aUpnpgetservice - byte_401780,\  # "UpnpGetServiceType"
           UpnpGetServiceType, 0xA4, \
           0x12, 0, 0xA>
Elf32_Sym <aUpnpgetactlist - byte_401780,\  # "UpnpGetActListByActName"
           UpnpGetActListByActName, \
           0xD0, 0x12, 0, 0xA>
Elf32_Sym <aAtpHttpClients - byte_401780,\  # "ATP_HTTP_ClientSetSocket"
           _ATP_HTTP_ClientSetSocket, 0,\
           0x12, 0, 0>
Elf32_Sym <aAtpUpnpSendeve - byte_401780,\  # "ATP_UPNP_SendEvent"
           ATP_UPNP_SendEvent, 0x20, \
           0x12, 0, 0xA>
Elf32_Sym <aAtpUtilStrfile - byte_401780,\  # "ATP_UTIL_StrFileOpen"
           _ATP_UTIL_StrFileOpen, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpUtilTimerad - byte_401780,\  # "ATP_UTIL_TimerAdd"
           _ATP_UTIL_TimerAdd, 0, 0x12, \
           0, 0>
Elf32_Sym <aUpnpgetdeviceo - byte_401780,\  # "UpnpGetDeviceOrService"
           UpnpGetDeviceOrService, \
           0x718, 0x12, 0, 0xA>
Elf32_Sym <aAtpUpnpAdaptup - byte_401780,\  # "ATP_UPNP_AdaptUpdateNextTimer"
           ATP_UPNP_AdaptUpdateNextTimer,\
           0x48, 0x12, 0, 0xA>
Elf32_Sym <aTspXmlClonenod - byte_401780,\  # "TSP_XML_CloneNodeSelf"
           _TSP_XML_CloneNodeSelf, 0, \
           0x12, 0, 0>
Elf32_Sym <aTspXmlGetattr - byte_401780,\  # "TSP_XML_GetAttr"
           _TSP_XML_GetAttr, 0, 0x12, 0,\
           0>
Elf32_Sym <aGApchttpextend_0 - byte_401780,\  # "g_apcHttpExtendHeaders"
           0, 0, 0x11, 0, 0>
Elf32_Sym <aGPstshmext - byte_401780, \  # "g_pstShmExt"
           g_pstShmExt, 4, 0x11, 0, \
           0x18>
Elf32_Sym <aAtpDbgetobj - byte_401780, \  # "ATP_DBGetObj"
           _ATP_DBGetObj, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilStrfile_7 - byte_401780,\  # "ATP_UTIL_StrFileToBuf"
           _ATP_UTIL_StrFileToBuf, 0, \
           0x12, 0, 0>
Elf32_Sym <aTspXmlGetnodeb - byte_401780,\  # "TSP_XML_GetNodeByUrl"
           _TSP_XML_GetNodeByUrl, 0, \
           0x12, 0, 0>
Elf32_Sym <aUpnpisdeviceva - byte_401780,\  # "UpnpIsDeviceValid"
           UpnpIsDeviceValid, 0x28, \
           0x12, 0, 0xA>
Elf32_Sym <aTspXmlAddnexts - byte_401780,\  # "TSP_XML_AddNextSiblingNode"
           _TSP_XML_AddNextSiblingNode, \
           0, 0x12, 0, 0>
Elf32_Sym <aTspXmlRemoveno - byte_401780,\  # "TSP_XML_RemoveNode"
           _TSP_XML_RemoveNode, 0, 0x12,\
           0, 0>
Elf32_Sym <aUpnpgetdevicet - byte_401780,\  # "UpnpGetDeviceType"
           UpnpGetDeviceType, 0xA4, \
           0x12, 0, 0xA>
Elf32_Sym <aAtpUtilSslcrea - byte_401780,\  # "ATP_UTIL_SSLCreateCtx"
           _ATP_UTIL_SSLCreateCtx, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpUpnpRegdevi - byte_401780,\  # "ATP_UPnP_RegDevice"
           ATP_UPnP_RegDevice, 0x3B0, \
           0x12, 0, 0xA>
Elf32_Sym <aAtpUpnpRefresh - byte_401780,\  # "ATP_UPNP_RefreshUpnpTree"
           ATP_UPNP_RefreshUpnpTree, \
           0x60, 0x12, 0, 0xA>
Elf32_Sym <aAtpDbgetpara - byte_401780, \  # "ATP_DBGetPara"
           _ATP_DBGetPara, 0, 0x12, 0, \
           0>
Elf32_Sym <aAtpDbgetparaby - byte_401780,\  # "ATP_DBGetParaByName"
           _ATP_DBGetParaByName, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpUtilSocketc_0 - byte_401780,\  # "ATP_UTIL_SocketCreateClient"
           _ATP_UTIL_SocketCreateClient,\
           0, 0x12, 0, 0>
Elf32_Sym <aAtpUpnpRefresh_1 - byte_401780,\  # "ATP_UPNP_RefreshFromDB"
           ATP_UPNP_RefreshFromDB, \
           0x37C, 0x12, 0, 0xA>
Elf32_Sym <aSnprintf - byte_401780, \  # "snprintf"
           _snprintf, 0, 0x12, 0, 0>
Elf32_Sym <aAtpCfmCfgmsgap - byte_401780,\  # "ATP_CFM_CfgMsgAppendPara"
           _ATP_CFM_CfgMsgAppendPara, 0,\
           0x12, 0, 0>
Elf32_Sym <aAtpCfmFreeobj - byte_401780,\  # "ATP_CFM_FreeObj"
           _ATP_CFM_FreeObj, 0, 0x12, 0,\
           0>
Elf32_Sym <aAtpUpnpGetdevi - byte_401780,\  # "ATP_UPNP_GetDeviceInfo"
           ATP_UPNP_GetDeviceInfo, \
           0x248, 0x12, 0, 0xA>
Elf32_Sym <aAtpUpnpSettr06 - byte_401780,\  # "ATP_UPNP_SetTr064SecurityInfo"
           ATP_UPNP_SetTr064SecurityInfo,\
           0x78, 0x12, 0, 0xA>
Elf32_Sym <aGPcdescpath - byte_401780, \  # "g_pcDescPath"
           g_pcDescPath, 4, 0x11, 0, \
           0x18>
Elf32_Sym <aStrlen - byte_401780, \  # "strlen"
           _strlen, 0, 0x12, 0, 0>
Elf32_Sym <aTspXmlGetnodev - byte_401780,\  # "TSP_XML_GetNodeValue"
           _TSP_XML_GetNodeValue, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpUpnpAddeven - byte_401780,\  # "ATP_UPNP_AddEvent"
           ATP_UPNP_AddEvent, 0x130, \
           0x12, 0, 0xA>
Elf32_Sym <aAtpUpnpGetmaca - byte_401780,\  # "ATP_UPNP_GetMacAddr"
           ATP_UPNP_GetMacAddr, 0x7C, \
           0x12, 0, 0xA>
Elf32_Sym <aTspXmlAddattr - byte_401780,\  # "TSP_XML_AddAttr"
           _TSP_XML_AddAttr, 0, 0x12, 0,\
           0>
Elf32_Sym <aUclibcMain - byte_401780, \  # "__uClibc_main"
           ___uClibc_main, 0, 0x12, 0, \
           0>
Elf32_Sym <aStrncmp - byte_401780, \  # "strncmp"
           _strncmp, 0, 0x12, 0, 0>
Elf32_Sym <aStrrchr - byte_401780, \  # "strrchr"
           _strrchr, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUpnpInit - byte_401780, \  # "ATP_UPNP_Init"
           ATP_UPNP_Init, 0x2E4, 0x12, \
           0, 0xA>
Elf32_Sym <aUpnpinitshmext - byte_401780,\  # "upnpInitShmExt"
           upnpInitShmExt, 0xF4, 0x12, \
           0, 0xA>
Elf32_Sym <aMalloc - byte_401780, \  # "malloc"
           _malloc, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilSockbas - byte_401780,\  # "ATP_UTIL_SockBaseRegEvtProc"
           _ATP_UTIL_SockBaseRegEvtProc,\
           0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilGetsyst - byte_401780,\  # "ATP_UTIL_GetSysTime"
           _ATP_UTIL_GetSysTime, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpUtilParseur - byte_401780,\  # "ATP_UTIL_ParseUrl"
           _ATP_UTIL_ParseUrl, 0, 0x12, \
           0, 0>
Elf32_Sym <aStrtoul - byte_401780, \  # "strtoul"
           _strtoul, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUtilTimerde - byte_401780,\  # "ATP_UTIL_TimerDel"
           _ATP_UTIL_TimerDel, 0, 0x12, \
           0, 0>
Elf32_Sym <aStrcasecmp - byte_401780, \  # "strcasecmp"
           _strcasecmp, 0, 0x12, 0, 0>
Elf32_Sym <aRegisterFrameI - byte_401780,\  # "__register_frame_info"
           0, 0, 0x22, 0, 0>
Elf32_Sym <aAtpHttpClients_1 - byte_401780,\  # "ATP_HTTP_ClientSend"
           _ATP_HTTP_ClientSend, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpMsgRegister - byte_401780,\  # "ATP_MSG_RegisterMsgProc"
           _ATP_MSG_RegisterMsgProc, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpHttpClientg - byte_401780,\  # "ATP_HTTP_ClientGetSendBuf"
           _ATP_HTTP_ClientGetSendBuf, \
           0, 0x12, 0, 0>
Elf32_Sym <aAtpCfmaGetpara - byte_401780,\  # "ATP_CFMA_GetPara"
           _ATP_CFMA_GetPara, 0, 0x12, \
           0, 0>
Elf32_Sym <aStrcat - byte_401780, \  # "strcat"
           _strcat, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUpnpGettr06 - byte_401780,\  # "ATP_UPNP_GetTr064SecurityInfo"
           ATP_UPNP_GetTr064SecurityInfo,\
           0xD0, 0x12, 0, 0xA>
Elf32_Sym <aFini - byte_401780, \  # "_fini"
           _term_proc, 0x1C, 0x12, 0, \
           0xC>
Elf32_Sym <aAtpUpnpRegserv - byte_401780,\  # "ATP_UPnP_RegService"
           ATP_UPnP_RegService, 0xB34, \
           0x12, 0, 0xA>
Elf32_Sym <aUpnpscpdstrip - byte_401780,\  # "upnpScpdStrip"
           upnpScpdStrip, 0x2A0, 0x12, \
           0, 0xA>
Elf32_Sym <aUpnpgetdeviceu - byte_401780,\  # "UpnpGetDeviceUuid"
           UpnpGetDeviceUuid, 0x110, \
           0x12, 0, 0xA>
Elf32_Sym <aUpnpgetservice_0 - byte_401780,\  # "UpnpGetServiceByUrl"
           UpnpGetServiceByUrl, 0x1AC, \
           0x12, 0, 0xA>
Elf32_Sym <aUpnpdestorydev - byte_401780,\  # "UpnpDestoryDevice"
           UpnpDestoryDevice, 0x84, \
           0x12, 0, 0xA>
Elf32_Sym <aAtpUtilGetipad - byte_401780,\  # "ATP_UTIL_GetIpAddresses"
           _ATP_UTIL_GetIpAddresses, 0, \
           0x12, 0, 0>
Elf32_Sym <aJvRegisterclas - byte_401780,\  # "_Jv_RegisterClasses"
           0, 0, 0x20, 0, 0>
Elf32_Sym <aUpnpregsubscri - byte_401780,\  # "UpnpRegSubscription"
           UpnpRegSubscription, 0x3B8, \
           0x12, 0, 0xA>
Elf32_Sym <aTspXmlTransfor - byte_401780,\  # "TSP_XML_Transform"
           _TSP_XML_Transform, 0, 0x12, \
           0, 0>
Elf32_Sym <aAtpUtilGvarini - byte_401780,\  # "ATP_UTIL_GVarInit"
           _ATP_UTIL_GVarInit, 0, 0x12, \
           0, 0>
Elf32_Sym <aMemcpy - byte_401780, \  # "memcpy"
           _memcpy, 0, 0x12, 0, 0>
Elf32_Sym <aUsleep - byte_401780, \  # "usleep"
           _usleep, 0, 0x12, 0, 0>
Elf32_Sym <aGBbaseexit - byte_401780, 0,\  # "g_bBaseExit"
           0, 0x11, 0, 0>
Elf32_Sym <aSystem - byte_401780, \  # "system"
           _system, 0, 0x12, 0, 0>
Elf32_Sym <aFwrite - byte_401780, \  # "fwrite"
           _fwrite, 0, 0x12, 0, 0>
Elf32_Sym <aAtpLogPrintf - byte_401780, \  # "ATP_LOG_Printf"
           _ATP_LOG_Printf, 0, 0x12, 0, \
           0>
Elf32_Sym <aGUlidletime - byte_401780, \  # "g_ulIdleTime"
           0, 0, 0x11, 0, 0>
Elf32_Sym <aErrnoLocation - byte_401780,\  # "__errno_location"
           ___errno_location, 0, 0x12, \
           0, 0>
Elf32_Sym <aAtpUpnpBroadca - byte_401780,\  # "ATP_UPNP_BroadcastSSDP"
           ATP_UPNP_BroadcastSSDP, \
           0x6E8, 0x12, 0, 0xA>
Elf32_Sym <aTspXmlSetnode - byte_401780,\  # "TSP_XML_SetNode"
           _TSP_XML_SetNode, 0, 0x12, 0,\
           0>
Elf32_Sym <aAtpUtilGvarset - byte_401780,\  # "ATP_UTIL_GVarSetValue"
           _ATP_UTIL_GVarSetValue, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpUtilStrfile_4 - byte_401780,\  # "ATP_UTIL_StrFileFlush"
           _ATP_UTIL_StrFileFlush, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpMsgSendsimp - byte_401780,\  # "ATP_MSG_SendSimpleMsg"
           _ATP_MSG_SendSimpleMsg, 0, \
           0x12, 0, 0>
Elf32_Sym <aCalloc - byte_401780, \  # "calloc"
           _calloc, 0, 0x12, 0, 0>
Elf32_Sym <aStrftime - byte_401780, \  # "strftime"
           _strftime, 0, 0x12, 0, 0>
Elf32_Sym <aAtpUpnpStrdup - byte_401780,\  # "ATP_UPNP_StrDup"
           ATP_UPNP_StrDup, 0x20, 0x12, \
           0, 0xA>
Elf32_Sym <aAtpUpnpRegenda - byte_401780,\  # "ATP_UPNP_RegEndActionFunc"
           ATP_UPNP_RegEndActionFunc, \
           0xA4, 0x12, 0, 0xA>
Elf32_Sym <aAtpCfmaGetobji - byte_401780,\  # "ATP_CFMA_GetObjInstNum"
           _ATP_CFMA_GetObjInstNum, 0, \
           0x12, 0, 0>
Elf32_Sym <aDeregisterFram - byte_401780,\  # "__deregister_frame_info"
           0, 0, 0x22, 0, 0>
Elf32_Sym <aTspXmlFreemem - byte_401780,\  # "TSP_XML_FreeMem"
           _TSP_XML_FreeMem, 0, 0x12, 0,\
           0>
Elf32_Sym <aAtpUtilStrfile_0 - byte_401780,\  # "ATP_UTIL_StrFileClose"
           _ATP_UTIL_StrFileClose, 0, \
           0x12, 0, 0>
Elf32_Sym <aAtpHttpClientr - byte_401780,\  # "ATP_HTTP_ClientRecvAllBody"
           _ATP_HTTP_ClientRecvAllBody, \
           0, 0x12, 0, 0>
Elf32_Sym <aTspXmlParsefil - byte_401780,\  # "TSP_XML_ParseFile"
           _TSP_XML_ParseFile, 0, 0x12, \
           0, 0>
Elf32_Sym <aUpnpisupnpenab - byte_401780,\  # "upnpIsUpnpEnabled"
           upnpIsUpnpEnabled, 0x4C, \
           0x12, 0, 0xA>
Elf32_Sym <aAtpMsgSimplebu - byte_401780,\  # "ATP_MSG_SimpleBuilder"
           _ATP_MSG_SimpleBuilder, 0, \
           0x12, 0, 0>
 # ELF String Table
byte_401780:.byte 0
aInit:.ascii "_init"<0>
aFini:.ascii "_fini"<0>
aUclibcMain:.ascii "__uClibc_main"<0>
aDeregisterFram:.ascii "__deregister_frame_info"<0>
aRegisterFrameI:.ascii "__register_frame_info"<0>
aJvRegisterclas:.ascii "_Jv_RegisterClasses"<0>
aSignal:.ascii "signal"<0>
aStrcmp:.ascii "strcmp"<0>
aAtpUpnpGetvers:.ascii "ATP_UPNP_GetVersion"<0>
aExit:.ascii "exit"<0>
aGApchttpextend:.ascii "g_apcHttpExtendDirectives"<0>
aGApchttpextend_0:.ascii "g_apcHttpExtendHeaders"<0>
aOptarg:.ascii "optarg"<0>
aAtoi:.ascii "atoi"<0>
aGetopt:.ascii "getopt"<0>
aPuts:.ascii "puts"<0>
aAtpMsgInit:.ascii "ATP_MSG_Init"<0>
aAtpUpnpMsgproc:.ascii "ATP_UPNP_MsgProc"<0>
aAtpMsgRegister:.ascii "ATP_MSG_RegisterMsgProc"<0>
aAtpUtilSockbas:.ascii "ATP_UTIL_SockBaseRegEvtProc"<0>
aAtpDbinit:.ascii "ATP_DBInit"<0>
aAtpMsgSendsimp:.ascii "ATP_MSG_SendSimpleMsg"<0>
aGPcdescpath:.ascii "g_pcDescPath"<0>
aAtpUpnpGetmaca:.ascii "ATP_UPNP_GetMacAddr"<0>
aGAucmacaddr:.ascii "g_aucMacAddr"<0>
aAtpUpnpGetdevi:.ascii "ATP_UPNP_GetDeviceInfo"<0>
aGStdevdesc:.ascii "g_stDevDesc"<0>
aAtpUpnpInit:.ascii "ATP_UPNP_Init"<0>
aGPstupnpstack:.ascii "g_pstUPnPStack"<0>
aUpnpisupnpenab:.ascii "upnpIsUpnpEnabled"<0>
aAtpUtilSocketc:.ascii "ATP_UTIL_SocketCreateServer"<0>
aErrnoLocation:.ascii "__errno_location"<0>
aListen:.ascii "listen"<0>
aAtpHttpServera:.ascii "ATP_HTTP_ServerAppendSocket"<0>
aAtpUtilSslcrea:.ascii "ATP_UTIL_SSLCreateCtx"<0>
aUpnpinitshmext:.ascii "upnpInitShmExt"<0>
aUpnpsetssdpsoc:.ascii "upnpSetSsdpSocket"<0>
aUpnprestoresta:.ascii "upnpRestoreState"<0>
aAtpUtilSockbas_0:.ascii "ATP_UTIL_SockBaseStart"<0>
aAtpDbgetpara:.ascii "ATP_DBGetPara"<0>
aMemcpy:.ascii "memcpy"<0>
aSystem:.ascii "system"<0>
aSnprintf:.ascii "snprintf"<0>
aAtpMsgSimplebu:.ascii "ATP_MSG_SimpleBuilder"<0>
aAtpUtilGetsyst:.ascii "ATP_UTIL_GetSysTime"<0>
aGPstshmext:.ascii "g_pstShmExt"<0>
aAtpMsgSend:.ascii "ATP_MSG_Send"<0>
aAtpUpnpSettr06:.ascii "ATP_UPNP_SetTr064SecurityInfo"<0>
aAtpUpnpRefresh:.ascii "ATP_UPNP_RefreshUpnpTree"<0>
aAtpUpnpRefresh_0:.ascii "ATP_UPNP_RefreshDeivce"<0>
aAtpUpnpBroadca:.ascii "ATP_UPNP_BroadcastSSDP"<0>
aAtpUpnpForcebr:.ascii "ATP_UPNP_ForceBroadcast"<0>
aAtpCfmGetparan:.ascii "ATP_CFM_GetParaNumOfMsg"<0>
aGBbaseexit:.ascii "g_bBaseExit"<0>
aAtpCfmGetparao:.ascii "ATP_CFM_GetParaOfMsgBySeqNum"<0>
aAtpDbkeylistto:.ascii "ATP_DBKeyListToDomain"<0>
aAtpUpnpGetserv:.ascii "ATP_UPNP_GetServiceByDomain"<0>
aAtpUpnpNeedtoe:.ascii "ATP_UPNP_NeedToEvent"<0>
aAtpUpnpSendeve:.ascii "ATP_UPNP_SendEvent"<0>
aAtpUpnpFreeeve:.ascii "ATP_UPNP_FreeEvent"<0>
aGUlidletime:.ascii "g_ulIdleTime"<0>
aAtpUpnpCheckex:.ascii "ATP_UPNP_CheckExpiredSubscripti"
.ascii "on"<0>
aAtpDbgetobj:.ascii "ATP_DBGetObj"<0>
aFree:.ascii "free"<0>
aStrdup:.ascii "strdup"<0>
aAtpCfmFreeobj:.ascii "ATP_CFM_FreeObj"<0>
aBspNetGetbasem:.ascii "BSP_NET_GetBaseMacAddress"<0>
aBspSysGetinfo:.ascii "BSP_SYS_GetInfo"<0>
aInetAddr:.ascii "inet_addr"<0>
aAtpUtilSockets:.ascii "ATP_UTIL_SocketSetTTL"<0>
aAtpUtilSockets_0:.ascii "ATP_UTIL_SocketSetMcastIf"<0>
aAtpUtilSocketj:.ascii "ATP_UTIL_SocketJoinMcast"<0>
aAtpHttpClients:.ascii "ATP_HTTP_ClientSetSocket"<0>
aAtpUtilGvarget:.ascii "ATP_UTIL_GVarGetValue"<0>
aAtpUtilGvarset:.ascii "ATP_UTIL_GVarSetValue"<0>
aSrand:.ascii "srand"<0>
aGPvupnpshmhand:.ascii "g_pvUpnpShmHandle"<0>
aAtpUtilBgetstr:.ascii "ATP_UTIL_BgetStrdup"<0>
aAtpUtilBgetfre:.ascii "ATP_UTIL_BgetFree"<0>
aAtpUtilBgetmal:.ascii "ATP_UTIL_BgetMalloc"<0>
aAtpDbdomaintok:.ascii "ATP_DBDomainToKeyList"<0>
aAtpCfmCfgmsghe:.ascii "ATP_CFM_CfgMsgHeadBuilder"<0>
aAtpCfmCfgmsgap:.ascii "ATP_CFM_CfgMsgAppendPara"<0>
aAtpCfmaGetpara:.ascii "ATP_CFMA_GetPara"<0>
aAtpCfmMsgfree:.ascii "ATP_CFM_MsgFree"<0>
aMalloc:.ascii "malloc"<0>
aTspXmlCreateno:.ascii "TSP_XML_CreateNode"<0>
aTspXmlAppendch:.ascii "TSP_XML_AppendChildNode"<0>
aAtpTr064Getdom:.ascii "ATP_TR064_GetDomainNameOfServic"
.ascii "e"<0>
aUpnpgetactlist:.ascii "UpnpGetActListByActName"<0>
aMemset:.ascii "memset"<0>
aTspXmlGetnodef:.ascii "TSP_XML_GetNodeFirstChild"<0>
aTspXmlGetnoden:.ascii "TSP_XML_GetNodeNextSibling"<0>
aTspXmlGetnodev:.ascii "TSP_XML_GetNodeValue"<0>
aStrlen:.ascii "strlen"<0>
aAtpCfmUtilconv:.ascii "ATP_CFM_UtilConvertValueType"<0>
aAtpCfmaSetpara:.ascii "ATP_CFMA_SetPara"<0>
aStrcat:.ascii "strcat"<0>
aAtpXmlGetchild:.ascii "ATP_XML_GetChildNodeByName"<0>
aAtpMsgSendandr:.ascii "ATP_MSG_SendAndRecv"<0>
aAtpUpnpFree:.ascii "ATP_UPNP_Free"<0>
aStrncpy:.ascii "strncpy"<0>
aAtpUpnpMalloc:.ascii "ATP_UPNP_Malloc"<0>
aStrstr:.ascii "strstr"<0>
aAtpCfmGetparao_0:.ascii "ATP_CFM_GetParaOfMsgByOID"<0>
aAtpUpnpRegenda:.ascii "ATP_UPNP_RegEndActionFunc"<0>
aAtpCfmExtreboo:.ascii "ATP_CFM_ExtReboot"<0>
aTspXmlAddfirst:.ascii "TSP_XML_AddFirstChildNode"<0>
aAtpUpnpUnlockt:.ascii "ATP_UPNP_UnLockTr064Device"<0>
aAtpUpnpLocktr0:.ascii "ATP_UPNP_LockTr064Device"<0>
aAtpUpnpRegdevi:.ascii "ATP_UPnP_RegDevice"<0>
aAtpUpnpRegserv:.ascii "ATP_UPnP_RegService"<0>
aAtpUpnpRegacti:.ascii "ATP_UPNP_RegAction"<0>
aLibcfmapiSo:.ascii "libcfmapi.so"<0>
aDynamicLinking:.ascii "_DYNAMIC_LINKING"<0>
aRldMap:.ascii "__RLD_MAP"<0>
aGlobalOffsetTa:.ascii "_GLOBAL_OFFSET_TABLE_"<0>
aTspXmlFreenode:.ascii "TSP_XML_FreeNode"<0>
aStrncmp:.ascii "strncmp"<0>
aFopen:.ascii "fopen"<0>
aFseek:.ascii "fseek"<0>
aFtell:.ascii "ftell"<0>
aFread:.ascii "fread"<0>
aAtpLogPrintf:.ascii "ATP_LOG_Printf"<0>
aMemcmp:.ascii "memcmp"<0>
aAtpUpnpStrdup:.ascii "ATP_UPNP_StrDup"<0>
aDeviceIterator:.ascii "device_iterator"<0>
aAtpUtilParseur:.ascii "ATP_UTIL_ParseUrl"<0>
aAtpUtilGetipad:.ascii "ATP_UTIL_GetIpAddresses"<0>
aAtpUtilStrfile:.ascii "ATP_UTIL_StrFileOpen"<0>
aAtpUtilSocketc_0:.ascii "ATP_UTIL_SocketCreateClient"<0>
aAtpUtilSocketc_1:.ascii "ATP_UTIL_SocketConnect"<0>
aAtpUtilStrfile_0:.ascii "ATP_UTIL_StrFileClose"<0>
aAtpUtilStrfile_1:.ascii "ATP_UTIL_StrFilePrintf"<0>
aAtpUtilStrfile_2:.ascii "ATP_UTIL_StrFileBuffer"<0>
aAtpUtilStrfile_3:.ascii "ATP_UTIL_StrFileTell"<0>
aAtpUtilSocketd:.ascii "ATP_UTIL_SocketDisconnect"<0>
aAtpUtilSockets_1:.ascii "ATP_UTIL_SocketSend"<0>
aAtpUtilSocketr:.ascii "ATP_UTIL_SocketRecv"<0>
aTspXmlAddattr:.ascii "TSP_XML_AddAttr"<0>
aTspXmlTransfor:.ascii "TSP_XML_Transform"<0>
aTspXmlFreemem:.ascii "TSP_XML_FreeMem"<0>
aUpnpdestorydev:.ascii "UpnpDestoryDevice"<0>
aUpnpdestroyall:.ascii "UpnpDestroyAllActions"<0>
aUpnpdestroyall_0:.ascii "UpnpDestroyAllStatVar"<0>
aUpnpfreeglobal:.ascii "UpnpFreeGlobalVar"<0>
aAtpUtilGvardel:.ascii "ATP_UTIL_GVarDelModule"<0>
aAtpUtilGvarini:.ascii "ATP_UTIL_GVarInit"<0>
aAtpUtilGvarget_0:.ascii "ATP_UTIL_GVarGetMemHandle"<0>
aAtpUpnpRegdevi_0:.ascii "ATP_UPNP_RegDeviceAndService"<0>
aAtpUpnpRefresh_1:.ascii "ATP_UPNP_RefreshFromDB"<0>
aCalloc:.ascii "calloc"<0>
aAtpHttpServerc:.ascii "ATP_HTTP_ServerCreate"<0>
aAtpHttpClientc:.ascii "ATP_HTTP_ClientCreate"<0>
aAtpUpnpGettr06:.ascii "ATP_UPNP_GetTr064SecurityInfo"<0>
aUpnpgetlocatio:.ascii "upnpGetLocationUrl"<0>
aAtpHttpPackets:.ascii "ATP_HTTP_PacketSetHeader"<0>
aUpnpgetdeviceu:.ascii "UpnpGetDeviceUuid"<0>
aAtpHttpClients_0:.ascii "ATP_HTTP_ClientSendEx"<0>
aUsleep:.ascii "usleep"<0>
aUpnpgetdevicet:.ascii "UpnpGetDeviceType"<0>
aUpnpisdeviceva:.ascii "UpnpIsDeviceValid"<0>
aUpnpgetservice:.ascii "UpnpGetServiceType"<0>
aUpnpisservicev:.ascii "UpnpIsServiceValid"<0>
aAtpHttpPacketg:.ascii "ATP_HTTP_PacketGetHeaderValue"<0>
aAtpHttpClientg:.ascii "ATP_HTTP_ClientGetSendBuf"<0>
aAtpUtilStrfile_4:.ascii "ATP_UTIL_StrFileFlush"<0>
aAtpHttpClients_1:.ascii "ATP_HTTP_ClientSend"<0>
aStrchr:.ascii "strchr"<0>
aAtpUtilGetmime:.ascii "ATP_UTIL_GetMimeTypeFromSuffix"<0>
aAtpUtilStrfile_5:.ascii "ATP_UTIL_StrFileReSize"<0>
aAtpUtilStrfile_6:.ascii "ATP_UTIL_StrFileWriteBin"<0>
aLocaltime:.ascii "localtime"<0>
aStrftime:.ascii "strftime"<0>
aAtpHttpClientr:.ascii "ATP_HTTP_ClientRecvAllBody"<0>
aUpnpgetservice_0:.ascii "UpnpGetServiceByUrl"<0>
aTspXmlParse:.ascii "TSP_XML_Parse"<0>
aTspXmlClonenod:.ascii "TSP_XML_CloneNodeSelf"<0>
aTspXmlSetnode:.ascii "TSP_XML_SetNode"<0>
aTspXmlRemoveno:.ascii "TSP_XML_RemoveNode"<0>
aUpnpgetactionb:.ascii "UPnPGetActionByName"<0>
aAtpHttpClientc_0:.ascii "ATP_HTTP_ClientCheckAuthorizati"
.ascii "on"<0>
aAtpUtilTimerch:.ascii "ATP_UTIL_TimerChgPeriod"<0>
aUpnpregsubscri:.ascii "UpnpRegSubscription"<0>
aAtpHttpClientd:.ascii "ATP_HTTP_ClientDisconnect"<0>
aAtpUtilTimerad:.ascii "ATP_UTIL_TimerAdd"<0>
aUpnpisssdpall:.ascii "upnpIsSsdpAll"<0>
aUpnpisrootdevi:.ascii "upnpIsRootDevice"<0>
aUpnpgetdeviceo:.ascii "UpnpGetDeviceOrService"<0>
aAtpUtilStrfile_7:.ascii "ATP_UTIL_StrFileToBuf"<0>
aUpnpscpdstrip:.ascii "upnpScpdStrip"<0>
aAtpUpnpAddeven:.ascii "ATP_UPNP_AddEvent"<0>
aAtpUtilTimerde:.ascii "ATP_UTIL_TimerDel"<0>
aAtpHttpPacketd:.ascii "ATP_HTTP_PacketDestroy"<0>
aSocket:.ascii "socket"<0>
aSetsockopt:.ascii "setsockopt"<0>
aAtpUtilSocketc_2:.ascii "ATP_UTIL_SocketClose"<0>
aAtpCfmaGetobji:.ascii "ATP_CFMA_GetObjInstNum"<0>
aAtpDbgetparaby:.ascii "ATP_DBGetParaByName"<0>
aStrcpy:.ascii "strcpy"<0>
aTspXmlParsefil:.ascii "TSP_XML_ParseFile"<0>
aTspXmlGetattr:.ascii "TSP_XML_GetAttr"<0>
aStrtoul:.ascii "strtoul"<0>
aFwrite:.ascii "fwrite"<0>
aFclose:.ascii "fclose"<0>
aGPstupnpgvarhe:.ascii "g_pstUpnpGvarHead"<0>
aGAstactionarra:.ascii "g_astActionArray"<0>
aTspXmlGetnodeb:.ascii "TSP_XML_GetNodeByUrl"<0>
aStrrchr:.ascii "strrchr"<0>
aStrcasecmp:.ascii "strcasecmp"<0>
aAtpUpnpDestroy:.ascii "ATP_UPNP_DestroyAllDevices"<0>
aTspXmlAddnexts:.ascii "TSP_XML_AddNextSiblingNode"<0>
aGAstsertypetos:.ascii "g_astSerTypeToSerID"<0>
aInetNtoa:.ascii "inet_ntoa"<0>
aAtpUpnpAdaptup:.ascii "ATP_UPNP_AdaptUpdateNextTimer"<0>
aPerror:.ascii "perror"<0>
aTspXmlRemoveat:.ascii "TSP_XML_RemoveAttr"<0>
aLibatputilSo:.ascii "libatputil.so"<0>
aLibhttpapiSo:.ascii "libhttpapi.so"<0>
aLibmsgapiSo:.ascii "libmsgapi.so"<0>
aLibbhalapiSo:.ascii "libbhalapi.so"<0>
aLibxmlapiSo:.ascii "libxmlapi.so"<0>
aLibcryptoSo:.ascii "libcrypto.so"<0>
aLibrsaSo:.ascii "librsa.so"<0>
aLibgccSSo1:.ascii "libgcc_s.so.1"<0>
aLibcSo0:.ascii "libc.so.0"<0>
aFtext:.ascii "_ftext"<0>
aFdata:.ascii "_fdata"<0>
aGp:.ascii "_gp"<0>
aEdata:.ascii "_edata"<0>
aBssStart:.ascii "__bss_start"<0>
aFbss:.ascii "_fbss"<0>
aEnd:.ascii "_end"<0>
aGlibc20:.ascii "GLIBC_2.0"<0>
.word 1, 0x10001, 0x10001, 0x10001, 0x10001
.word 0x10000, 1, 0x10001, 1, 0
.word 1, 0x10000, 0x10000, 0
.word 0x10000, 0x10000, 0, 0
.word 1, 1, 0, 0
.word 0x10000, 0
.word 0x10001, 0, 0
.word 1, 0x10000, 0x10001, 0
.word 0x10001, 1, 0
.word 1, 0, 0
.word 1, 1, 1, 0x10000, 0, 0, 0, 0, 0, 0
.word 1, 1, 0, 0, 0
.word 0x10000, 0x10000, 0x10001, 0, 0, 0
.word 0
.word 0x10000, 1, 0
.word 0x10000, 0, 0
.word 1, 0
.word 0x10000, 1, 0x10000, 0x10000, 1, 0x10000
.word 0
.word 0x10000, 0
.word 0x10000, 1, 1, 0x10000, 0
.word 0x10000, 0
.word 0x10001, 0x10000, 1, 0x10000, 0
.word 1, 0x10000, 0, 0, 0
.word 0x20000, 0, 0
.word 0x10001, 0x10001, 0x10001, 0x10000
.word 1, 0, 0, 0, 0, 0
.word 0x10000, 0, 0
.word 1, 0x10000, 0x20000, 0
.word 1, 0
.word 0x10001, 0xFC2, 0x10, 0
.word 0xD696910, 2, 0x100A, 0



.globl _init_proc
_init_proc:

var_10= -0x10
var_8= -8
var_4= -4

li      $gp, 0x2BAF0     # _init
addu    $gp, $t9
addiu   $sp, -0x20
sw      $gp, 0x20+var_10($sp)
sw      $ra, 0x20+var_4($sp)
sw      $gp, 0x20+var_8($sp)
bal     loc_4029A4
nop

loc_4029A4:
li      $gp, 0x42E470
la      $t9, dword_400000
nop
addiu   $t9, (sub_402B30 - 0x400000)
jalr    $t9 ; sub_402B30
nop
lw      $gp, 0x20+var_10($sp)
nop
bal     loc_4029D0
nop

loc_4029D0:
li      $gp, 0x42E470
la      $t9, loc_410000
nop
addiu   $t9, (sub_413AB0 - 0x410000)
jalr    $t9 ; sub_413AB0
nop
lw      $gp, 0x20+var_10($sp)
nop
lw      $ra, 0x20+var_4($sp)
jr      $ra
addiu   $sp, 0x20
 # End of function _init_proc




.globl _ftext
_ftext:

var_10= -0x10
var_C= -0xC
var_8= -8
arg_0=  0
arg_4=  4

move    $zero, $ra
bal     loc_402A0C
nop

loc_402A0C:
li      $gp, 0x42E470
move    $ra, $zero
la      $a0, main
lw      $a1, arg_0($sp)
addiu   $a2, $sp, arg_4
li      $at, 0xFFFFFFF8
and     $sp, $at
addiu   $sp, -0x20
la      $a3, _init_proc
la      $t0, _term_proc
sw      $t0, 0x20+var_10($sp)
sw      $v0, 0x20+var_C($sp)
sw      $sp, 0x20+var_8($sp)
la      $t9, __uClibc_main
jalr    $t9 ; __uClibc_main
nop

loc_402A50:
b       loc_402A50
nop
 # End of function _ftext

.align 4



sub_402A60:

var_18= -0x18
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s2, 0x28+var_8($sp)
sw      $s1, 0x28+var_C($sp)
sw      $s0, 0x28+var_10($sp)
sw      $gp, 0x28+var_18($sp)
lbu     $v0, byte_426810
nop
bnez    $v0, loc_402B18
lui     $v1, 0x42
lui     $v0, 0x42
la      $v1, unk_426008
la      $v0, unk_42600C
subu    $v0, $v1
sra     $v0, 2
addiu   $s0, $v0, -1
move    $s2, $v1
b       loc_402ACC
lui     $s1, 0x42

loc_402AB8:
lw      $t9, 0($v1)
nop
jalr    $t9
sw      $a0, 0x6814($s1)
lw      $gp, 0x28+var_18($sp)

loc_402ACC:
lw      $v0, 0x6814($s1)
nop
addiu   $a0, $v0, 1
sll     $v1, $a0, 2
sltu    $v0, $s0
bnez    $v0, loc_402AB8
addu    $v1, $s2
la      $v0, __deregister_frame_info
nop
beqz    $v0, loc_402B10
li      $v1, 1
la      $t9, __deregister_frame_info
lui     $a0, 0x41
jalr    $t9 ; __deregister_frame_info
la      $a0, dword_415D90
lw      $gp, 0x28+var_18($sp)
li      $v1, 1

loc_402B10:
lui     $v0, 0x42
sb      $v1, byte_426810

loc_402B18:
lw      $ra, 0x28+var_4($sp)
lw      $s2, 0x28+var_8($sp)
lw      $s1, 0x28+var_C($sp)
lw      $s0, 0x28+var_10($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_402A60




sub_402B30:

var_10= -0x10
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x20
li      $gp, 0x42E470
sw      $ra, 0x20+var_4($sp)
sw      $gp, 0x20+var_10($sp)
la      $v0, __register_frame_info
nop
beqz    $v0, loc_402B6C
lui     $a0, 0x41
la      $t9, __register_frame_info
lui     $a1, 0x42
la      $a0, dword_415D90
jalr    $t9 ; __register_frame_info
la      $a1, unk_426818
lw      $gp, 0x20+var_10($sp)

loc_402B6C:
lui     $a0, 0x42
lw      $v0, dword_426010
nop
beqz    $v0, loc_402B9C
nop
la      $t9, _Jv_RegisterClasses
nop
beqz    $t9, loc_402B9C
la      $a0, dword_426010
lw      $ra, 0x20+var_4($sp)
jr      $t9 ; _Jv_RegisterClasses
addiu   $sp, 0x20

loc_402B9C:
lw      $ra, 0x20+var_4($sp)
nop
jr      $ra
addiu   $sp, 0x20
 # End of function sub_402B30

.align 4



 # int __cdecl main(int argc, const char **argv, const char **envp)
.globl main
main:

var_58= -0x58
var_54= -0x54
var_50= -0x50
var_48= -0x48
var_40= -0x40
var_3C= -0x3C
var_38= -0x38
var_34= -0x34
var_30= -0x30
var_2C= -0x2C
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4
arg_0=  0
arg_4=  4

lui     $gp, 0x43
addiu   $sp, -0x68
li      $gp, 0x42E470
sw      $ra, 0x68+var_4($sp)
sw      $fp, 0x68+var_8($sp)
sw      $s7, 0x68+var_C($sp)
sw      $s6, 0x68+var_10($sp)
sw      $s5, 0x68+var_14($sp)
sw      $s4, 0x68+var_18($sp)
sw      $s3, 0x68+var_1C($sp)
sw      $s2, 0x68+var_20($sp)
sw      $s1, 0x68+var_24($sp)
sw      $s0, 0x68+var_28($sp)
sw      $gp, 0x68+var_48($sp)
la      $t9, signal
sw      $a0, 0x68+arg_0($sp)
sw      $a1, 0x68+arg_4($sp)
li      $a0, 0xD
jalr    $t9 ; signal
li      $a1, 1
lw      $v1, 0x68+arg_0($sp)
li      $v0, 2
lw      $gp, 0x68+var_48($sp)
bne     $v1, $v0, loc_402C8C
nop
lw      $v0, 0x68+arg_4($sp)
nop
lw      $a0, 4($v0)
nop
beqz    $a0, loc_402C8C
lui     $a1, 0x41
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
la      $a1, aAtpv       # "atpv"
lw      $gp, 0x68+var_48($sp)
bnez    $v0, loc_402C8C
nop
la      $t9, ATP_UPNP_GetVersion
nop
jalr    $t9 ; ATP_UPNP_GetVersion
nop
lw      $gp, 0x68+var_48($sp)
la      $a0, aS          # "\r\n%s.\n"
la      $t9, printf
nop
jalr    $t9 ; printf
move    $a1, $v0
lw      $gp, 0x68+var_48($sp)
nop
la      $t9, exit
nop
jalr    $t9 ; exit
move    $a0, $zero

loc_402C8C:
la      $v1, g_apcHttpExtendDirectives
la      $v0, off_426430
sw      $v0, (g_apcHttpExtendDirectives - 0x426988)($v1)
la      $v1, g_apcHttpExtendHeaders
la      $v0, off_426444
sw      $v0, (g_apcHttpExtendHeaders - 0x426A28)($v1)
li      $s1, 0xFFFFFFFF
li      $s3, 0xFFFFFFFF
li      $s0, 0xFFFFFFFF
li      $s2, 0xFFFFFFFF
move    $s5, $zero
la      $s4, optarg
li      $fp, 1
li      $s7, 2
b       loc_402D54
li      $s6, 0x72

loc_402CD4:
li      $v1, 0x73
beq     $v0, $v1, loc_402CF8
li      $v1, 0x74
beq     $v0, $v1, loc_402D14
nop
bne     $v0, $s6, loc_402D54
nop
b       loc_402D54
li      $s5, 1

loc_402CF8:
la      $t9, atoi
lw      $a0, 0($s4)
jalr    $t9 ; atoi
nop
lw      $gp, 0x68+var_48($sp)
b       loc_402D54
move    $s0, $v0

loc_402D14:
la      $t9, atoi
lw      $a0, 0($s4)
jalr    $t9 ; atoi
nop
lw      $gp, 0x68+var_48($sp)
beq     $v0, $fp, loc_402D50
nop
beqz    $v0, loc_402D48
nop
bne     $v0, $s7, loc_402D54
nop
b       loc_402D54
move    $s2, $s0

loc_402D48:
b       loc_402D54
move    $s1, $s0

loc_402D50:
move    $s3, $s0

loc_402D54:
la      $t9, getopt
lw      $a0, 0x68+arg_0($sp)
lw      $a1, 0x68+arg_4($sp)
lui     $a2, 0x41
jalr    $t9 ; getopt
la      $a2, aSTR        # "s:t:r"
li      $v1, 0xFFFFFFFF
lw      $gp, 0x68+var_48($sp)
bne     $v0, $v1, loc_402CD4
nop
bltz    $s1, loc_402D9C
nop
bgez    $s3, loc_402D9C
nop
lui     $a0, 0x41
la      $t9, puts
b       loc_403110
la      $a0, aUpnpCmsIsNotRe  # "Upnp: cms is not ready, wait for next c"...

loc_402D9C:
la      $t9, ATP_MSG_Init
lui     $a0, 0x41
jalr    $t9 ; ATP_MSG_Init
la      $a0, aUpnp       # "upnp"
lw      $gp, 0x68+var_48($sp)
bnez    $v0, loc_403120
move    $v1, $zero
la      $a0, ATP_UPNP_MsgProc
la      $t9, ATP_MSG_RegisterMsgProc
nop
jalr    $t9 ; ATP_MSG_RegisterMsgProc
nop
lw      $gp, 0x68+var_48($sp)
nop
la      $t9, ATP_UTIL_SockBaseRegEvtProc
nop
jalr    $t9 ; ATP_UTIL_SockBaseRegEvtProc
nop
lw      $gp, 0x68+var_48($sp)
li      $a0, 0x10
la      $t9, ATP_DBInit
nop
jalr    $t9 ; ATP_DBInit
move    $a1, $zero
lw      $gp, 0x68+var_48($sp)
beqz    $v0, loc_402E1C
lui     $a2, 1
lui     $a0, 0x41
la      $t9, printf
la      $a0, aTr064RegMsgDbP  # "tr064 reg msg/db proc failed:%X\n"
b       loc_40301C
move    $a1, $v0

loc_402E1C:
la      $t9, ATP_MSG_SendSimpleMsg
lui     $a1, 2
ori     $a2, 5
li      $a1, 0x20009
jalr    $t9 ; ATP_MSG_SendSimpleMsg
move    $a0, $zero
lw      $gp, 0x68+var_48($sp)
la      $v0, aEtcUpnp    # "/etc/upnp"
la      $v1, g_pcDescPath
la      $t9, ATP_UPNP_GetMacAddr
la      $a0, g_aucMacAddr
sw      $v0, (g_pcDescPath - 0x426848)($v1)
jalr    $t9 ; ATP_UPNP_GetMacAddr
li      $a1, 6
lw      $gp, 0x68+var_48($sp)
nop
la      $t9, ATP_UPNP_GetDeviceInfo
la      $a0, g_stDevDesc
jalr    $t9 ; ATP_UPNP_GetDeviceInfo
nop
lw      $gp, 0x68+var_48($sp)
sw      $zero, 0x68+var_40($sp)
move    $a0, $s5
la      $t9, ATP_UPNP_Init
nop
jalr    $t9 ; ATP_UPNP_Init
addiu   $a1, $sp, 0x68+var_40
lw      $gp, 0x68+var_48($sp)
beqz    $v0, loc_402EB0
lui     $a0, 0x41
la      $t9, puts
nop
jalr    $t9 ; puts
la      $a0, aFatalErrorCrea  # "Fatal error, create upnp stack failed."
b       loc_403024
nop

loc_402EB0:
la      $s0, g_pstUPnPStack
la      $t9, upnpIsUpnpEnabled
lw      $v1, (g_pstUPnPStack - 0x42684C)($s0)
nop
lw      $v0, 0($v1)
nop
ori     $v0, 4
jalr    $t9 ; upnpIsUpnpEnabled
sw      $v0, 0($v1)
li      $v1, 1
lw      $gp, 0x68+var_48($sp)
bne     $v0, $v1, loc_402EFC
nop
lw      $v1, (g_pstUPnPStack - 0x42684C)($s0)
nop
lw      $v0, 0($v1)
nop
ori     $v0, 2
sw      $v0, 0($v1)

loc_402EFC:
bgez    $s1, loc_402F60
move    $a0, $zero
la      $t9, ATP_UTIL_SocketCreateServer
li      $a1, 0x915F
jalr    $t9 ; ATP_UTIL_SocketCreateServer
move    $a2, $zero
lw      $gp, 0x68+var_48($sp)
bgez    $v0, loc_402F48
move    $s1, $v0
la      $t9, __errno_location
nop
jalr    $t9 ; __errno_location
nop
lw      $gp, 0x68+var_48($sp)
lui     $a0, 0x41
lw      $a1, 0($v0)
la      $t9, printf
b       loc_40301C
la      $a0, aCreateUpnpHttp  # "Create upnp http socket failed: %d.\n"

loc_402F48:
la      $t9, listen
move    $a0, $v0
jalr    $t9 ; listen
li      $a1, 0x14
lw      $gp, 0x68+var_48($sp)
nop

loc_402F60:
la      $v0, g_pstUPnPStack
addiu   $a1, $sp, 0x68+var_3C
sw      $zero, 4($a1)
lw      $v0, (g_pstUPnPStack - 0x42684C)($v0)
sw      $zero, 8($a1)
sw      $zero, 0xC($a1)
sw      $zero, 0x10($a1)
la      $t9, ATP_HTTP_ServerAppendSocket
lw      $a0, 8($v0)
jalr    $t9 ; ATP_HTTP_ServerAppendSocket
sw      $s1, 0x68+var_3C($sp)
lw      $gp, 0x68+var_48($sp)
la      $v0, aEtcServerkeyPe  # "/etc/serverkey.pem"
la      $t9, ATP_UTIL_SSLCreateCtx
sw      $v0, 0x68+var_58($sp)
lui     $a2, 0x41
li      $v0, 1
lui     $a3, 0x41
sw      $v0, 0x68+var_50($sp)
sw      $zero, 0x68+var_54($sp)
la      $a2, aEtcRootPem  # "/etc/root.pem"
la      $a3, aEtcServercertP  # "/etc/servercert.pem"
move    $a0, $zero
jalr    $t9 ; ATP_UTIL_SSLCreateCtx
li      $a1, 2
lw      $gp, 0x68+var_48($sp)
bgez    $s2, loc_40304C
move    $s0, $v0
beqz    $v0, loc_4030C0
move    $a0, $zero
la      $t9, ATP_UTIL_SocketCreateServer
li      $a1, 0x9243
jalr    $t9 ; ATP_UTIL_SocketCreateServer
move    $a2, $zero
lw      $gp, 0x68+var_48($sp)
bgez    $v0, loc_403030
move    $s2, $v0
la      $t9, __errno_location
nop
jalr    $t9 ; __errno_location
nop
lw      $gp, 0x68+var_48($sp)
lw      $a1, 0($v0)
lui     $a0, 0x41
la      $t9, printf
la      $a0, aCreateTr064Htt  # "Create tr064 https socket failed: %d.\n"

loc_40301C:
jalr    $t9 ; printf
nop

loc_403024:
lw      $gp, 0x68+var_48($sp)
b       loc_403120
li      $v1, 0xFFFFFFFF

loc_403030:
la      $t9, listen
move    $a0, $v0
jalr    $t9 ; listen
li      $a1, 0x14
lw      $gp, 0x68+var_48($sp)
b       loc_403084
nop

loc_40304C:
bnez    $v0, loc_403084
nop
la      $t9, close
nop
jalr    $t9 ; close
move    $a0, $s2
lw      $gp, 0x68+var_48($sp)
lui     $a0, 0x41
la      $t9, puts
nop
jalr    $t9 ; puts
la      $a0, aCanNotStartHtt  # "Can not start https socket."
b       loc_4030B8
nop

loc_403084:
la      $v0, g_pstUPnPStack
la      $t9, ATP_HTTP_ServerAppendSocket
sw      $s2, 0x68+var_3C($sp)
lw      $v0, (g_pstUPnPStack - 0x42684C)($v0)
sw      $s0, 0x68+var_34($sp)
sw      $zero, 0x68+var_30($sp)
lw      $a0, 8($v0)
li      $v0, 2
sw      $v0, 0x68+var_38($sp)
li      $v0, 1
sw      $v0, 0x68+var_2C($sp)
jalr    $t9 ; ATP_HTTP_ServerAppendSocket
addiu   $a1, $sp, 0x68+var_3C

loc_4030B8:
lw      $gp, 0x68+var_48($sp)
nop

loc_4030C0:
la      $t9, upnpInitShmExt
nop
jalr    $t9 ; upnpInitShmExt
nop
lw      $gp, 0x68+var_48($sp)
nop
la      $t9, upnpSetSsdpSocket
nop
jalr    $t9 ; upnpSetSsdpSocket
move    $a0, $s3
lw      $gp, 0x68+var_48($sp)
lw      $a0, 0x68+var_40($sp)
la      $t9, upnpRestoreState
nop
jalr    $t9 ; upnpRestoreState
nop
lw      $gp, 0x68+var_48($sp)
li      $a0, 0x3C
la      $t9, ATP_UTIL_SockBaseStart
nop

loc_403110:
jalr    $t9
nop
lw      $gp, 0x68+var_48($sp)
move    $v1, $zero

loc_403120:
lw      $ra, 0x68+var_4($sp)
move    $v0, $v1
lw      $fp, 0x68+var_8($sp)
lw      $s7, 0x68+var_C($sp)
lw      $s6, 0x68+var_10($sp)
lw      $s5, 0x68+var_14($sp)
lw      $s4, 0x68+var_18($sp)
lw      $s3, 0x68+var_1C($sp)
lw      $s2, 0x68+var_20($sp)
lw      $s1, 0x68+var_24($sp)
lw      $s0, 0x68+var_28($sp)
jr      $ra
addiu   $sp, 0x68
 # End of function main

.align 4



.globl upnpIsUpnpEnabled
upnpIsUpnpEnabled:

var_18= -0x18
var_10= -0x10
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $gp, 0x28+var_18($sp)
la      $t9, ATP_DBGetPara
li      $v0, 1
lui     $a1, 0x6A00
sw      $v0, 0x28+var_10($sp)
addiu   $a2, $sp, 0x28+var_10
li      $a1, 0x6A004901
move    $a0, $zero
jalr    $t9 ; ATP_DBGetPara
li      $a3, 4
lw      $ra, 0x28+var_4($sp)
lw      $v0, 0x28+var_10($sp)
lw      $gp, 0x28+var_18($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function upnpIsUpnpEnabled




sub_4031AC:

var_40= -0x40
var_38= -0x38
var_34= -0x34
var_30= -0x30
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x50
li      $gp, 0x42E470
sw      $ra, 0x50+var_4($sp)
sw      $s4, 0x50+var_8($sp)
sw      $s3, 0x50+var_C($sp)
sw      $s2, 0x50+var_10($sp)
sw      $s1, 0x50+var_14($sp)
sw      $s0, 0x50+var_18($sp)
sw      $gp, 0x50+var_40($sp)
la      $t9, memcpy
addiu   $s1, $sp, 0x50+var_34
move    $s3, $a1
lui     $a1, 0x41
move    $s2, $a0
la      $a1, dword_4148E8
move    $a0, $s1
jalr    $t9 ; memcpy
li      $a2, 0x18
lw      $gp, 0x50+var_40($sp)
beqz    $s2, loc_403310
nop
beqz    $s3, loc_403314
lui     $s0, 0x4009
la      $t9, ATP_DBGetPara
li      $s4, 1
lui     $a1, 0x6A00
sw      $s4, 0x50+var_34($sp)
sw      $zero, 0x50+var_38($sp)
li      $a1, 0x6A001C02
move    $a0, $s1
addiu   $a2, $sp, 0x50+var_38
jalr    $t9 ; ATP_DBGetPara
li      $a3, 4
lw      $gp, 0x50+var_40($sp)
bnez    $v0, loc_403314
move    $s0, $v0
lw      $v0, 0x50+var_38($sp)
la      $t9, system
bnez    $v0, loc_4032BC
nop
lui     $a0, 0x41
jalr    $t9 ; system
la      $a0, aBrctlAddbrBr09  # "brctl addbr br0:9 2> /dev/null"
lw      $gp, 0x50+var_40($sp)
lui     $a0, 0x41
la      $t9, system
nop
jalr    $t9 ; system
la      $a0, aIfconfigBr0916  # "ifconfig br0:9 169.254.100.156 netmask "...
lw      $gp, 0x50+var_40($sp)
lui     $a0, 0x41
la      $t9, system
nop
jalr    $t9 ; system
la      $a0, aIfconfigBr09Up  # "ifconfig br0:9 up 2> /dev/null"
lw      $gp, 0x50+var_40($sp)
lui     $a2, 0x41
lui     $a3, 0x41
la      $t9, snprintf
move    $a0, $s2
move    $a1, $s3
la      $a2, (aSS+4)     # "%s"
jalr    $t9 ; snprintf
la      $a3, a169254100156  # "169.254.100.156"
lw      $gp, 0x50+var_40($sp)
b       loc_403314
nop

loc_4032BC:
lui     $a0, 0x41
jalr    $t9 ; system
la      $a0, aIfconfigBr09Do  # "ifconfig br0:9 down 2> /dev/null"
lw      $gp, 0x50+var_40($sp)
lui     $a0, 0x41
la      $t9, system
nop
jalr    $t9 ; system
la      $a0, aBrctlDelbrBr09  # "brctl delbr br0:9 2> /dev/null"
lw      $gp, 0x50+var_40($sp)
lui     $a1, 0xE880
sw      $s4, 0x50+var_30($sp)
la      $t9, ATP_DBGetPara
move    $a0, $s1
li      $a1, 0xE8802602
move    $a2, $s2
jalr    $t9 ; ATP_DBGetPara
move    $a3, $s3
lw      $gp, 0x50+var_40($sp)
b       loc_403314
move    $s0, $v0

loc_403310:
lui     $s0, 0x4009

loc_403314:
lw      $ra, 0x50+var_4($sp)
move    $v0, $s0
lw      $s4, 0x50+var_8($sp)
lw      $s3, 0x50+var_C($sp)
lw      $s2, 0x50+var_10($sp)
lw      $s1, 0x50+var_14($sp)
lw      $s0, 0x50+var_18($sp)
jr      $ra
addiu   $sp, 0x50
 # End of function sub_4031AC




sub_403338:

var_50= -0x50
var_48= -0x48
var_40= -0x40
var_18= -0x18
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x60
li      $gp, 0x42E470
sw      $ra, 0x60+var_4($sp)
sw      $s2, 0x60+var_8($sp)
sw      $s1, 0x60+var_C($sp)
sw      $s0, 0x60+var_10($sp)
sw      $gp, 0x60+var_50($sp)
la      $t9, ATP_MSG_SimpleBuilder
addiu   $s2, $sp, 0x60+var_40
li      $a2, 0x2000B
move    $a3, $zero
move    $s0, $a0
move    $s1, $a1
move    $a0, $s2
jalr    $t9 ; ATP_MSG_SimpleBuilder
move    $a1, $zero
lw      $gp, 0x60+var_50($sp)
li      $v0, 4
sw      $v0, 0x24($s2)
la      $t9, ATP_UTIL_GetSysTime
nop
jalr    $t9 ; ATP_UTIL_GetSysTime
addiu   $a0, $sp, 0x60+var_48
lw      $gp, 0x60+var_50($sp)
nop
la      $v0, g_pstShmExt
bnez    $s0, loc_4033C8
addiu   $a1, $sp, 0x60+var_18
lw      $a0, (g_pstShmExt - 0x426830)($v0)
lw      $v0, 0x60+var_48($sp)
li      $v1, 0xA8F2
addu    $v0, $v1
b       loc_4033D4
sw      $v0, 0xC($a0)

loc_4033C8:
lw      $v0, (g_pstShmExt - 0x426830)($v0)
nop
sw      $s1, 8($v0)

loc_4033D4:
beqz    $s1, loc_403400
nop
la      $v0, g_pstShmExt
nop
lw      $v0, (g_pstShmExt - 0x426830)($v0)
nop
lw      $v0, 0xC($v0)
nop
sltu    $v0, $s1, $v0
bnez    $v0, loc_40341C
li      $v0, 1

loc_403400:
la      $v0, g_pstShmExt
sw      $zero, 0($a1)
lw      $v0, (g_pstShmExt - 0x426830)($v0)
nop
lw      $v0, 0xC($v0)
b       loc_403424
sw      $v0, 0x20($s2)

loc_40341C:
sw      $v0, 0($a1)
sw      $s1, 0x20($s2)

loc_403424:
la      $t9, ATP_MSG_Send
nop
jalr    $t9 ; ATP_MSG_Send
move    $a0, $s2
lw      $ra, 0x60+var_4($sp)
lw      $gp, 0x60+var_50($sp)
lw      $s2, 0x60+var_8($sp)
lw      $s1, 0x60+var_C($sp)
lw      $s0, 0x60+var_10($sp)
jr      $ra
addiu   $sp, 0x60
 # End of function sub_403338




.globl ATP_UPNP_MsgProc
ATP_UPNP_MsgProc:

var_1D8= -0x1D8
var_1D0= -0x1D0
var_1C8= -0x1C8
var_1C4= -0x1C4
var_1C0= -0x1C0
var_1BC= -0x1BC
var_1B8= -0x1B8
var_1B4= -0x1B4
var_19C= -0x19C
var_17C= -0x17C
var_13C= -0x13C
var_138= -0x138
var_38= -0x38
var_34= -0x34
var_30= -0x30
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x1E8
li      $gp, 0x42E470
sw      $ra, 0x1E8+var_4($sp)
sw      $fp, 0x1E8+var_8($sp)
sw      $s7, 0x1E8+var_C($sp)
sw      $s6, 0x1E8+var_10($sp)
sw      $s5, 0x1E8+var_14($sp)
sw      $s4, 0x1E8+var_18($sp)
sw      $s3, 0x1E8+var_1C($sp)
sw      $s2, 0x1E8+var_20($sp)
sw      $s1, 0x1E8+var_24($sp)
sw      $s0, 0x1E8+var_28($sp)
sw      $gp, 0x1E8+var_1D0($sp)
beqz    $a0, loc_40396C
move    $s0, $a0
lw      $v1, 0($a0)
lui     $a0, 2
ori     $v0, $a0, 0xB
beq     $v1, $v0, loc_4038E4
ori     $v0, $a0, 0xC
sltu    $v0, $v1, $v0
beqz    $v0, loc_4034CC
lui     $v0, 1
li      $v0, 0x10005
beq     $v1, $v0, loc_403674
ori     $v0, $a0, 6
bne     $v1, $v0, loc_40396C
nop
b       loc_4038D4
nop

loc_4034CC:
lui     $a0, 9
ori     $v0, $a0, 2
beq     $v1, $v0, loc_4034F4
ori     $v0, $a0, 3
beq     $v1, $v0, loc_4035FC
ori     $v0, $a0, 1
bne     $v1, $v0, loc_40396C
nop
b       loc_403538
nop

loc_4034F4:
la      $t9, ATP_DBGetPara
addiu   $s0, $sp, 0x1E8+var_17C
li      $a1, 0x68804902
move    $a0, $zero
move    $a2, $s0
jalr    $t9 ; ATP_DBGetPara
li      $a3, 0x44
lw      $gp, 0x1E8+var_1D0($sp)
bnez    $v0, loc_40396C
move    $a0, $s0
la      $t9, ATP_UPNP_SetTr064SecurityInfo
sb      $zero, 0x1E8+var_13C($sp)
jalr    $t9 ; ATP_UPNP_SetTr064SecurityInfo
move    $a1, $zero
b       loc_403968
nop

loc_403538:
la      $t9, ATP_UPNP_RefreshUpnpTree
la      $s1, g_pstUPnPStack
jalr    $t9 ; ATP_UPNP_RefreshUpnpTree
nop
lw      $v1, 0x20($s0)
li      $v0, 1
lw      $gp, 0x1E8+var_1D0($sp)
bne     $v1, $v0, loc_4035CC
li      $v0, 0xFFFFFFFD
lw      $v1, (g_pstUPnPStack - 0x42684C)($s1)
la      $t9, ATP_UPNP_RefreshDeivce
li      $a0, 1
lw      $v0, 0($v1)
nop
ori     $v0, 2
jalr    $t9 ; ATP_UPNP_RefreshDeivce
sw      $v0, 0($v1)
lw      $gp, 0x1E8+var_1D0($sp)
nop
la      $t9, ATP_UPNP_RefreshDeivce
nop
jalr    $t9 ; ATP_UPNP_RefreshDeivce
move    $a0, $zero
lw      $gp, 0x1E8+var_1D0($sp)
lw      $v0, (g_pstUPnPStack - 0x42684C)($s1)
move    $a1, $zero
la      $t9, ATP_UPNP_BroadcastSSDP
lw      $a0, 4($v0)
li      $a2, 0x915F
jalr    $t9 ; ATP_UPNP_BroadcastSSDP
li      $a3, 1
lw      $gp, 0x1E8+var_1D0($sp)
lw      $v0, (g_pstUPnPStack - 0x42684C)($s1)
la      $t9, ATP_UPNP_BroadcastSSDP
lw      $a0, 4($v0)
b       loc_4035E8
li      $a1, 1

loc_4035CC:
lw      $a2, (g_pstUPnPStack - 0x42684C)($s1)
la      $t9, ATP_UPNP_BroadcastSSDP
lw      $v1, 0($a2)
lw      $a0, 4($a2)
move    $a1, $zero
and     $v1, $v0
sw      $v1, 0($a2)

loc_4035E8:
li      $a2, 0x915F
jalr    $t9 ; ATP_UPNP_BroadcastSSDP
li      $a3, 1
b       loc_403968
nop

loc_4035FC:
la      $t9, ATP_UPNP_ForceBroadcast
nop
jalr    $t9 ; ATP_UPNP_ForceBroadcast
move    $a0, $zero
lw      $gp, 0x1E8+var_1D0($sp)
nop
la      $t9, ATP_UPNP_RefreshUpnpTree
nop
jalr    $t9 ; ATP_UPNP_RefreshUpnpTree
nop
lw      $gp, 0x1E8+var_1D0($sp)
nop
la      $t9, ATP_UPNP_RefreshDeivce
nop
jalr    $t9 ; ATP_UPNP_RefreshDeivce
li      $a0, 1
lw      $gp, 0x1E8+var_1D0($sp)
nop
la      $t9, ATP_UPNP_RefreshDeivce
nop
jalr    $t9 ; ATP_UPNP_RefreshDeivce
move    $a0, $zero
lw      $gp, 0x1E8+var_1D0($sp)
nop
la      $t9, ATP_UPNP_ForceBroadcast
nop
jalr    $t9 ; ATP_UPNP_ForceBroadcast
li      $a0, 1
b       loc_403968
nop

loc_403674:
la      $t9, memcpy
addiu   $s1, $sp, 0x1E8+var_1B4
la      $a1, dword_4148D0
move    $a0, $s1
jalr    $t9 ; memcpy
li      $a2, 0x18
lw      $gp, 0x1E8+var_1D0($sp)
addiu   $s4, $s0, 0x28
move    $a0, $s4
la      $t9, ATP_CFM_GetParaNumOfMsg
move    $a1, $zero
move    $a2, $s1
jalr    $t9 ; ATP_CFM_GetParaNumOfMsg
addiu   $a3, $sp, 0x1E8+var_1C4
lw      $gp, 0x1E8+var_1D0($sp)
bnez    $v0, loc_40396C
lui     $v0, 0x41
addiu   $fp, $v0, (aMic - 0x410000)  # "mic"
addiu   $v0, $sp, 0x1E8+var_1C0
sw      $v0, 0x1E8+var_38($sp)
addiu   $v0, $sp, 0x1E8+var_1C8
sw      $s1, 0x1E8+var_30($sp)
sw      $v0, 0x1E8+var_34($sp)
move    $s1, $zero
addiu   $s2, $sp, 0x1E8+var_19C
la      $s7, g_pstShmExt
la      $s6, g_bBaseExit
addiu   $s3, $sp, 0x1E8+var_138
b       loc_4038B8
addiu   $s5, $sp, 0x1E8+var_1BC

loc_4036F0:
lw      $v1, 0x1E8+var_38($sp)
la      $t9, ATP_CFM_GetParaOfMsgBySeqNum
lw      $a3, 0x1E8+var_34($sp)
sw      $v1, 0x1E8+var_1D8($sp)
move    $a1, $zero
jalr    $t9 ; ATP_CFM_GetParaOfMsgBySeqNum
move    $a2, $s1
lw      $gp, 0x1E8+var_1D0($sp)
bnez    $v0, loc_40396C
lui     $v0, 0x6A00
lw      $a1, 0x1E8+var_1C8($sp)
li      $v0, 0x6A001C02
beq     $a1, $v0, loc_40384C
lui     $v1, 0x6A00
li      $v1, 0x6A001C03
sltu    $v0, $a1, $v1
beqz    $v0, loc_403758
lui     $v0, 0xE880
li      $v1, 0x977FE3FD
addu    $v0, $a1, $v1
sltiu   $v0, 2
beqz    $v0, loc_4038B4
nop
b       loc_40376C
move    $a2, $s3

loc_403758:
ori     $v0, 0x2602
bne     $a1, $v0, loc_4038B4
move    $a0, $s2
b       loc_40387C
nop

loc_40376C:
la      $t9, ATP_DBKeyListToDomain
lw      $a0, 0x1E8+var_30($sp)
jalr    $t9 ; ATP_DBKeyListToDomain
li      $a3, 0x100
lw      $gp, 0x1E8+var_1D0($sp)
bnez    $v0, loc_40396C
lui     $v0, 0x380
lw      $v1, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1C0($sp)
and     $v1, $v0
lui     $v0, 0x80
beq     $v1, $v0, loc_4037D4
addiu   $s0, $sp, 0x1E8+var_1B8
la      $t9, snprintf
lui     $a2, 0x41
move    $a3, $a1
move    $a0, $s2
li      $a1, 0x20
jalr    $t9 ; snprintf
la      $a2, (aMaxAgeD+8)  # "%d"
lw      $gp, 0x1E8+var_1D0($sp)
move    $a3, $s0
move    $a0, $s3
la      $t9, ATP_UPNP_GetServiceByDomain
b       loc_4037E0
move    $a1, $s2

loc_4037D4:
la      $t9, ATP_UPNP_GetServiceByDomain
move    $a3, $s0
move    $a0, $s3

loc_4037E0:
jalr    $t9 ; ATP_UPNP_GetServiceByDomain
move    $a2, $s5
lw      $gp, 0x1E8+var_1D0($sp)
bnez    $v0, loc_40396C
nop
la      $t9, ATP_UPNP_NeedToEvent
lw      $a0, 0x1E8+var_1BC($sp)
jalr    $t9 ; ATP_UPNP_NeedToEvent
nop
li      $v1, 1
lw      $gp, 0x1E8+var_1D0($sp)
bne     $v0, $v1, loc_403830
nop
la      $t9, ATP_UPNP_SendEvent
lw      $a0, 0x1E8+var_1BC($sp)
lw      $a1, 0x1E8+var_1B8($sp)
jalr    $t9 ; ATP_UPNP_SendEvent
nop
lw      $gp, 0x1E8+var_1D0($sp)
nop

loc_403830:
la      $t9, ATP_UPNP_FreeEvent
lw      $a0, 0x1E8+var_1B8($sp)
jalr    $t9 ; ATP_UPNP_FreeEvent
addiu   $s1, 1
lw      $gp, 0x1E8+var_1D0($sp)
b       loc_4038B8
nop

loc_40384C:
move    $a0, $s2
jal     sub_4031AC
li      $a1, 0x20
lw      $gp, 0x1E8+var_1D0($sp)
lw      $v0, 0($s7)
li      $s0, 1
lui     $a1, 9
la      $t9, ATP_MSG_SendSimpleMsg
sw      $s0, 4($v0)
move    $a0, $fp
b       loc_4038A4
li      $a1, 0x90004

loc_40387C:
jal     sub_4031AC
li      $a1, 0x20
lw      $gp, 0x1E8+var_1D0($sp)
lw      $v0, 0($s7)
li      $s0, 1
la      $t9, ATP_MSG_SendSimpleMsg
lui     $v1, 9
sw      $s0, 4($v0)
move    $a0, $fp
ori     $a1, $v1, 6

loc_4038A4:
jalr    $t9 ; ATP_MSG_SendSimpleMsg
move    $a2, $zero
lw      $gp, 0x1E8+var_1D0($sp)
sw      $s0, 0($s6)

loc_4038B4:
addiu   $s1, 1

loc_4038B8:
lw      $v0, 0x1E8+var_1C4($sp)
nop
sltu    $v0, $s1, $v0
bnez    $v0, loc_4036F0
move    $a0, $s4
b       loc_40396C
nop

loc_4038D4:
lw      $v1, 0x20($s0)
la      $v0, g_ulIdleTime
b       loc_40396C
sw      $v1, (g_ulIdleTime - 0x426AD0)($v0)

loc_4038E4:
lw      $v1, 0x24($s0)
li      $v0, 4
bne     $v1, $v0, loc_40396C
nop
lw      $a0, 0x28($s0)
nop
sltiu   $v0, $a0, 2
beqz    $v0, loc_40396C
nop
bnez    $a0, loc_40393C
nop
la      $t9, ATP_UPNP_ForceBroadcast
nop
jalr    $t9 ; ATP_UPNP_ForceBroadcast
li      $a0, 1
lw      $gp, 0x1E8+var_1D0($sp)
nop
la      $v0, g_pstShmExt
nop
lw      $v0, (g_pstShmExt - 0x426830)($v0)
nop
sw      $zero, 0xC($v0)

loc_40393C:
la      $s0, g_pstShmExt
la      $t9, ATP_UPNP_CheckExpiredSubscription
lw      $s1, (g_pstShmExt - 0x426830)($s0)
jalr    $t9 ; ATP_UPNP_CheckExpiredSubscription
nop
lw      $v1, (g_pstShmExt - 0x426830)($s0)
sw      $v0, 8($s1)
lw      $a1, 8($v1)
lw      $a0, 0xC($v1)
jal     sub_403338
nop

loc_403968:
lw      $gp, 0x1E8+var_1D0($sp)

loc_40396C:
lw      $ra, 0x1E8+var_4($sp)
lw      $fp, 0x1E8+var_8($sp)
lw      $s7, 0x1E8+var_C($sp)
lw      $s6, 0x1E8+var_10($sp)
lw      $s5, 0x1E8+var_14($sp)
lw      $s4, 0x1E8+var_18($sp)
lw      $s3, 0x1E8+var_1C($sp)
lw      $s2, 0x1E8+var_20($sp)
lw      $s1, 0x1E8+var_24($sp)
lw      $s0, 0x1E8+var_28($sp)
jr      $ra
addiu   $sp, 0x1E8
 # End of function ATP_UPNP_MsgProc




.globl ATP_UPNP_AdaptUpdateNextTimer
ATP_UPNP_AdaptUpdateNextTimer:
li      $gp, 0x42E470
la      $v0, g_pstShmExt
nop
lw      $v1, (g_pstShmExt - 0x426830)($v0)
nop
lw      $v0, 8($v1)
nop
beqz    $v0, loc_4039D0
move    $a1, $a0
sltu    $v0, $a0
bnez    $v0, locret_4039DC
nop

loc_4039D0:
lw      $a0, 0xC($v1)
j       sub_403338
nop

locret_4039DC:
jr      $ra
nop
 # End of function ATP_UPNP_AdaptUpdateNextTimer




.globl upnpRestoreState
upnpRestoreState:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
la      $s1, g_pstShmExt
move    $s0, $a0
lw      $v0, (g_pstShmExt - 0x426830)($s1)
nop
lw      $a1, 8($v0)
lw      $a0, 0xC($v0)
jal     sub_403338
nop
li      $v1, 1
lw      $gp, 0x28+var_18($sp)
bne     $s0, $v1, loc_403AC8
lui     $a0, 0x41
la      $t9, system
nop
jalr    $t9 ; system
la      $a0, aRouteAddNet239  # "route add -net 239.0.0.0 netmask 255.0."...
lw      $gp, 0x28+var_18($sp)
nop

loc_403A48:
la      $t9, ATP_UPNP_RefreshDeivce
nop
jalr    $t9 ; ATP_UPNP_RefreshDeivce
li      $a0, 1
lw      $gp, 0x28+var_18($sp)
nop
la      $t9, ATP_UPNP_RefreshDeivce
nop
jalr    $t9 ; ATP_UPNP_RefreshDeivce
move    $a0, $zero
lw      $gp, 0x28+var_18($sp)
nop
la      $t9, ATP_UPNP_ForceBroadcast
nop
jalr    $t9 ; ATP_UPNP_ForceBroadcast
move    $a0, $zero
lw      $gp, 0x28+var_18($sp)
nop
la      $t9, ATP_UPNP_ForceBroadcast
nop
jalr    $t9 ; ATP_UPNP_ForceBroadcast
li      $a0, 1
lw      $gp, 0x28+var_18($sp)
nop

loc_403AA8:
la      $v0, g_pstShmExt
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $v0, (g_pstShmExt - 0x426830)($v0)
lw      $s0, 0x28+var_C($sp)
addiu   $sp, 0x28
jr      $ra
sw      $zero, 4($v0)

loc_403AC8:
lw      $v0, (g_pstShmExt - 0x426830)($s1)
nop
lw      $v0, 4($v0)
nop
bne     $v0, $v1, loc_403AA8
nop
b       loc_403A48
nop
 # End of function upnpRestoreState




.globl ATP_UPNP_GetDeviceInfo
ATP_UPNP_GetDeviceInfo:

var_20= -0x20
var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x30+var_4($sp)
sw      $s1, 0x30+var_8($sp)
sw      $s0, 0x30+var_C($sp)
sw      $gp, 0x30+var_20($sp)
move    $s0, $a0
beqz    $a0, loc_403D18
lui     $s1, 0x4009
la      $t9, ATP_DBGetObj
li      $a1, 0x20000200
move    $a0, $zero
addiu   $a2, $sp, 0x30+var_18
jalr    $t9 ; ATP_DBGetObj
move    $a3, $zero
lw      $gp, 0x30+var_20($sp)
bnez    $v0, loc_403D18
move    $s1, $v0
lw      $a0, 0($s0)
nop
beqz    $a0, loc_403B5C
nop
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x30+var_20($sp)

loc_403B5C:
lw      $v0, 0x30+var_18($sp)
la      $t9, strdup
lw      $a0, 0($v0)
jalr    $t9 ; strdup
nop
lw      $a0, 4($s0)
lw      $gp, 0x30+var_20($sp)
beqz    $a0, loc_403B94
sw      $v0, 0($s0)
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x30+var_20($sp)

loc_403B94:
lw      $v0, 0x30+var_18($sp)
la      $t9, strdup
lw      $a0, 8($v0)
jalr    $t9 ; strdup
nop
lw      $a0, 8($s0)
lw      $gp, 0x30+var_20($sp)
beqz    $a0, loc_403BD0
sw      $v0, 4($s0)
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x30+var_20($sp)
nop

loc_403BD0:
la      $t9, strdup
lui     $a0, 0x41
jalr    $t9 ; strdup
la      $a0, aHuaweiModel  # "Huawei Model"
lw      $a0, 0xC($s0)
lw      $gp, 0x30+var_20($sp)
beqz    $a0, loc_403C04
sw      $v0, 8($s0)
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x30+var_20($sp)

loc_403C04:
lw      $v0, 0x30+var_18($sp)
la      $t9, strdup
lw      $a0, 0xC($v0)
jalr    $t9 ; strdup
nop
lw      $a0, 0x10($s0)
lw      $gp, 0x30+var_20($sp)
beqz    $a0, loc_403C3C
sw      $v0, 0xC($s0)
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x30+var_20($sp)

loc_403C3C:
lw      $v0, 0x30+var_18($sp)
la      $t9, strdup
lw      $a0, 0x14($v0)
jalr    $t9 ; strdup
nop
lw      $a0, 0x14($s0)
lw      $gp, 0x30+var_20($sp)
beqz    $a0, loc_403C78
sw      $v0, 0x10($s0)
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x30+var_20($sp)
nop

loc_403C78:
la      $t9, strdup
lui     $a0, 0x41
jalr    $t9 ; strdup
la      $a0, aHttpWwwHuaweiC  # "http://www.huawei.com"
lw      $a0, 0x18($s0)
lw      $gp, 0x30+var_20($sp)
beqz    $a0, loc_403CB0
sw      $v0, 0x14($s0)
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x30+var_20($sp)
nop

loc_403CB0:
la      $t9, strdup
lui     $a0, 0x41
jalr    $t9 ; strdup
la      $a0, aHttpWwwHuaweiC  # "http://www.huawei.com"
lw      $a0, 0x1C($s0)
lw      $gp, 0x30+var_20($sp)
beqz    $a0, loc_403CE8
sw      $v0, 0x18($s0)
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x30+var_20($sp)
nop

loc_403CE8:
la      $t9, strdup
lui     $a0, 0x41
jalr    $t9 ; strdup
la      $a0, a000000000001  # "000000000001"
lw      $gp, 0x30+var_20($sp)
lw      $a1, 0x30+var_18($sp)
lui     $a0, 0x2000
la      $t9, ATP_CFM_FreeObj
sw      $v0, 0x1C($s0)
jalr    $t9 ; ATP_CFM_FreeObj
li      $a0, 0x20000200
lw      $gp, 0x30+var_20($sp)

loc_403D18:
lw      $ra, 0x30+var_4($sp)
move    $v0, $s1
lw      $s1, 0x30+var_8($sp)
lw      $s0, 0x30+var_C($sp)
jr      $ra
addiu   $sp, 0x30
 # End of function ATP_UPNP_GetDeviceInfo




.globl ATP_UPNP_GetMacAddr
ATP_UPNP_GetMacAddr:

var_20= -0x20
var_18= -0x18
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x30+var_4($sp)
sw      $s2, 0x30+var_8($sp)
sw      $s1, 0x30+var_C($sp)
sw      $s0, 0x30+var_10($sp)
sw      $gp, 0x30+var_20($sp)
move    $s1, $a0
move    $s2, $a1
beqz    $a0, loc_403D94
lui     $v0, 0x4009
la      $t9, BSP_NET_GetBaseMacAddress
addiu   $s0, $sp, 0x30+var_18
jalr    $t9 ; BSP_NET_GetBaseMacAddress
move    $a0, $s0
lw      $gp, 0x30+var_20($sp)
move    $a0, $s1
move    $a1, $s0
la      $t9, memcpy
nop
jalr    $t9 ; memcpy
move    $a2, $s2
lw      $gp, 0x30+var_20($sp)
move    $v0, $zero

loc_403D94:
lw      $ra, 0x30+var_4($sp)
lw      $s2, 0x30+var_8($sp)
lw      $s1, 0x30+var_C($sp)
lw      $s0, 0x30+var_10($sp)
jr      $ra
addiu   $sp, 0x30
 # End of function ATP_UPNP_GetMacAddr




.globl ATP_UPNP_GetTr064SecurityInfo
ATP_UPNP_GetTr064SecurityInfo:

var_B0= -0xB0
var_A8= -0xA8
var_A4= -0xA4
var_64= -0x64
var_60= -0x60
var_20= -0x20
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0xC0
li      $gp, 0x42E470
sw      $ra, 0xC0+var_4($sp)
sw      $s3, 0xC0+var_8($sp)
sw      $s2, 0xC0+var_C($sp)
sw      $s1, 0xC0+var_10($sp)
sw      $s0, 0xC0+var_14($sp)
sw      $gp, 0xC0+var_B0($sp)
la      $t9, ATP_DBGetPara
addiu   $s0, $sp, 0xC0+var_A4
move    $s3, $a1
lui     $a1, 0x6880
move    $s2, $a0
li      $a1, 0x68804902
move    $a0, $zero
move    $a2, $s0
jalr    $t9 ; ATP_DBGetPara
li      $a3, 0x44
lw      $gp, 0xC0+var_B0($sp)
bnez    $v0, loc_403E5C
move    $s1, $v0
la      $t9, strdup
move    $a0, $s0
jalr    $t9 ; strdup
sb      $zero, 0xC0+var_64($sp)
lw      $gp, 0xC0+var_B0($sp)
addiu   $s0, $sp, 0xC0+var_60
sw      $v0, 0($s2)
la      $t9, BSP_SYS_GetInfo
li      $v0, 0x44
li      $a0, 0x14
move    $a1, $s0
addiu   $a2, $sp, 0xC0+var_A8
jalr    $t9 ; BSP_SYS_GetInfo
sw      $v0, 0xC0+var_A8($sp)
lw      $gp, 0xC0+var_B0($sp)
sb      $zero, 0xC0+var_20($sp)
la      $t9, strdup
nop
jalr    $t9 ; strdup
move    $a0, $s0
lw      $gp, 0xC0+var_B0($sp)
sw      $v0, 0($s3)

loc_403E5C:
lw      $ra, 0xC0+var_4($sp)
move    $v0, $s1
lw      $s3, 0xC0+var_8($sp)
lw      $s2, 0xC0+var_C($sp)
lw      $s1, 0xC0+var_10($sp)
lw      $s0, 0xC0+var_14($sp)
jr      $ra
addiu   $sp, 0xC0
 # End of function ATP_UPNP_GetTr064SecurityInfo




.globl upnpSetSsdpSocket
upnpSetSsdpSocket:

var_58= -0x58
var_50= -0x50
var_4C= -0x4C
var_48= -0x48
var_44= -0x44
var_40= -0x40
var_3C= -0x3C
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x68
li      $gp, 0x42E470
sw      $ra, 0x68+var_4($sp)
sw      $s3, 0x68+var_8($sp)
sw      $s2, 0x68+var_C($sp)
sw      $s1, 0x68+var_10($sp)
sw      $s0, 0x68+var_14($sp)
sw      $gp, 0x68+var_58($sp)
addiu   $s0, $sp, 0x68+var_3C
li      $a1, 0x20
move    $s2, $a0
move    $a0, $s0
la      $s3, g_pstUPnPStack
jal     sub_4031AC
sb      $zero, 0x68+var_3C($sp)
lw      $gp, 0x68+var_58($sp)
lw      $s1, (g_pstUPnPStack - 0x42684C)($s3)
la      $t9, inet_addr
nop
jalr    $t9 ; inet_addr
move    $a0, $s0
lw      $gp, 0x68+var_58($sp)
bgez    $s2, loc_403F6C
sw      $v0, 4($s1)
la      $t9, ATP_UTIL_SocketCreateServer
move    $a0, $zero
li      $a1, 0x76C
jalr    $t9 ; ATP_UTIL_SocketCreateServer
li      $a2, 1
move    $s2, $v0
li      $v0, 0xFFFFFFFF
lw      $gp, 0x68+var_58($sp)
beq     $s2, $v0, loc_403FA0
move    $a0, $s2
la      $t9, ATP_UTIL_SocketSetTTL
nop
jalr    $t9 ; ATP_UTIL_SocketSetTTL
li      $a1, 4
lw      $gp, 0x68+var_58($sp)
lw      $v0, (g_pstUPnPStack - 0x42684C)($s3)
la      $t9, ATP_UTIL_SocketSetMcastIf
lw      $a1, 4($v0)
jalr    $t9 ; ATP_UTIL_SocketSetMcastIf
move    $a0, $s2
lw      $gp, 0x68+var_58($sp)
lui     $a0, 0x41
la      $t9, inet_addr
nop
jalr    $t9 ; inet_addr
la      $a0, a239255255250  # "239.255.255.250"
lw      $gp, 0x68+var_58($sp)
lw      $v1, (g_pstUPnPStack - 0x42684C)($s3)
move    $a1, $v0
la      $t9, ATP_UTIL_SocketJoinMcast
lw      $a2, 4($v1)
jalr    $t9 ; ATP_UTIL_SocketJoinMcast
move    $a0, $s2
lw      $gp, 0x68+var_58($sp)
nop

loc_403F6C:
la      $v0, g_pstUPnPStack
sw      $zero, 0x68+var_48($sp)
sw      $zero, 0x68+var_44($sp)
lw      $v0, (g_pstUPnPStack - 0x42684C)($v0)
sw      $zero, 0x68+var_40($sp)
la      $t9, ATP_HTTP_ClientSetSocket
lw      $a0, 0xC($v0)
li      $v0, 1
sw      $s2, 0x68+var_50($sp)
sw      $v0, 0x68+var_4C($sp)
jalr    $t9 ; ATP_HTTP_ClientSetSocket
addiu   $a1, $sp, 0x68+var_50
lw      $gp, 0x68+var_58($sp)

loc_403FA0:
lw      $ra, 0x68+var_4($sp)
lw      $s3, 0x68+var_8($sp)
lw      $s2, 0x68+var_C($sp)
lw      $s1, 0x68+var_10($sp)
lw      $s0, 0x68+var_14($sp)
jr      $ra
addiu   $sp, 0x68
 # End of function upnpSetSsdpSocket




.globl upnpInitShmExt
upnpInitShmExt:

var_28= -0x28
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x38
li      $gp, 0x42E470
sw      $ra, 0x38+var_4($sp)
sw      $s1, 0x38+var_8($sp)
sw      $s0, 0x38+var_C($sp)
sw      $gp, 0x38+var_28($sp)
la      $t9, ATP_UTIL_GVarGetValue
la      $s1, g_pstShmExt
lui     $s0, 2
ori     $a0, $s0, 2
jalr    $t9 ; ATP_UTIL_GVarGetValue
move    $a1, $zero
lw      $gp, 0x38+var_28($sp)
bnez    $v0, loc_404070
sw      $v0, (g_pstShmExt - 0x426830)($s1)
la      $t9, ATP_UTIL_GVarSetValue
li      $a2, 0x10
ori     $a0, $s0, 2
addiu   $a1, $sp, 0x38+var_20
sw      $zero, 0x38+var_20($sp)
sw      $zero, 0x38+var_1C($sp)
sw      $zero, 0x38+var_18($sp)
jalr    $t9 ; ATP_UTIL_GVarSetValue
sw      $zero, 0x38+var_14($sp)
lw      $gp, 0x38+var_28($sp)
move    $a1, $zero
la      $t9, ATP_UTIL_GVarGetValue
nop
jalr    $t9 ; ATP_UTIL_GVarGetValue
ori     $a0, $s0, 2
lw      $gp, 0x38+var_28($sp)
move    $a0, $zero
la      $t9, time
nop
jalr    $t9 ; time
sw      $v0, (g_pstShmExt - 0x426830)($s1)
lw      $gp, 0x38+var_28($sp)
nop
la      $t9, srand
nop
jalr    $t9 ; srand
move    $a0, $v0
lw      $gp, 0x38+var_28($sp)
nop

loc_404070:
la      $v0, g_pstShmExt
nop
lw      $v0, (g_pstShmExt - 0x426830)($v0)
nop
bnez    $v0, loc_40409C
nop
la      $t9, puts
lui     $a0, 0x41
jalr    $t9 ; puts
la      $a0, aGetPubInfoFrom  # "Get pub info from shm failed."
lw      $gp, 0x38+var_28($sp)

loc_40409C:
lw      $ra, 0x38+var_4($sp)
lw      $s1, 0x38+var_8($sp)
lw      $s0, 0x38+var_C($sp)
jr      $ra
addiu   $sp, 0x38
 # End of function upnpInitShmExt




.globl ATP_UPNP_StrDup
ATP_UPNP_StrDup:
li      $gp, 0x42E470
la      $v0, g_pvUpnpShmHandle
move    $a1, $a0
la      $t9, ATP_UTIL_BgetStrdup
lw      $a0, (g_pvUpnpShmHandle - 0x426844)($v0)
jr      $t9 ; ATP_UTIL_BgetStrdup
nop
 # End of function ATP_UPNP_StrDup




.globl ATP_UPNP_Free
ATP_UPNP_Free:
lui     $gp, 0x43
beqz    $a0, locret_4040F4
li      $gp, 0x42E470
la      $v0, g_pvUpnpShmHandle
move    $a1, $a0
la      $t9, ATP_UTIL_BgetFree
lw      $a0, (g_pvUpnpShmHandle - 0x426844)($v0)
jr      $t9 ; ATP_UTIL_BgetFree
nop

locret_4040F4:
jr      $ra
nop
 # End of function ATP_UPNP_Free




.globl ATP_UPNP_Malloc
ATP_UPNP_Malloc:
li      $gp, 0x42E470
la      $v0, g_pvUpnpShmHandle
move    $a1, $a0
la      $t9, ATP_UTIL_BgetMalloc
lw      $a0, (g_pvUpnpShmHandle - 0x426844)($v0)
jr      $t9 ; ATP_UTIL_BgetMalloc
nop
 # End of function ATP_UPNP_Malloc

.align 4
sw      $zero, 0($a0)
jr      $ra
move    $v0, $zero
sw      $zero, 0($a0)
jr      $ra
move    $v0, $zero
sw      $zero, 0($a0)
jr      $ra
move    $v0, $zero
sw      $zero, 0($a0)
jr      $ra
move    $v0, $zero
sw      $zero, 0($a0)
jr      $ra
move    $v0, $zero
sw      $zero, 0($a0)
jr      $ra
move    $v0, $zero



sub_404168:

var_20= -0x20
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x30+var_4($sp)
sw      $s3, 0x30+var_8($sp)
sw      $s2, 0x30+var_C($sp)
sw      $s1, 0x30+var_10($sp)
sw      $s0, 0x30+var_14($sp)
sw      $gp, 0x30+var_20($sp)
move    $s3, $a1
move    $s2, $a0
andi    $s1, $a2, 0xFFFF
beqz    $a1, loc_404224
move    $s0, $zero
la      $v0, g_pstShmExt
nop
lw      $v0, (g_pstShmExt - 0x426830)($v0)
nop
lw      $s0, 0($v0)
b       loc_404214
nop

loc_4041BC:
bnez    $s2, loc_4041D0
nop
lb      $v0, 0x20($s0)
b       loc_4041DC
nop

loc_4041D0:
jalr    $t9 ; strcmp
nop
lw      $gp, 0x30+var_20($sp)

loc_4041DC:
bnez    $v0, loc_404210
nop
lhu     $v0, 8($s0)
nop
bne     $v0, $s1, loc_404210
addiu   $a0, $s0, 0x10
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a1, $s3
lw      $gp, 0x30+var_20($sp)
beqz    $v0, loc_404224
nop

loc_404210:
lw      $s0, 0x84($s0)

loc_404214:
la      $t9, strcmp
addiu   $a1, $s0, 0x20
bnez    $s0, loc_4041BC
move    $a0, $s2

loc_404224:
lw      $ra, 0x30+var_4($sp)
move    $v0, $s0
lw      $s3, 0x30+var_8($sp)
lw      $s2, 0x30+var_C($sp)
lw      $s1, 0x30+var_10($sp)
lw      $s0, 0x30+var_14($sp)
jr      $ra
addiu   $sp, 0x30
 # End of function sub_404168




sub_404244:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
move    $s0, $a0

loc_404264:
beqz    $s0, loc_4042C8
nop
lw      $v0, 0($s0)
la      $t9, free
lw      $s1, 8($s0)
beqz    $v0, loc_40428C
move    $a0, $v0
jalr    $t9 ; free
nop
lw      $gp, 0x28+var_18($sp)

loc_40428C:
lw      $v0, 4($s0)
la      $t9, free
beqz    $v0, loc_4042B0
move    $a0, $v0
jalr    $t9 ; free
nop
lw      $gp, 0x28+var_18($sp)
nop
la      $t9, free

loc_4042B0:
move    $a0, $s0
jalr    $t9 ; free
move    $s0, $s1
lw      $gp, 0x28+var_18($sp)
b       loc_404264
nop

loc_4042C8:
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_404244




sub_4042DC:

var_48= -0x48
var_40= -0x40
var_38= -0x38
var_34= -0x34
var_30= -0x30
var_2C= -0x2C
var_28= -0x28
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x58
li      $gp, 0x42E470
sw      $ra, 0x58+var_4($sp)
sw      $s2, 0x58+var_8($sp)
sw      $s1, 0x58+var_C($sp)
sw      $s0, 0x58+var_10($sp)
sw      $gp, 0x58+var_40($sp)
la      $t9, memcpy
addiu   $s1, $sp, 0x58+var_28
move    $s2, $a1
lui     $a1, 0x41
move    $s0, $a0
la      $a1, dword_415290
move    $a0, $s1
jalr    $t9 ; memcpy
li      $a2, 0x18
lw      $gp, 0x58+var_40($sp)
beqz    $s0, loc_404488
nop
beqz    $s2, loc_404488
move    $a0, $s0
la      $t9, ATP_DBDomainToKeyList
move    $a1, $s1
jalr    $t9 ; ATP_DBDomainToKeyList
addiu   $a2, $sp, 0x58+var_38
lw      $gp, 0x58+var_40($sp)
bnez    $v0, loc_40448C
move    $s0, $v0
la      $t9, ATP_CFM_CfgMsgHeadBuilder
addiu   $s0, $sp, 0x58+var_30
lui     $a1, 1
move    $a0, $s0
li      $a1, 0x10002
move    $a2, $zero
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a3, $zero
lw      $gp, 0x58+var_40($sp)
lw      $a2, 0x58+var_38($sp)
move    $a0, $s0
la      $t9, ATP_CFM_CfgMsgAppendPara
move    $a1, $s1
move    $a3, $zero
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $s0, $v0
addu    $s0, $v0, $s0
lw      $gp, 0x58+var_40($sp)
bnez    $s0, loc_40448C
addiu   $a1, $sp, 0x58+var_2C
la      $t9, ATP_CFMA_GetPara
lw      $a0, 0x58+var_30($sp)
jalr    $t9 ; ATP_CFMA_GetPara
li      $a2, 0x2710
lw      $gp, 0x58+var_40($sp)
lw      $a0, 0x58+var_30($sp)
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
move    $s0, $v0
lw      $gp, 0x58+var_40($sp)
bnez    $s0, loc_40448C
addiu   $v0, $sp, 0x58+var_34
la      $t9, ATP_CFM_GetParaOfMsgBySeqNum
lw      $a0, 0x58+var_2C($sp)
sw      $v0, 0x58+var_48($sp)
move    $a1, $zero
move    $a2, $zero
jalr    $t9 ; ATP_CFM_GetParaOfMsgBySeqNum
move    $a3, $zero
lw      $v1, 0x58+var_38($sp)
lui     $a0, 0x380
move    $s0, $v0
and     $v1, $a0
lui     $v0, 0x80
lw      $gp, 0x58+var_40($sp)
bne     $v1, $v0, loc_40442C
nop
la      $t9, strdup
lw      $a0, 0x58+var_34($sp)
jalr    $t9 ; strdup
nop
lw      $gp, 0x58+var_40($sp)
b       loc_40446C
sw      $v0, 0($s2)

loc_40442C:
la      $t9, malloc
nop
jalr    $t9 ; malloc
li      $a0, 0x20
lw      $gp, 0x58+var_40($sp)
beqz    $v0, loc_40446C
sw      $v0, 0($s2)
la      $t9, snprintf
lw      $a3, 0x58+var_34($sp)
lui     $a2, 0x41
move    $a0, $v0
la      $a2, (aMaxAgeD+8)  # "%d"
jalr    $t9 ; snprintf
li      $a1, 0x20
lw      $gp, 0x58+var_40($sp)
nop

loc_40446C:
la      $t9, ATP_CFM_MsgFree
lw      $a0, 0x58+var_2C($sp)
jalr    $t9 ; ATP_CFM_MsgFree
nop
lw      $gp, 0x58+var_40($sp)
b       loc_40448C
nop

loc_404488:
lui     $s0, 0x4009

loc_40448C:
lw      $ra, 0x58+var_4($sp)
move    $v0, $s0
lw      $s2, 0x58+var_8($sp)
lw      $s1, 0x58+var_C($sp)
lw      $s0, 0x58+var_10($sp)
jr      $ra
addiu   $sp, 0x58
 # End of function sub_4042DC




sub_4044A8:

var_20= -0x20
var_18= -0x18
var_10= -0x10
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x30+var_4($sp)
sw      $s0, 0x30+var_8($sp)
sw      $gp, 0x30+var_18($sp)
la      $t9, TSP_XML_CreateNode
addiu   $v0, $sp, 0x30+var_10
move    $a3, $a2
sw      $v0, 0x30+var_20($sp)
move    $a2, $a1
move    $s0, $a0
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a0, $zero
lw      $gp, 0x30+var_18($sp)
bnez    $v0, loc_404504
nop
la      $t9, TSP_XML_AppendChildNode
lw      $a1, 0x30+var_10($sp)
jalr    $t9 ; TSP_XML_AppendChildNode
move    $a0, $s0
lw      $gp, 0x30+var_18($sp)

loc_404504:
lw      $ra, 0x30+var_4($sp)
lw      $s0, 0x30+var_8($sp)
jr      $ra
addiu   $sp, 0x30
 # End of function sub_4044A8

lui     $gp, 0x43
addiu   $sp, -0x290
li      $gp, 0x42E470
sw      $ra, 0x28C($sp)
sw      $fp, 0x288($sp)
sw      $s7, 0x284($sp)
sw      $s6, 0x280($sp)
sw      $s5, 0x27C($sp)
sw      $s4, 0x278($sp)
sw      $s3, 0x274($sp)
sw      $s2, 0x270($sp)
sw      $s1, 0x26C($sp)
sw      $s0, 0x268($sp)
sw      $gp, 0x18($sp)
move    $s5, $a0
beqz    $a0, loc_404E00
lui     $s1, 0x4009
la      $t9, ATP_TR064_GetDomainNameOfService
lw      $a0, 0x28($a0)
addiu   $s6, $sp, 0x54
move    $a1, $s6
li      $a2, 0x100
jalr    $t9 ; ATP_TR064_GetDomainNameOfService
move    $a3, $zero
lw      $gp, 0x18($sp)
bnez    $v0, loc_404E00
move    $s1, $v0
la      $t9, UpnpGetActListByActName
lw      $a0, 0x28($s5)
lw      $a1, 0x24($s5)
jalr    $t9 ; UpnpGetActListByActName
nop
lw      $gp, 0x18($sp)
bnez    $v0, loc_4045AC
move    $s3, $v0
li      $v0, 0x1F5
b       loc_404DFC
sw      $v0, 0($s5)

loc_4045AC:
lw      $v0, 8($v0)
lw      $v1, 0xC($s3)
beqz    $v0, loc_404B50
nop
bnez    $v1, loc_404E00
li      $s1, 0x1F5
la      $t9, memset
addiu   $s0, $sp, 0x154
sw      $zero, 0x20($sp)
move    $a0, $s0
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x100
lw      $s2, 8($s3)
lw      $gp, 0x18($sp)
beqz    $s2, loc_404E00
lui     $s1, 0x4009
addiu   $v0, $sp, 0x28
sw      $v0, 0x260($sp)
addiu   $v0, $sp, 0x24
move    $s4, $s0
sw      $v0, 0x264($sp)
li      $s6, 0x74
li      $s3, 0x3B

loc_40460C:
lw      $v0, 4($s2)
nop
lw      $v0, 8($v0)
nop
bnez    $v0, loc_4049C0
nop
lw      $a3, 0($s2)
nop
beqz    $a3, loc_4046F4
lui     $a2, 0x41
la      $t9, snprintf
move    $a0, $s4
li      $a1, 0x100
jalr    $t9 ; snprintf
la      $a2, (aSS+4)     # "%s"
lw      $gp, 0x18($sp)
lw      $a0, 0x2C($s5)
sw      $zero, 0x24($sp)
la      $t9, TSP_XML_GetNodeFirstChild
b       loc_4046C4
sw      $zero, 0x28($sp)

loc_404660:
lw      $v0, 0x264($sp)
jalr    $t9 ; TSP_XML_GetNodeValue
sw      $v0, 0x10($sp)
lw      $gp, 0x18($sp)
nop
la      $t9, strcmp
bnez    $v0, loc_404708
move    $a0, $s4
lw      $v0, 0x28($sp)
nop
beqz    $v0, loc_4046BC
move    $a1, $v0
jalr    $t9 ; strcmp
nop
lw      $gp, 0x18($sp)
bnez    $v0, loc_4046BC
nop
lw      $s0, 0x24($sp)
nop
bnez    $s0, loc_40471C
li      $v0, 0x192
b       loc_404710
sw      $v0, 0($s5)

loc_4046BC:
la      $t9, TSP_XML_GetNodeNextSibling
move    $a0, $s0

loc_4046C4:
jalr    $t9
nop
lw      $gp, 0x18($sp)
move    $s0, $v0
move    $a0, $v0
la      $t9, TSP_XML_GetNodeValue
move    $a1, $zero
lw      $a3, 0x260($sp)
bnez    $v0, loc_404660
move    $a2, $zero
b       loc_40470C
li      $v0, 0x192

loc_4046F4:
li      $v0, 0x25B
sw      $v0, 0($s5)
lui     $v0, 0x4009
b       loc_404E00
ori     $s1, $v0, 0xB

loc_404708:
li      $v0, 0x192

loc_40470C:
sw      $v0, 0($s5)

loc_404710:
lui     $v0, 0x4009
b       loc_404E00
ori     $s1, $v0, 4

loc_40471C:
lw      $v0, 4($s2)
nop
beqz    $v0, loc_40476C
nop
lw      $v1, 4($v0)
la      $t9, snprintf
beqz    $v1, loc_404748
addiu   $a3, $sp, 0x54
sw      $v1, 0x10($sp)
b       loc_404754
move    $a0, $s4

loc_404748:
lw      $v0, 0($v0)
move    $a0, $s4
sw      $v0, 0x10($sp)

loc_404754:
lui     $a2, 0x41
li      $a1, 0x100
jalr    $t9 ; snprintf
la      $a2, (aNotifySHttp11H+0x8C)  # "%s%s"
lw      $gp, 0x18($sp)
nop

loc_40476C:
la      $t9, malloc
nop
jalr    $t9 ; malloc
li      $a0, 0xC
lw      $gp, 0x18($sp)
beqz    $v0, loc_404E3C
move    $s1, $v0
la      $t9, strdup
sw      $zero, 0($v0)
sw      $zero, 4($v0)
sw      $zero, 8($v0)
jalr    $t9 ; strdup
move    $a0, $s4
lw      $gp, 0x18($sp)
bnez    $v0, loc_4047C4
sw      $v0, 0($s1)
la      $t9, free
nop
jalr    $t9 ; free
move    $a0, $s1
b       loc_404E3C
nop

loc_4047C4:
la      $t9, strdup
move    $a0, $s0
jalr    $t9 ; strdup
li      $fp, 0x3E
lw      $gp, 0x18($sp)
move    $a0, $v0
sw      $v0, 4($s1)
la      $t9, strlen
move    $s0, $v0
jalr    $t9 ; strlen
li      $s7, 0x6D
lw      $gp, 0x18($sp)
addu    $t0, $s0, $v0
move    $a0, $s0
li      $t9, 0x3C
li      $t8, 0x61
li      $t2, 0x70
li      $t7, 0x26
li      $t1, 0x6F
li      $t6, 0x73
li      $t5, 0x27
li      $t4, 0x75
b       loc_404980
li      $t3, 0x22

loc_404824:
lb      $a3, 0($s0)
nop
bne     $a3, $v0, loc_404974
li      $v0, 0x71
lb      $a1, 1($s0)
nop
bne     $a1, $v0, loc_40488C
nop
lb      $v0, 2($s0)
nop
bne     $v0, $t4, loc_40488C
nop
lb      $v0, 3($s0)
nop
bne     $v0, $t1, loc_40488C
nop
lb      $v0, 4($s0)
nop
bne     $v0, $s6, loc_404914
li      $v0, 0x6C
lb      $v0, 5($s0)
nop
bne     $v0, $s3, loc_404910
addiu   $v1, $s0, 5
b       loc_4048D8
sb      $t3, 0($a0)

loc_40488C:
bne     $a1, $t8, loc_404914
li      $v0, 0x6C
lb      $a2, 2($s0)
nop
bne     $a2, $t2, loc_4048E0
nop
lb      $v0, 3($s0)
nop
bne     $v0, $t1, loc_4048E0
nop
lb      $v0, 4($s0)
nop
bne     $v0, $t6, loc_4048E0
nop
lb      $v0, 5($s0)
nop
bne     $v0, $s3, loc_4048E0
addiu   $v1, $s0, 5
sb      $t5, 0($a0)

loc_4048D8:
b       loc_404978
move    $s0, $v1

loc_4048E0:
bne     $a2, $s7, loc_404914
li      $v0, 0x6C
lb      $v0, 3($s0)
nop
bne     $v0, $t2, loc_404914
li      $v0, 0x6C
lb      $v0, 4($s0)
nop
bne     $v0, $s3, loc_404910
addiu   $v1, $s0, 4
b       loc_4048D8
sb      $t7, 0($a0)

loc_404910:
li      $v0, 0x6C

loc_404914:
bne     $a1, $v0, loc_404944
li      $v0, 0x67
lb      $v0, 2($s0)
nop
bne     $v0, $s6, loc_404944
li      $v0, 0x67
lb      $v0, 3($s0)
nop
bne     $v0, $s3, loc_404974
addiu   $v1, $s0, 3
b       loc_4048D8
sb      $t9, 0($a0)

loc_404944:
bne     $a1, $v0, loc_404974
nop
lb      $v0, 2($s0)
nop
bne     $v0, $s6, loc_404974
nop
lb      $v0, 3($s0)
nop
bne     $v0, $s3, loc_404974
addiu   $v1, $s0, 3
b       loc_4048D8
sb      $fp, 0($a0)

loc_404974:
sb      $a3, 0($a0)

loc_404978:
addiu   $a0, 1
addiu   $s0, 1

loc_404980:
sltu    $v0, $s0, $t0
bnez    $v0, loc_404824
li      $v0, 0x26
sb      $zero, 0($a0)
lw      $v0, 0x20($sp)
nop
bnez    $v0, loc_4049AC
addiu   $v1, $v0, 8
b       loc_4049C0
sw      $s1, 0x20($sp)

loc_4049A8:
addiu   $v1, $v0, 8

loc_4049AC:
lw      $v0, 8($v0)
nop
bnez    $v0, loc_4049A8
nop
sw      $s1, 0($v1)

loc_4049C0:
lw      $s2, 8($s2)
nop
bnez    $s2, loc_40460C
lui     $a1, 0x41
la      $t9, memcpy
lw      $s0, 0x20($sp)
addiu   $s3, $sp, 0x3C
la      $a1, dword_415260
move    $a0, $s3
jalr    $t9 ; memcpy
li      $a2, 0x18
lw      $gp, 0x18($sp)
sw      $zero, 0x38($sp)
sw      $zero, 0x30($sp)
sw      $zero, 0x2C($sp)
move    $s2, $s0
beqz    $s0, loc_404B3C
lui     $s1, 0x4009
lui     $v0, 1
move    $s0, $s3
ori     $s7, $v0, 1
addiu   $s6, $sp, 0x38
addiu   $s5, $sp, 0x2C
lui     $s4, 0x380
addiu   $s3, $sp, 0x30

loc_404A24:
la      $t9, ATP_DBDomainToKeyList
lw      $a0, 0($s2)
move    $a1, $s0
jalr    $t9 ; ATP_DBDomainToKeyList
move    $a2, $s6
lw      $gp, 0x18($sp)
move    $a1, $s5
la      $t9, ATP_CFM_UtilConvertValueType
bnez    $v0, loc_404B04
move    $s1, $v0
lw      $a2, 0x38($sp)
lw      $a0, 4($s2)
jalr    $t9 ; ATP_CFM_UtilConvertValueType
and     $a2, $s4
lw      $gp, 0x18($sp)
beqz    $v0, loc_404E34
nop
lw      $v0, 0x30($sp)
nop
bnez    $v0, loc_404A98
move    $a0, $s3
la      $t9, ATP_CFM_CfgMsgHeadBuilder
lw      $a3, 0x38($sp)
move    $a1, $s7
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a2, $s0
lw      $gp, 0x18($sp)
bnez    $v0, loc_404B04
move    $s1, $v0

loc_404A98:
la      $t9, ATP_CFM_CfgMsgAppendPara
lw      $a2, 0x38($sp)
lw      $a3, 0x2C($sp)
move    $a0, $s3
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $a1, $s0
lw      $gp, 0x18($sp)
bnez    $v0, loc_404B04
move    $s1, $v0
lw      $s2, 8($s2)
nop
bnez    $s2, loc_404A24
nop
la      $t9, ATP_CFMA_SetPara
lw      $a0, 0x30($sp)
jalr    $t9 ; ATP_CFMA_SetPara
li      $a1, 0x2710
lw      $gp, 0x18($sp)
lw      $a0, 0x30($sp)
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
move    $s0, $v0
bnez    $s0, loc_404B2C
lui     $v0, 0x4001
b       loc_404B3C
move    $s1, $s0

loc_404B04:
lw      $a0, 0x30($sp)
nop
beqz    $a0, loc_404B3C
nop
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
nop
b       loc_404B3C
nop

loc_404B2C:
ori     $v0, 0x403
beq     $s0, $v0, loc_404B3C
nop
move    $s1, $s0

loc_404B3C:
lw      $a0, 0x20($sp)
jal     sub_404244
nop
b       loc_404D58
nop

loc_404B50:
beqz    $v1, loc_404DFC
addiu   $s4, $sp, 0x154
la      $t9, memset
move    $a0, $s4
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x100
lw      $gp, 0x18($sp)
addiu   $s2, $sp, 0x3C
lui     $a1, 0x41
la      $t9, memcpy
sw      $zero, 0x2C($sp)
sw      $zero, 0x30($sp)
sw      $zero, 0x34($sp)
la      $a1, dword_415278
move    $a0, $s2
jalr    $t9 ; memcpy
li      $a2, 0x18
lw      $v0, 0xC($s3)
lw      $gp, 0x18($sp)
sw      $zero, 0x38($sp)
beqz    $v0, loc_404E00
lui     $s1, 0x4009
la      $t9, ATP_CFM_CfgMsgHeadBuilder
addiu   $s0, $sp, 0x30
li      $a1, 0x10002
move    $a0, $s0
move    $a2, $zero
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a3, $zero
lw      $gp, 0x18($sp)
bnez    $v0, loc_404E00
move    $s1, $v0
lui     $v0, 0x41
move    $fp, $s6
addiu   $s6, $v0, (aNotifySHttp11H+0x8C - 0x410000)  # "%s%s"
addiu   $v0, $sp, 0x38
move    $s7, $s2
sw      $s0, 0x25C($sp)
lw      $s2, 0xC($s3)
b       loc_404CB4
sw      $v0, 0x258($sp)

loc_404BFC:
lw      $v1, 4($s2)
nop
lw      $v0, 8($v1)
nop
bnez    $v0, loc_404CAC
move    $a0, $s4
lw      $v0, 4($v1)
li      $a1, 0x100
move    $a2, $s6
la      $t9, snprintf
beqz    $v0, loc_404C34
move    $a3, $fp
b       loc_404C48
sw      $v0, 0x10($sp)

loc_404C34:
lw      $v0, 0($v1)
move    $a0, $s4
sw      $v0, 0x10($sp)
li      $a1, 0x100
move    $a2, $s6

loc_404C48:
jalr    $t9 ; snprintf
nop
lw      $gp, 0x18($sp)
lw      $a2, 0x258($sp)
move    $a0, $s4
la      $t9, ATP_DBDomainToKeyList
nop
jalr    $t9 ; ATP_DBDomainToKeyList
move    $a1, $s7
lw      $gp, 0x18($sp)
lw      $a2, 0x38($sp)
lw      $a0, 0x25C($sp)
la      $t9, ATP_CFM_CfgMsgAppendPara
move    $a1, $s7
move    $a3, $zero
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $s0, $v0
addu    $s1, $v0, $s0
lw      $gp, 0x18($sp)
beqz    $s1, loc_404CAC
nop
la      $t9, ATP_CFM_MsgFree
lw      $a0, 0x30($sp)
b       loc_404D50
nop

loc_404CAC:
lw      $s2, 8($s2)
nop

loc_404CB4:
bnez    $s2, loc_404BFC
addiu   $a1, $sp, 0x34
la      $t9, ATP_CFMA_GetPara
lw      $a0, 0x30($sp)
jalr    $t9 ; ATP_CFMA_GetPara
li      $a2, 0x2710
lw      $gp, 0x18($sp)
lw      $a0, 0x30($sp)
move    $s0, $v0
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
move    $s1, $v0
lw      $gp, 0x18($sp)
bnez    $s0, loc_404E00
move    $s2, $zero
lw      $s0, 0xC($s3)
addiu   $fp, $sp, 0x38
addiu   $s7, $sp, 0x2C
lui     $s6, 0x380
lui     $s4, 0x80
b       loc_404DE4
addiu   $s3, $sp, 0x154

loc_404D10:
lw      $v0, 4($s0)
nop
lw      $v0, 8($v0)
nop
beqz    $v0, loc_404D64
move    $a2, $v0
lw      $a1, 0($s0)
lw      $a0, 0x30($s5)
addiu   $s2, -1

loc_404D34:
jal     sub_4044A8
nop
lw      $gp, 0x18($sp)
beqz    $v0, loc_404DDC
move    $s1, $v0

loc_404D48:
la      $t9, ATP_CFM_MsgFree
lw      $a0, 0x34($sp)

loc_404D50:
jalr    $t9 ; ATP_CFM_MsgFree
nop

loc_404D58:
lw      $gp, 0x18($sp)
b       loc_404E00
nop

loc_404D64:
la      $t9, ATP_CFM_GetParaOfMsgBySeqNum
lw      $a0, 0x34($sp)
move    $a2, $s2
move    $a1, $zero
sw      $s7, 0x10($sp)
jalr    $t9 ; ATP_CFM_GetParaOfMsgBySeqNum
move    $a3, $fp
lw      $gp, 0x18($sp)
lui     $a2, 0x41
move    $a0, $s3
la      $t9, snprintf
li      $a1, 0x100
la      $a2, (aMaxAgeD+8)  # "%d"
bnez    $v0, loc_404D48
move    $s1, $v0
lw      $v0, 0x38($sp)
lw      $v1, 0x2C($sp)
and     $v0, $s6
beq     $v0, $s4, loc_404DCC
move    $a3, $v1
jalr    $t9 ; snprintf
nop
lw      $a0, 0x30($s5)
lw      $a1, 0($s0)
b       loc_404D34
move    $a2, $s3

loc_404DCC:
lw      $a1, 0($s0)
lw      $a0, 0x30($s5)
b       loc_404D34
move    $a2, $v1

loc_404DDC:
lw      $s0, 8($s0)
addiu   $s2, 1

loc_404DE4:
bnez    $s0, loc_404D10
move    $s1, $zero
la      $t9, ATP_CFM_MsgFree
lw      $a0, 0x34($sp)
b       loc_404D50
nop

loc_404DFC:
li      $s1, 0x1F5

loc_404E00:
lw      $ra, 0x28C($sp)
move    $v0, $s1
lw      $fp, 0x288($sp)
lw      $s7, 0x284($sp)
lw      $s6, 0x280($sp)
lw      $s5, 0x27C($sp)
lw      $s4, 0x278($sp)
lw      $s3, 0x274($sp)
lw      $s2, 0x270($sp)
lw      $s1, 0x26C($sp)
lw      $s0, 0x268($sp)
jr      $ra
addiu   $sp, 0x290

loc_404E34:
b       loc_404B04
lui     $s1, 0x4009

loc_404E3C:
lw      $a0, 0x20($sp)
li      $v0, 0x192
jal     sub_404244
sw      $v0, 0($s5)
lui     $v0, 0x4009
lw      $gp, 0x18($sp)
b       loc_404E00
ori     $s1, $v0, 2



sub_404E5C:

var_68= -0x68
var_60= -0x60
var_58= -0x58
var_54= -0x54
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x78
li      $gp, 0x42E470
sw      $ra, 0x78+var_4($sp)
sw      $s2, 0x78+var_8($sp)
sw      $s1, 0x78+var_C($sp)
sw      $s0, 0x78+var_10($sp)
sw      $gp, 0x78+var_60($sp)
la      $t9, snprintf
addiu   $s0, $sp, 0x78+var_54
move    $s1, $a2
lui     $a3, 0x41
lui     $a2, 0x41
sw      $a1, 0x78+var_68($sp)
la      $a3, dword_414900
la      $a2, (aNotifySHttp11H+0x8C)  # "%s%s"
li      $a1, 0x40
move    $s2, $a0
jalr    $t9 ; snprintf
move    $a0, $s0
lw      $gp, 0x78+var_60($sp)
addiu   $v0, $sp, 0x78+var_58
sw      $v0, 0x78+var_68($sp)
la      $t9, TSP_XML_CreateNode
move    $a2, $s0
move    $a3, $s1
move    $a0, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x78+var_60($sp)
bnez    $v0, loc_404EF0
nop
la      $t9, TSP_XML_AppendChildNode
lw      $a1, 0x78+var_58($sp)
jalr    $t9 ; TSP_XML_AppendChildNode
move    $a0, $s2
lw      $gp, 0x78+var_60($sp)

loc_404EF0:
lw      $ra, 0x78+var_4($sp)
lw      $s2, 0x78+var_8($sp)
lw      $s1, 0x78+var_C($sp)
lw      $s0, 0x78+var_10($sp)
jr      $ra
addiu   $sp, 0x78
 # End of function sub_404E5C

move    $v0, $a0
lw      $a0, 0x30($a0)
lui     $a1, 0x41
lui     $a2, 0x41
sw      $zero, 0($v0)
la      $a1, aFcspreserved  # "FCSPreserved"
j       sub_404E5C
la      $a2, (aWanconnectiond+0x14)  # "1"
move    $v0, $a0
lw      $a0, 0x30($a0)
lui     $a1, 0x41
lui     $a2, 0x41
sw      $zero, 0($v0)
la      $a1, aAutoconfig  # "AutoConfig"
j       sub_404E5C
la      $a2, (aWanconnectiond+0x14)  # "1"
move    $v0, $a0
lw      $a0, 0x30($a0)
lui     $a1, 0x41
lui     $a2, 0x41
sw      $zero, 0($v0)
la      $a1, aEnabledforinte  # "EnabledForInternet"
j       sub_404E5C
la      $a2, (aWanconnectiond+0x14)  # "1"
move    $v0, $a0
lw      $a0, 0x30($a0)
lui     $a1, 0x41
lui     $a2, 0x41
sw      $zero, 0($v0)
la      $a1, aSubnetmask  # "SubnetMask"
j       sub_404E5C
la      $a2, a2552552550  # "255.255.255.0"
move    $v0, $a0
lw      $a0, 0x30($a0)
lui     $a1, 0x41
lui     $a2, 0x41
sw      $zero, 0($v0)
la      $a1, aDhcprelay  # "DHCPRelay"
j       sub_404E5C
la      $a2, (aWanconnectiond+0x14)  # "1"
addiu   $sp, -0x20
sw      $ra, 0x1C($sp)
sw      $s0, 0x18($sp)
sw      $gp, 0x10($sp)
move    $s0, $a0
lw      $a0, 0x30($a0)
lui     $a1, 0x41
lui     $a2, 0x41
la      $a1, aUpstreammaxbit  # "UpstreamMaxBitRate"
jal     sub_404E5C
la      $a2, (a2552552550+0xC)  # "0"
lw      $a0, 0x30($s0)
lui     $a1, 0x41
lui     $a2, 0x41
la      $a1, aDownstreammaxb  # "DownstreamMaxBitRate"
la      $a2, (aWanconnectiond+0x14)  # "1"
jal     sub_404E5C
move    $s0, $v0
lw      $ra, 0x1C($sp)
addu    $v0, $s0
lw      $gp, 0x10($sp)
lw      $s0, 0x18($sp)
jr      $ra
addiu   $sp, 0x20
lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x2C($sp)
sw      $s1, 0x28($sp)
sw      $s0, 0x24($sp)
sw      $gp, 0x10($sp)
move    $s1, $a0
la      $a0, dword_414988
addiu   $a1, $sp, 0x18
jal     sub_4042DC
sw      $zero, 0x18($sp)
lw      $gp, 0x10($sp)
bnez    $v0, loc_405080
move    $s0, $v0
lw      $a2, 0x18($sp)
nop
beqz    $a2, loc_405080
lui     $a1, 0x41
lw      $a0, 0x30($s1)
jal     sub_404E5C
la      $a1, aEnable     # "Enable"
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
la      $t9, free
nop
jalr    $t9 ; free
move    $s0, $v0
lw      $gp, 0x10($sp)

loc_405080:
lw      $ra, 0x2C($sp)
move    $v0, $s0
lw      $s1, 0x28($sp)
lw      $s0, 0x24($sp)
jr      $ra
addiu   $sp, 0x30
lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x2C($sp)
sw      $s1, 0x28($sp)
sw      $s0, 0x24($sp)
sw      $gp, 0x10($sp)
move    $s1, $a0
la      $a0, aInternetgatewa_0  # "InternetGatewayDevice.DeviceInfo.Softwa"...
jal     sub_4042DC
addiu   $a1, $sp, 0x18
lw      $gp, 0x10($sp)
bnez    $v0, loc_40510C
move    $s0, $v0
lw      $a2, 0x18($sp)
nop
beqz    $a2, loc_40510C
lui     $a1, 0x41
lw      $a0, 0x30($s1)
jal     sub_404E5C
la      $a1, aSoftwareversio  # "SoftwareVersion"
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
la      $t9, free
nop
jalr    $t9 ; free
move    $s0, $v0
lw      $gp, 0x10($sp)

loc_40510C:
lw      $ra, 0x2C($sp)
move    $v0, $s0
lw      $s1, 0x28($sp)
lw      $s0, 0x24($sp)
jr      $ra
addiu   $sp, 0x30
lui     $gp, 0x43
addiu   $sp, -0x168
li      $gp, 0x42E470
sw      $ra, 0x164($sp)
sw      $fp, 0x160($sp)
sw      $s7, 0x15C($sp)
sw      $s6, 0x158($sp)
sw      $s5, 0x154($sp)
sw      $s4, 0x150($sp)
sw      $s3, 0x14C($sp)
sw      $s2, 0x148($sp)
sw      $s1, 0x144($sp)
sw      $s0, 0x140($sp)
sw      $gp, 0x10($sp)
la      $t9, memset
addiu   $s1, $sp, 0x3C
move    $s5, $a0
move    $a1, $zero
move    $a0, $s1
jalr    $t9 ; memset
li      $a2, 0x100
lw      $gp, 0x10($sp)
addiu   $s2, $sp, 0x1C
move    $a0, $s2
la      $t9, memset
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x20
lw      $gp, 0x10($sp)
lw      $a0, 0x28($s5)
li      $v0, 0x1F5
la      $t9, ATP_TR064_GetDomainNameOfService
sw      $v0, 0($s5)
sw      $zero, 0x18($sp)
move    $a1, $s1
li      $a2, 0x100
jalr    $t9 ; ATP_TR064_GetDomainNameOfService
move    $a3, $zero
lw      $gp, 0x10($sp)
bnez    $v0, loc_405354
move    $s0, $v0
lui     $v0, 0x41
move    $s4, $s2
addiu   $fp, $v0, (aWepkeyD - 0x410000)  # "WEPKey%d"
move    $s2, $s1
addiu   $s6, $sp, 0x18
move    $s1, $zero
li      $s7, 4

loc_4051E4:
la      $t9, snprintf
addiu   $s3, $s1, 1
la      $a2, aWepkeyDWepkey  # "WEPKey.%d.WEPKey"
move    $a3, $s3
move    $a0, $s4
jalr    $t9 ; snprintf
li      $a1, 0x20
lw      $gp, 0x10($sp)
beqz    $s1, loc_405248
nop
la      $t9, strlen
nop
jalr    $t9 ; strlen
move    $a0, $s2
lw      $gp, 0x10($sp)
move    $a0, $s4
la      $t9, strlen
nop
jalr    $t9 ; strlen
move    $s0, $v0
subu    $s0, $v0
addu    $s0, $s2, $s0
lw      $gp, 0x10($sp)
sb      $zero, 0($s0)

loc_405248:
la      $t9, strcat
move    $a0, $s2
jalr    $t9 ; strcat
move    $a1, $s4
move    $a0, $s2
jal     sub_4042DC
move    $a1, $s6
lw      $gp, 0x10($sp)
move    $a3, $s1
move    $a0, $s4
la      $t9, snprintf
move    $a2, $fp
li      $a1, 0x20
move    $s0, $v0
bnez    $v0, loc_405354
move    $s1, $s3
lw      $v0, 0x18($sp)
nop
beqz    $v0, loc_405354
nop
jalr    $t9 ; snprintf
nop
lw      $a0, 0x30($s5)
lw      $a2, 0x18($sp)
jal     sub_404E5C
move    $a1, $s4
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x10($sp)
bne     $s3, $s7, loc_4051E4
sw      $zero, 0x18($sp)
la      $t9, strlen
nop
jalr    $t9 ; strlen
move    $a0, $s2
lw      $gp, 0x10($sp)
addu    $v0, $s2, $v0
lui     $a1, 0x41
la      $t9, strcat
la      $a1, aPresharedkey1P  # "PreSharedKey.1.PreSharedKey"
move    $a0, $s2
jalr    $t9 ; strcat
sb      $zero, -0xF($v0)
move    $a0, $s2
jal     sub_4042DC
move    $a1, $s6
lw      $gp, 0x10($sp)
bnez    $v0, loc_405354
move    $s0, $v0
lw      $a2, 0x18($sp)
nop
beqz    $a2, loc_405354
lui     $a1, 0x41
lw      $a0, 0x30($s5)
jal     sub_404E5C
la      $a1, aPresharedkey  # "PreSharedKey"
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
la      $t9, free
nop
jalr    $t9 ; free
move    $s0, $v0
lw      $gp, 0x10($sp)

loc_405354:
lw      $ra, 0x164($sp)
move    $v0, $s0
lw      $fp, 0x160($sp)
lw      $s7, 0x15C($sp)
lw      $s6, 0x158($sp)
lw      $s5, 0x154($sp)
lw      $s4, 0x150($sp)
lw      $s3, 0x14C($sp)
lw      $s2, 0x148($sp)
lw      $s1, 0x144($sp)
lw      $s0, 0x140($sp)
jr      $ra
addiu   $sp, 0x168
lui     $gp, 0x43
addiu   $sp, -0x138
li      $gp, 0x42E470
sw      $ra, 0x134($sp)
sw      $s3, 0x130($sp)
sw      $s2, 0x12C($sp)
sw      $s1, 0x128($sp)
sw      $s0, 0x124($sp)
sw      $gp, 0x10($sp)
la      $t9, ATP_TR064_GetDomainNameOfService
move    $s2, $a0
lw      $a0, 0x28($a0)
addiu   $s1, $sp, 0x1C
move    $a1, $s1
li      $a2, 0x100
jalr    $t9 ; ATP_TR064_GetDomainNameOfService
move    $a3, $zero
lw      $gp, 0x10($sp)
bnez    $v0, loc_40548C
lui     $s3, 0x41
la      $t9, strcat
move    $a0, $s1
jalr    $t9 ; strcat
addiu   $a1, $s3, (aNatenabled - 0x410000)  # "NATEnabled"
move    $a0, $s1
jal     sub_4042DC
addiu   $a1, $sp, 0x18
lw      $gp, 0x10($sp)
bnez    $v0, loc_40548C
nop
lw      $s0, 0x18($sp)
nop
beqz    $s0, loc_40548C
nop
la      $t9, atoi
nop
jalr    $t9 ; atoi
move    $a0, $s0
lw      $gp, 0x10($sp)
move    $a0, $s0
la      $t9, free
nop
jalr    $t9 ; free
move    $s0, $v0
lw      $gp, 0x10($sp)
lui     $a2, 0x41
sltu    $a3, $zero, $s0
la      $t9, snprintf
la      $a2, (aMaxAgeD+8)  # "%d"
move    $a0, $s1
jalr    $t9 ; snprintf
li      $a1, 0x100
lw      $a0, 0x30($s2)
lui     $a1, 0x41
lui     $a2, 0x41
la      $a1, aRsipavailable  # "RSIPAvailable"
jal     sub_404E5C
la      $a2, (a2552552550+0xC)  # "0"
lw      $a0, 0x30($s2)
addiu   $a1, $s3, (aNatenabled - 0x410000)  # "NATEnabled"
move    $a2, $s1
jal     sub_404E5C
move    $s0, $v0
lw      $gp, 0x10($sp)
addu    $v0, $s0

loc_40548C:
lw      $ra, 0x134($sp)
lw      $s3, 0x130($sp)
lw      $s2, 0x12C($sp)
lw      $s1, 0x128($sp)
lw      $s0, 0x124($sp)
jr      $ra
addiu   $sp, 0x138



sub_4054A8:

var_40= -0x40
var_38= -0x38
var_34= -0x34
var_30= -0x30
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x50
li      $gp, 0x42E470
sw      $ra, 0x50+var_4($sp)
sw      $s3, 0x50+var_8($sp)
sw      $s2, 0x50+var_C($sp)
sw      $s1, 0x50+var_10($sp)
sw      $s0, 0x50+var_14($sp)
sw      $gp, 0x50+var_40($sp)
la      $t9, memcpy
addiu   $s1, $sp, 0x50+var_30
lui     $a1, 0x41
move    $s3, $a0
la      $a1, dword_4152F0
move    $a0, $s1
jalr    $t9 ; memcpy
li      $a2, 0x18
lw      $gp, 0x50+var_40($sp)
bnez    $s3, loc_405500
lui     $v0, 0x4009
b       loc_4055F0
ori     $s0, $v0, 2

loc_405500:
la      $t9, atoi
move    $a0, $s3
sw      $zero, 0x50+var_38($sp)
jalr    $t9 ; atoi
sw      $zero, 0x50+var_34($sp)
lw      $gp, 0x50+var_40($sp)
la      $a0, dword_414988
la      $t9, ATP_DBDomainToKeyList
move    $a1, $s1
addiu   $a2, $sp, 0x50+var_34
jalr    $t9 ; ATP_DBDomainToKeyList
move    $s2, $v0
lw      $gp, 0x50+var_40($sp)
bnez    $v0, loc_4055F0
move    $s0, $v0
la      $t9, ATP_CFM_CfgMsgHeadBuilder
addiu   $s0, $sp, 0x50+var_38
lui     $a1, 1
move    $a0, $s0
li      $a1, 0x10001
move    $a2, $zero
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a3, $zero
lw      $gp, 0x50+var_40($sp)
lw      $a2, 0x50+var_34($sp)
move    $a0, $s0
la      $t9, ATP_CFM_CfgMsgAppendPara
move    $a1, $s1
move    $a3, $s2
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $s0, $v0
addu    $s0, $v0, $s0
lw      $gp, 0x50+var_40($sp)
lw      $a0, 0x50+var_38($sp)
beqz    $s0, loc_4055AC
nop
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
nop
b       loc_4055EC
nop

loc_4055AC:
la      $t9, ATP_CFMA_SetPara
nop
jalr    $t9 ; ATP_CFMA_SetPara
li      $a1, 0x2710
lw      $gp, 0x50+var_40($sp)
lw      $a0, 0x50+var_38($sp)
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
move    $s0, $v0
lw      $gp, 0x50+var_40($sp)
nop
la      $t9, free
nop
jalr    $t9 ; free
move    $a0, $s3

loc_4055EC:
lw      $gp, 0x50+var_40($sp)

loc_4055F0:
lw      $ra, 0x50+var_4($sp)
move    $v0, $s0
lw      $s3, 0x50+var_8($sp)
lw      $s2, 0x50+var_C($sp)
lw      $s1, 0x50+var_10($sp)
lw      $s0, 0x50+var_14($sp)
jr      $ra
addiu   $sp, 0x50
 # End of function sub_4054A8

lui     $gp, 0x43
addiu   $sp, -0x168
li      $gp, 0x42E470
sw      $ra, 0x164($sp)
sw      $fp, 0x160($sp)
sw      $s7, 0x15C($sp)
sw      $s6, 0x158($sp)
sw      $s5, 0x154($sp)
sw      $s4, 0x150($sp)
sw      $s3, 0x14C($sp)
sw      $s2, 0x148($sp)
sw      $s1, 0x144($sp)
sw      $s0, 0x140($sp)
sw      $gp, 0x18($sp)
beqz    $a0, loc_405924
move    $s7, $a0
la      $t9, ATP_XML_GetChildNodeByName
lw      $a0, 0x2C($a0)
li      $v0, 0x1F5
lui     $a1, 0x41
sw      $v0, 0($s7)
sw      $zero, 0x28($sp)
sw      $zero, 0x24($sp)
sw      $zero, 0x20($sp)
la      $a1, aNewremotehost  # "NewRemoteHost"
move    $a2, $zero
jalr    $t9 ; ATP_XML_GetChildNodeByName
addiu   $a3, $sp, 0x20
lw      $gp, 0x18($sp)
bnez    $v0, loc_405928
li      $v0, 0x192
la      $t9, ATP_XML_GetChildNodeByName
lw      $a0, 0x2C($s7)
la      $a1, aNewexternalpor  # "NewExternalPort"
move    $a2, $zero
jalr    $t9 ; ATP_XML_GetChildNodeByName
addiu   $a3, $sp, 0x24
lw      $gp, 0x18($sp)
bnez    $v0, loc_405928
li      $v0, 0x192
lw      $a0, 0x24($sp)
nop
beqz    $a0, loc_405928
nop
la      $t9, atoi
nop
jalr    $t9 ; atoi
nop
lw      $gp, 0x18($sp)
lw      $a0, 0x2C($s7)
lui     $a1, 0x41
la      $t9, ATP_XML_GetChildNodeByName
la      $a1, aNewprotocol  # "NewProtocol"
move    $a2, $zero
addiu   $a3, $sp, 0x28
jalr    $t9 ; ATP_XML_GetChildNodeByName
move    $s0, $v0
lw      $gp, 0x18($sp)
bnez    $v0, loc_405928
li      $v0, 0x192
lw      $a1, 0x28($sp)
nop
beqz    $a1, loc_405928
nop
lw      $a0, 0x20($sp)
jal     sub_404168
andi    $a2, $s0, 0xFFFF
lw      $gp, 0x18($sp)
beqz    $v0, loc_405924
move    $fp, $v0
la      $t9, snprintf
lhu     $a3, 0xA($v0)
addiu   $s1, $sp, 0x30
lui     $s3, 0x41
move    $a0, $s1
addiu   $a2, $s3, (aMaxAgeD+8 - 0x410000)  # "%d"
jalr    $t9 ; snprintf
li      $a1, 0x100
lw      $gp, 0x18($sp)
addiu   $s2, $sp, 0x2C
lui     $a2, 0x41
la      $t9, TSP_XML_CreateNode
move    $a3, $s1
la      $a2, aNewinternalpor  # "NewInternalPort"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x10($sp)
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x2C($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
sw      $v0, 0x130($sp)
lw      $gp, 0x18($sp)
la      $a2, aNewinternalcli  # "NewInternalClient"
la      $t9, TSP_XML_CreateNode
addiu   $a3, $fp, 0x30
move    $a0, $zero
move    $a1, $zero
sw      $s2, 0x10($sp)
jalr    $t9 ; TSP_XML_CreateNode
move    $s0, $v0
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x2C($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
sw      $v0, 0x138($sp)
lw      $gp, 0x18($sp)
lw      $a3, 4($fp)
move    $a0, $s1
la      $t9, snprintf
addiu   $a2, $s3, (aMaxAgeD+8 - 0x410000)  # "%d"
li      $a1, 0x100
jalr    $t9 ; snprintf
sw      $v0, 0x134($sp)
lw      $gp, 0x18($sp)
lui     $a2, 0x41
move    $a3, $s1
la      $t9, TSP_XML_CreateNode
la      $a2, aNewenabled  # "NewEnabled"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x10($sp)
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x2C($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
move    $s6, $v0
lw      $gp, 0x18($sp)
la      $a2, aNewportmapping  # "NewPortMappingDescription"
la      $t9, TSP_XML_CreateNode
addiu   $a3, $fp, 0x40
move    $a0, $zero
move    $a1, $zero
sw      $s2, 0x10($sp)
jalr    $t9 ; TSP_XML_CreateNode
move    $s5, $v0
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x2C($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
move    $s4, $v0
lw      $gp, 0x18($sp)
lw      $a3, 0xC($fp)
addiu   $a2, $s3, (aMaxAgeD+8 - 0x410000)  # "%d"
la      $t9, snprintf
move    $a0, $s1
li      $a1, 0x100
jalr    $t9 ; snprintf
move    $s3, $v0
lw      $gp, 0x18($sp)
lui     $a2, 0x41
move    $a3, $s1
la      $t9, TSP_XML_CreateNode
la      $a2, aNewleasedurati  # "NewLeaseDuration"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x10($sp)
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x2C($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
move    $s1, $v0
lw      $v1, 0x130($sp)
lw      $gp, 0x18($sp)
addu    $s0, $v1
lw      $v1, 0x138($sp)
nop
addu    $s0, $v1
lw      $v1, 0x134($sp)
nop
addu    $s0, $v1
addu    $s0, $s6
addu    $s0, $s5
addu    $s0, $s4
addu    $s0, $s3
addu    $s0, $s1
addu    $v0, $s0, $v0
bnez    $v0, loc_405928
nop
b       loc_405928
sw      $zero, 0($s7)

loc_405924:
lui     $v0, 0x4009

loc_405928:
lw      $ra, 0x164($sp)
lw      $fp, 0x160($sp)
lw      $s7, 0x15C($sp)
lw      $s6, 0x158($sp)
lw      $s5, 0x154($sp)
lw      $s4, 0x150($sp)
lw      $s3, 0x14C($sp)
lw      $s2, 0x148($sp)
lw      $s1, 0x144($sp)
lw      $s0, 0x140($sp)
jr      $ra
addiu   $sp, 0x168
lui     $gp, 0x43
addiu   $sp, -0x178
li      $gp, 0x42E470
sw      $ra, 0x174($sp)
sw      $fp, 0x170($sp)
sw      $s7, 0x16C($sp)
sw      $s6, 0x168($sp)
sw      $s5, 0x164($sp)
sw      $s4, 0x160($sp)
sw      $s3, 0x15C($sp)
sw      $s2, 0x158($sp)
sw      $s1, 0x154($sp)
sw      $s0, 0x150($sp)
sw      $gp, 0x18($sp)
la      $v0, g_pstShmExt
nop
lw      $v0, (g_pstShmExt - 0x426830)($v0)
nop
lw      $fp, 0($v0)
beqz    $a0, loc_405D50
move    $s7, $a0
la      $t9, ATP_XML_GetChildNodeByName
lw      $a0, 0x2C($a0)
li      $v0, 0x1F5
lui     $a1, 0x41
sw      $v0, 0($s7)
sw      $zero, 0x20($sp)
la      $a1, aNewportmapping_0  # "NewPortMappingIndex"
move    $a2, $zero
jalr    $t9 ; ATP_XML_GetChildNodeByName
addiu   $a3, $sp, 0x20
lw      $gp, 0x18($sp)
bnez    $v0, loc_405D54
nop
lw      $a0, 0x20($sp)
nop
beqz    $a0, loc_405D50
nop
la      $t9, atoi
nop
jalr    $t9 ; atoi
nop
lw      $gp, 0x18($sp)
b       loc_405A1C
move    $v1, $zero

loc_405A0C:
beq     $v1, $v0, loc_405A2C
addiu   $v1, 1
lw      $fp, 0x84($fp)
nop

loc_405A1C:
bnez    $fp, loc_405A0C
nop
b       loc_405D54
lui     $v0, 0x4009

loc_405A2C:
la      $t9, TSP_XML_CreateNode
addiu   $s2, $sp, 0x24
la      $a2, aNewremotehost  # "NewRemoteHost"
addiu   $a3, $fp, 0x20
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x10($sp)
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x24($sp)
la      $t9, TSP_XML_AppendChildNode
sw      $v0, 0x128($sp)
jalr    $t9 ; TSP_XML_AppendChildNode
addiu   $s1, $sp, 0x28
lw      $gp, 0x18($sp)
lhu     $a3, 8($fp)
lui     $s3, 0x41
la      $t9, snprintf
move    $a0, $s1
addiu   $a2, $s3, (aMaxAgeD+8 - 0x410000)  # "%d"
li      $a1, 0x100
jalr    $t9 ; snprintf
move    $s0, $v0
lw      $gp, 0x18($sp)
lui     $a2, 0x41
move    $a3, $s1
la      $t9, TSP_XML_CreateNode
la      $a2, aNewexternalpor  # "NewExternalPort"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x10($sp)
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x24($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
sw      $v0, 0x148($sp)
lw      $gp, 0x18($sp)
la      $a2, aNewprotocol  # "NewProtocol"
la      $t9, TSP_XML_CreateNode
addiu   $a3, $fp, 0x10
move    $a0, $zero
move    $a1, $zero
sw      $s2, 0x10($sp)
jalr    $t9 ; TSP_XML_CreateNode
sw      $v0, 0x144($sp)
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x24($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
sw      $v0, 0x140($sp)
lw      $gp, 0x18($sp)
lhu     $a3, 0xA($fp)
move    $a0, $s1
la      $t9, snprintf
addiu   $a2, $s3, (aMaxAgeD+8 - 0x410000)  # "%d"
li      $a1, 0x100
jalr    $t9 ; snprintf
sw      $v0, 0x13C($sp)
lw      $gp, 0x18($sp)
lui     $a2, 0x41
move    $a3, $s1
la      $t9, TSP_XML_CreateNode
la      $a2, aNewinternalpor  # "NewInternalPort"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x10($sp)
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x24($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
sw      $v0, 0x138($sp)
lw      $gp, 0x18($sp)
la      $a2, aNewinternalcli  # "NewInternalClient"
la      $t9, TSP_XML_CreateNode
addiu   $a3, $fp, 0x30
move    $a0, $zero
move    $a1, $zero
sw      $s2, 0x10($sp)
jalr    $t9 ; TSP_XML_CreateNode
sw      $v0, 0x134($sp)
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x24($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
sw      $v0, 0x130($sp)
lw      $gp, 0x18($sp)
lw      $a3, 4($fp)
move    $a0, $s1
la      $t9, snprintf
addiu   $a2, $s3, (aMaxAgeD+8 - 0x410000)  # "%d"
li      $a1, 0x100
jalr    $t9 ; snprintf
sw      $v0, 0x12C($sp)
lw      $gp, 0x18($sp)
lui     $a2, 0x41
move    $a3, $s1
la      $t9, TSP_XML_CreateNode
la      $a2, aNewenabled  # "NewEnabled"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x10($sp)
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x24($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
move    $s6, $v0
lw      $gp, 0x18($sp)
la      $a2, aNewportmapping  # "NewPortMappingDescription"
la      $t9, TSP_XML_CreateNode
addiu   $a3, $fp, 0x40
move    $a0, $zero
move    $a1, $zero
sw      $s2, 0x10($sp)
jalr    $t9 ; TSP_XML_CreateNode
move    $s5, $v0
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x24($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
move    $s4, $v0
lw      $gp, 0x18($sp)
lw      $a3, 0xC($fp)
addiu   $a2, $s3, 0x5484
la      $t9, snprintf
move    $a0, $s1
li      $a1, 0x100
jalr    $t9 ; snprintf
move    $s3, $v0
lw      $gp, 0x18($sp)
lui     $a2, 0x41
move    $a3, $s1
la      $t9, TSP_XML_CreateNode
la      $a2, aNewleasedurati  # "NewLeaseDuration"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x10($sp)
lw      $gp, 0x18($sp)
lw      $a0, 0x30($s7)
lw      $a1, 0x24($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
move    $s1, $v0
lw      $v1, 0x128($sp)
lw      $gp, 0x18($sp)
addu    $s0, $v1
lw      $v1, 0x148($sp)
nop
addu    $s0, $v1
lw      $v1, 0x144($sp)
nop
addu    $s0, $v1
lw      $v1, 0x140($sp)
nop
addu    $s0, $v1
lw      $v1, 0x13C($sp)
nop
addu    $s0, $v1
lw      $v1, 0x138($sp)
nop
addu    $s0, $v1
lw      $v1, 0x134($sp)
nop
addu    $s0, $v1
lw      $v1, 0x130($sp)
nop
addu    $s0, $v1
lw      $v1, 0x12C($sp)
nop
addu    $s0, $v1
addu    $s0, $s6
addu    $s0, $s5
addu    $s0, $s4
addu    $s0, $s3
addu    $s0, $s1
addu    $v0, $s0, $v0
bnez    $v0, loc_405D54
nop
b       loc_405D54
sw      $zero, 0($s7)

loc_405D50:
lui     $v0, 0x4009

loc_405D54:
lw      $ra, 0x174($sp)
lw      $fp, 0x170($sp)
lw      $s7, 0x16C($sp)
lw      $s6, 0x168($sp)
lw      $s5, 0x164($sp)
lw      $s4, 0x160($sp)
lw      $s3, 0x15C($sp)
lw      $s2, 0x158($sp)
lw      $s1, 0x154($sp)
lw      $s0, 0x150($sp)
jr      $ra
addiu   $sp, 0x178



sub_405D84:

var_128= -0x128
var_120= -0x120
var_118= -0x118
var_114= -0x114
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x138
li      $gp, 0x42E470
sw      $ra, 0x138+var_4($sp)
sw      $s2, 0x138+var_8($sp)
sw      $s1, 0x138+var_C($sp)
sw      $s0, 0x138+var_10($sp)
sw      $gp, 0x138+var_120($sp)
la      $t9, snprintf
addiu   $s0, $sp, 0x138+var_114
lui     $a3, 0x41
move    $s2, $a2
lui     $a2, 0x41
sw      $a1, 0x138+var_128($sp)
move    $s1, $a0
la      $a3, dword_414900
la      $a2, (aNotifySHttp11H+0x8C)  # "%s%s"
move    $a0, $s0
jalr    $t9 ; snprintf
li      $a1, 0x100
lw      $gp, 0x138+var_120($sp)
lw      $a0, 0x2C($s1)
move    $a1, $s0
la      $t9, ATP_XML_GetChildNodeByName
move    $a2, $zero
jalr    $t9 ; ATP_XML_GetChildNodeByName
addiu   $a3, $sp, 0x138+var_118
lw      $gp, 0x138+var_120($sp)
beqz    $v0, loc_405E08
move    $v1, $v0
li      $v0, 0x192
b       loc_405E14
sw      $v0, 0($s1)

loc_405E08:
lw      $v0, 0x138+var_118($sp)
nop
sw      $v0, 0($s2)

loc_405E14:
lw      $ra, 0x138+var_4($sp)
move    $v0, $v1
lw      $s2, 0x138+var_8($sp)
lw      $s1, 0x138+var_C($sp)
lw      $s0, 0x138+var_10($sp)
jr      $ra
addiu   $sp, 0x138
 # End of function sub_405D84

lui     $gp, 0x43
addiu   $sp, -0x160
li      $gp, 0x42E470
sw      $ra, 0x15C($sp)
sw      $s5, 0x158($sp)
sw      $s4, 0x154($sp)
sw      $s3, 0x150($sp)
sw      $s2, 0x14C($sp)
sw      $s1, 0x148($sp)
sw      $s0, 0x144($sp)
sw      $gp, 0x10($sp)
la      $t9, memset
addiu   $s1, $sp, 0x3C
move    $s5, $a0
move    $a1, $zero
move    $a0, $s1
jalr    $t9 ; memset
li      $a2, 0x100
lw      $gp, 0x10($sp)
addiu   $s4, $sp, 0x24
lui     $a1, 0x41
la      $t9, memcpy
la      $a1, dword_4152C0
move    $a0, $s4
li      $a2, 0x18
sw      $zero, 0x18($sp)
jalr    $t9 ; memcpy
sw      $zero, 0x1C($sp)
lw      $gp, 0x10($sp)
lw      $a0, 0x28($s5)
li      $v0, 0x1F5
la      $t9, ATP_TR064_GetDomainNameOfService
sw      $v0, 0($s5)
move    $a1, $s1
sw      $zero, 0x20($sp)
li      $a2, 0x100
jalr    $t9 ; ATP_TR064_GetDomainNameOfService
move    $a3, $zero
lw      $gp, 0x10($sp)
bnez    $v0, loc_406004
move    $s0, $v0
la      $t9, ATP_DBDomainToKeyList
move    $a0, $s1
move    $a1, $s4
jalr    $t9 ; ATP_DBDomainToKeyList
addiu   $a2, $sp, 0x20
lw      $gp, 0x10($sp)
bnez    $v0, loc_406004
move    $s0, $v0
la      $t9, ATP_CFM_CfgMsgHeadBuilder
addiu   $s3, $sp, 0x1C
li      $a1, 0x10001
move    $a0, $s3
move    $a2, $zero
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a3, $zero
lw      $gp, 0x10($sp)
bnez    $v0, loc_406004
move    $s0, $v0
addiu   $s0, $sp, 0x18
lui     $a1, 0x41
move    $a2, $s0
la      $a1, aWpa11iencrypti  # "WPA11iEncryptionModes"
jal     sub_405D84
move    $a0, $s5
lw      $gp, 0x10($sp)
lw      $a3, 0x18($sp)
lui     $s1, 0xE882
la      $t9, ATP_CFM_CfgMsgAppendPara
ori     $a2, $s1, 0x1E1B
move    $a0, $s3
move    $a1, $s4
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $s2, $v0
lui     $a1, 0x41
move    $a2, $s0
la      $a1, aWpa11iauthenti  # "WPA11iAuthenticationMode"
move    $a0, $s5
jal     sub_405D84
move    $s0, $v0
lw      $gp, 0x10($sp)
lw      $a3, 0x18($sp)
move    $a0, $s3
la      $t9, ATP_CFM_CfgMsgAppendPara
ori     $a2, $s1, 0x1E1C
move    $a1, $s4
move    $s1, $v0
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
addu    $s0, $s2
addu    $s0, $s1
addu    $s0, $v0
lw      $gp, 0x10($sp)
lw      $a0, 0x1C($sp)
beqz    $s0, loc_405FCC
nop
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
nop
lw      $gp, 0x10($sp)
b       loc_406004
nop

loc_405FCC:
la      $t9, ATP_CFMA_SetPara
nop
jalr    $t9 ; ATP_CFMA_SetPara
li      $a1, 0x2710
lw      $gp, 0x10($sp)
lw      $a0, 0x1C($sp)
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
move    $s0, $v0
lw      $gp, 0x10($sp)
bnez    $s0, loc_406004
nop
sw      $zero, 0($s5)

loc_406004:
lw      $ra, 0x15C($sp)
move    $v0, $s0
lw      $s5, 0x158($sp)
lw      $s4, 0x154($sp)
lw      $s3, 0x150($sp)
lw      $s2, 0x14C($sp)
lw      $s1, 0x148($sp)
lw      $s0, 0x144($sp)
jr      $ra
addiu   $sp, 0x160
lui     $gp, 0x43
addiu   $sp, -0x158
li      $gp, 0x42E470
sw      $ra, 0x154($sp)
sw      $s3, 0x150($sp)
sw      $s2, 0x14C($sp)
sw      $s1, 0x148($sp)
sw      $s0, 0x144($sp)
sw      $gp, 0x10($sp)
la      $t9, memcpy
addiu   $s2, $sp, 0x24
lui     $a1, 0x41
move    $s3, $a0
la      $a1, dword_4152D8
move    $a0, $s2
li      $a2, 0x18
jalr    $t9 ; memcpy
sw      $zero, 0x18($sp)
lw      $gp, 0x10($sp)
lw      $a0, 0x28($s3)
li      $v0, 0x1F5
la      $t9, ATP_TR064_GetDomainNameOfService
addiu   $s1, $sp, 0x3C
sw      $v0, 0($s3)
sw      $zero, 0x20($sp)
move    $a1, $s1
li      $a2, 0x100
jalr    $t9 ; ATP_TR064_GetDomainNameOfService
move    $a3, $zero
lw      $gp, 0x10($sp)
bnez    $v0, loc_40619C
move    $s0, $v0
la      $a1, aPresharedkey  # "PreSharedKey"
move    $a0, $s3
jal     sub_405D84
addiu   $a2, $sp, 0x20
lw      $gp, 0x10($sp)
move    $a0, $s1
move    $a1, $s2
la      $t9, ATP_DBDomainToKeyList
nop
jalr    $t9 ; ATP_DBDomainToKeyList
addiu   $a2, $sp, 0x1C
lw      $gp, 0x10($sp)
bnez    $v0, loc_40619C
move    $s0, $v0
la      $t9, ATP_CFM_CfgMsgHeadBuilder
addiu   $s0, $sp, 0x18
lui     $a1, 1
move    $a0, $s0
li      $a1, 0x10001
move    $a2, $zero
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a3, $zero
lw      $gp, 0x10($sp)
lw      $a3, 0x20($sp)
li      $v1, 1
la      $t9, ATP_CFM_CfgMsgAppendPara
lui     $a2, 0xEC80
move    $a0, $s0
sw      $v1, 0x2C($sp)
move    $a1, $s2
li      $a2, 0xEC802C01
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $s0, $v0
addu    $s0, $v0, $s0
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
beqz    $s0, loc_406164
nop
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
nop
lw      $gp, 0x10($sp)
b       loc_40619C
nop

loc_406164:
la      $t9, ATP_CFMA_SetPara
nop
jalr    $t9 ; ATP_CFMA_SetPara
li      $a1, 0x2710
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
move    $s0, $v0
lw      $gp, 0x10($sp)
bnez    $s0, loc_40619C
nop
sw      $zero, 0($s3)

loc_40619C:
lw      $ra, 0x154($sp)
move    $v0, $s0
lw      $s3, 0x150($sp)
lw      $s2, 0x14C($sp)
lw      $s1, 0x148($sp)
lw      $s0, 0x144($sp)
jr      $ra
addiu   $sp, 0x158
lui     $gp, 0x43
addiu   $sp, -0x170
li      $gp, 0x42E470
sw      $ra, 0x16C($sp)
sw      $fp, 0x168($sp)
sw      $s7, 0x164($sp)
sw      $s6, 0x160($sp)
sw      $s5, 0x15C($sp)
sw      $s4, 0x158($sp)
sw      $s3, 0x154($sp)
sw      $s2, 0x150($sp)
sw      $s1, 0x14C($sp)
sw      $s0, 0x148($sp)
sw      $gp, 0x10($sp)
la      $t9, memcpy
addiu   $s3, $sp, 0x24
lui     $a1, 0x41
move    $s6, $a0
la      $a1, dword_415308
move    $a0, $s3
li      $a2, 0x18
jalr    $t9 ; memcpy
sw      $zero, 0x18($sp)
lw      $gp, 0x10($sp)
lw      $a0, 0x28($s6)
li      $v0, 0x1F5
la      $t9, ATP_TR064_GetDomainNameOfService
addiu   $s4, $sp, 0x3C
sw      $v0, 0($s6)
sw      $zero, 0x20($sp)
move    $a1, $s4
li      $a2, 0x100
jalr    $t9 ; ATP_TR064_GetDomainNameOfService
move    $a3, $zero
lw      $gp, 0x10($sp)
bnez    $v0, loc_406498
move    $s1, $v0
la      $t9, ATP_DBDomainToKeyList
move    $a0, $s4
move    $a1, $s3
jalr    $t9 ; ATP_DBDomainToKeyList
addiu   $a2, $sp, 0x1C
lw      $gp, 0x10($sp)
bnez    $v0, loc_406498
move    $s1, $v0
la      $t9, ATP_CFM_CfgMsgHeadBuilder
addiu   $s2, $sp, 0x18
lui     $s5, 1
move    $a0, $s2
ori     $a1, $s5, 1
move    $a2, $zero
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a3, $zero
lw      $gp, 0x10($sp)
lui     $a2, 0xE900
move    $a0, $s2
la      $t9, ATP_CFM_CfgMsgAppendPara
li      $a2, 0xE9001E0D
move    $a1, $s3
li      $a3, 1
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $s0, $v0
addu    $s1, $v0, $s0
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
bnez    $s1, loc_406444
nop
la      $t9, ATP_CFMA_SetPara
nop
jalr    $t9 ; ATP_CFMA_SetPara
li      $a1, 0x2710
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
move    $s1, $v0
lw      $gp, 0x10($sp)
bnez    $s1, loc_406498
ori     $a1, $s5, 1
la      $t9, ATP_CFM_CfgMsgHeadBuilder
move    $a3, $zero
sw      $zero, 0x18($sp)
move    $a0, $s2
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a2, $zero
move    $s1, $v0
lw      $gp, 0x10($sp)
lui     $v0, 0x41
addiu   $s7, $v0, (aWepkeyD - 0x410000)  # "WEPKey%d"
lui     $v0, 0xEC80
sw      $s3, 0x140($sp)
ori     $s5, $v0, 0x2B01
move    $a3, $zero
addiu   $fp, $sp, 0x20
li      $s3, 4

loc_40633C:
la      $t9, snprintf
addiu   $s0, $a3, 1
move    $a0, $s4
move    $a2, $s7
li      $a1, 0x100
jalr    $t9 ; snprintf
sw      $s0, 0x2C($sp)
move    $a0, $s6
move    $a1, $s4
jal     sub_405D84
move    $a2, $fp
lw      $gp, 0x10($sp)
lw      $a3, 0x20($sp)
lw      $a1, 0x140($sp)
la      $t9, ATP_CFM_CfgMsgAppendPara
move    $a0, $s2
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $a2, $s5
lw      $gp, 0x10($sp)
move    $a3, $s0
bne     $s0, $s3, loc_40633C
addu    $s1, $v0
lw      $a0, 0x18($sp)
bnez    $s1, loc_406444
nop
la      $t9, ATP_CFMA_SetPara
nop
jalr    $t9 ; ATP_CFMA_SetPara
li      $a1, 0x2710
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
move    $s1, $v0
lw      $gp, 0x10($sp)
bnez    $s1, loc_406498
lui     $a1, 1
la      $t9, ATP_CFM_CfgMsgHeadBuilder
move    $a3, $zero
li      $a1, 0x10001
move    $a0, $s2
move    $a2, $zero
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
sw      $zero, 0x18($sp)
la      $a1, aPresharedkey  # "PreSharedKey"
move    $a2, $fp
move    $a0, $s6
jal     sub_405D84
move    $s0, $v0
lw      $gp, 0x10($sp)
lw      $a3, 0x20($sp)
lw      $a1, 0x140($sp)
la      $t9, ATP_CFM_CfgMsgAppendPara
li      $v0, 1
lui     $a2, 0xEC80
move    $a0, $s2
sw      $v0, 0x2C($sp)
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
li      $a2, 0xEC802C01
addu    $s1, $v0, $s0
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
beqz    $s1, loc_406460
nop

loc_406444:
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
nop
lw      $gp, 0x10($sp)
b       loc_406498
nop

loc_406460:
la      $t9, ATP_CFMA_SetPara
nop
jalr    $t9 ; ATP_CFMA_SetPara
li      $a1, 0x2710
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
move    $s1, $v0
lw      $gp, 0x10($sp)
bnez    $s1, loc_406498
nop
sw      $zero, 0($s6)

loc_406498:
lw      $ra, 0x16C($sp)
move    $v0, $s1
lw      $fp, 0x168($sp)
lw      $s7, 0x164($sp)
lw      $s6, 0x160($sp)
lw      $s5, 0x15C($sp)
lw      $s4, 0x158($sp)
lw      $s3, 0x154($sp)
lw      $s2, 0x150($sp)
lw      $s1, 0x14C($sp)
lw      $s0, 0x148($sp)
jr      $ra
addiu   $sp, 0x170
lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x24($sp)
sw      $s0, 0x20($sp)
sw      $gp, 0x10($sp)
la      $t9, ATP_XML_GetChildNodeByName
lw      $a0, 0x2C($a0)
lui     $a1, 0x41
sw      $zero, 0x1C($sp)
la      $a1, aNewpassword  # "NewPassword"
move    $a2, $zero
jalr    $t9 ; ATP_XML_GetChildNodeByName
addiu   $a3, $sp, 0x18
lw      $gp, 0x10($sp)
bnez    $v0, loc_4065A4
move    $s0, $v0
la      $t9, ATP_CFM_CfgMsgHeadBuilder
addiu   $s0, $sp, 0x1C
lui     $a1, 1
move    $a0, $s0
li      $a1, 0x10001
move    $a2, $zero
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a3, $zero
lw      $gp, 0x10($sp)
lw      $a3, 0x18($sp)
lui     $a2, 0x6880
la      $t9, ATP_CFM_CfgMsgAppendPara
move    $a0, $s0
li      $a2, 0x68804902
move    $a1, $zero
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $s0, $v0
addu    $s0, $v0, $s0
lw      $gp, 0x10($sp)
lw      $a0, 0x1C($sp)
beqz    $s0, loc_406574
nop
la      $t9, ATP_CFM_MsgFree
b       loc_406598
nop

loc_406574:
la      $t9, ATP_CFMA_SetPara
nop
jalr    $t9 ; ATP_CFMA_SetPara
li      $a1, 0x2710
lw      $gp, 0x10($sp)
lw      $a0, 0x1C($sp)
move    $s0, $v0
la      $t9, ATP_CFM_MsgFree
nop

loc_406598:
jalr    $t9 ; ATP_CFM_MsgFree
nop
lw      $gp, 0x10($sp)

loc_4065A4:
lw      $ra, 0x24($sp)
move    $v0, $s0
lw      $s0, 0x20($sp)
jr      $ra
addiu   $sp, 0x28
lui     $gp, 0x43
addiu   $sp, -0xF8
li      $gp, 0x42E470
sw      $ra, 0xF4($sp)
sw      $s6, 0xF0($sp)
sw      $s5, 0xEC($sp)
sw      $s4, 0xE8($sp)
sw      $s3, 0xE4($sp)
sw      $s2, 0xE0($sp)
sw      $s1, 0xDC($sp)
sw      $s0, 0xD8($sp)
sw      $gp, 0x10($sp)
li      $v0, 0x1F5
sw      $v0, 0($a0)
la      $v0, g_pstShmExt
la      $a1, aRemotehost  # "RemoteHost"
addiu   $a2, $sp, 0x18
sw      $zero, 0x18($sp)
sw      $zero, 0x1C($sp)
sw      $zero, 0x20($sp)
sw      $zero, 0x24($sp)
lw      $s2, (g_pstShmExt - 0x426830)($v0)
jal     sub_405D84
move    $s5, $a0
la      $a1, aExternalport  # "ExternalPort"
move    $a0, $s5
jal     sub_405D84
addiu   $a2, $sp, 0x20
lui     $a1, 0x41
move    $a0, $s5
la      $a1, aProtocol   # "Protocol"
jal     sub_405D84
addiu   $a2, $sp, 0x1C
lw      $a0, 0x20($sp)
lw      $gp, 0x10($sp)
beqz    $a0, loc_4068D4
lui     $s0, 0x4009
lw      $v0, 0x1C($sp)
nop
beqz    $v0, loc_4068D4
nop
la      $t9, atoi
nop
jalr    $t9 ; atoi
nop
lw      $gp, 0x10($sp)
addiu   $a0, $sp, 0x50
move    $a1, $zero
la      $t9, memset
li      $a2, 0x84
jalr    $t9 ; memset
move    $s1, $v0
lw      $a3, 0x18($sp)
lw      $gp, 0x10($sp)
beqz    $a3, loc_4066BC
lui     $a2, 0x41
la      $t9, snprintf
la      $a2, (aSS+4)     # "%s"
addiu   $a0, $sp, 0x70
jalr    $t9 ; snprintf
li      $a1, 0x10
lw      $gp, 0x10($sp)
nop

loc_4066BC:
la      $t9, snprintf
lw      $a3, 0x1C($sp)
addiu   $s0, $sp, 0x60
lui     $a2, 0x41
move    $a0, $s0
la      $a2, (aSS+4)     # "%s"
andi    $s1, 0xFFFF
jalr    $t9 ; snprintf
li      $a1, 0x10
move    $s4, $s0
lw      $gp, 0x10($sp)
sh      $s1, 0x58($sp)
lw      $s0, 0($s2)
addiu   $s6, $sp, 0x50
b       loc_406744
addiu   $s3, $sp, 0x70

loc_4066FC:
jalr    $t9 ; strcmp
nop
lw      $gp, 0x10($sp)
bnez    $v0, loc_40673C
addiu   $a0, $s0, 0x10
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a1, $s4
lw      $gp, 0x10($sp)
bnez    $v0, loc_40673C
nop
lhu     $v0, 8($s0)
nop
beq     $v0, $s1, loc_40675C
move    $a1, $s0

loc_40673C:
addiu   $s2, $s0, 0x84
lw      $s0, 0x84($s0)

loc_406744:
la      $t9, strcmp
addiu   $a0, $s0, 0x20
bnez    $s0, loc_4066FC
move    $a1, $s3
b       loc_4068D4
lui     $s0, 0x4009

loc_40675C:
la      $t9, memcpy
move    $a0, $s6
jalr    $t9 ; memcpy
li      $a2, 0x84
lw      $gp, 0x10($sp)
li      $v0, 2
sw      $v0, 0x50($sp)
la      $t9, malloc
nop
jalr    $t9 ; malloc
li      $a0, 0xAC
lw      $gp, 0x10($sp)
bnez    $v0, loc_4067A0
lui     $a3, 0x41
lui     $v0, 0x4009
b       loc_4068D4
ori     $s0, $v0, 2

loc_4067A0:
la      $t9, snprintf
lui     $s0, 0x41
addiu   $a2, $s0, (aSS+4 - 0x410000)  # "%s"
addiu   $a3, (aUpnp - 0x410000)  # "upnp"
addiu   $a0, $sp, 0x30
li      $a1, 0xC
jalr    $t9 ; snprintf
sw      $v0, 0x20($sp)
lw      $gp, 0x10($sp)
la      $a3, aCms        # "cms"
la      $t9, snprintf
addiu   $a2, $s0, (aSS+4 - 0x410000)  # "%s"
addiu   $a0, $sp, 0x3C
jalr    $t9 ; snprintf
li      $a1, 0xC
lw      $gp, 0x10($sp)
lw      $a0, 0x20($sp)
li      $v0, 0x84
la      $t9, memcpy
sw      $v0, 0x4C($sp)
lui     $v0, 0x11
addiu   $a1, $sp, 0x28
li      $a2, 0x28
jalr    $t9 ; memcpy
sw      $v0, 0x28($sp)
lw      $gp, 0x10($sp)
lw      $a0, 0x20($sp)
move    $a1, $s6
la      $t9, memcpy
addiu   $a0, 0x28
jalr    $t9 ; memcpy
li      $a2, 0x84
lw      $gp, 0x10($sp)
lw      $a0, 0x20($sp)
addiu   $a1, $sp, 0x24
la      $t9, ATP_MSG_SendAndRecv
nop
jalr    $t9 ; ATP_MSG_SendAndRecv
li      $a2, 0x2710
lw      $gp, 0x10($sp)
lw      $a0, 0x20($sp)
la      $t9, free
nop
jalr    $t9 ; free
move    $s0, $v0
lw      $gp, 0x10($sp)
bnez    $s0, loc_4068D4
nop
lw      $a0, 0x24($sp)
nop
beqz    $a0, loc_4068BC
nop
lw      $v0, 0x20($a0)
nop
bnez    $v0, loc_4068BC
nop
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $a0, 0($s2)
lw      $gp, 0x10($sp)
lw      $v0, 0x84($a0)
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
sw      $v0, 0($s2)
lw      $gp, 0x10($sp)
b       loc_4068D4
sw      $zero, 0($s5)

loc_4068BC:
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x10($sp)
lw      $s0, 0x48($sp)

loc_4068D4:
lw      $ra, 0xF4($sp)
move    $v0, $s0
lw      $s6, 0xF0($sp)
lw      $s5, 0xEC($sp)
lw      $s4, 0xE8($sp)
lw      $s3, 0xE4($sp)
lw      $s2, 0xE0($sp)
lw      $s1, 0xDC($sp)
lw      $s0, 0xD8($sp)
jr      $ra
addiu   $sp, 0xF8
lui     $gp, 0x43
addiu   $sp, -0x118
li      $gp, 0x42E470
sw      $ra, 0x114($sp)
sw      $s5, 0x110($sp)
sw      $s4, 0x10C($sp)
sw      $s3, 0x108($sp)
sw      $s2, 0x104($sp)
sw      $s1, 0x100($sp)
sw      $s0, 0xFC($sp)
sw      $gp, 0x10($sp)
li      $v0, 0x1F5
la      $t9, memset
sw      $v0, 0($a0)
la      $v0, g_pstShmExt
move    $s3, $a0
move    $a1, $zero
addiu   $a0, $sp, 0x74
sw      $zero, 0x1C($sp)
lw      $s5, (g_pstShmExt - 0x426830)($v0)
jalr    $t9 ; memset
li      $a2, 0x84
la      $a1, aRemotehost  # "RemoteHost"
li      $v0, 1
move    $a0, $s3
addiu   $a2, $sp, 0x18
jal     sub_405D84
sw      $v0, 0x74($sp)
lw      $a1, 0x18($sp)
lw      $gp, 0x10($sp)
beqz    $a1, loc_406998
addiu   $a0, $sp, 0x94
la      $t9, strncpy
nop
jalr    $t9 ; strncpy
li      $a2, 0x10
sb      $zero, 0xA3($sp)

loc_406998:
lui     $a1, 0x41
move    $a0, $s3
la      $a1, aExternalport  # "ExternalPort"
jal     sub_405D84
addiu   $a2, $sp, 0x18
lw      $a0, 0x18($sp)
lw      $gp, 0x10($sp)
beqz    $a0, loc_4069CC
move    $v0, $zero
la      $t9, atoi
nop
jalr    $t9 ; atoi
nop

loc_4069CC:
la      $a1, aProtocol   # "Protocol"
move    $a0, $s3
addiu   $a2, $sp, 0x18
jal     sub_405D84
sh      $v0, 0x7C($sp)
lw      $a3, 0x18($sp)
lw      $gp, 0x10($sp)
beqz    $a3, loc_406A08
lui     $a2, 0x41
la      $t9, snprintf
la      $a2, (aSS+4)     # "%s"
addiu   $a0, $sp, 0x84
jalr    $t9 ; snprintf
li      $a1, 0x10

loc_406A08:
lui     $a1, 0x41
move    $a0, $s3
la      $a1, aInternalport  # "InternalPort"
jal     sub_405D84
addiu   $a2, $sp, 0x18
lw      $a0, 0x18($sp)
lw      $gp, 0x10($sp)
beqz    $a0, loc_406A3C
move    $v0, $zero
la      $t9, atoi
nop
jalr    $t9 ; atoi
nop

loc_406A3C:
la      $a1, aInternalclient  # "InternalClient"
move    $a0, $s3
addiu   $a2, $sp, 0x18
jal     sub_405D84
sh      $v0, 0x7E($sp)
lw      $a3, 0x18($sp)
lw      $gp, 0x10($sp)
beqz    $a3, loc_406A78
lui     $a2, 0x41
la      $t9, snprintf
la      $a2, (aSS+4)     # "%s"
addiu   $a0, $sp, 0xA4
jalr    $t9 ; snprintf
li      $a1, 0x10

loc_406A78:
la      $a1, aEnabled    # "Enabled"
move    $a0, $s3
jal     sub_405D84
addiu   $a2, $sp, 0x18
lw      $s0, 0x18($sp)
lw      $gp, 0x10($sp)
beqz    $s0, loc_406EB0
lui     $a0, 0x41
la      $t9, strcmp
la      $a0, (a2552552550+0xC)  # "0"
jalr    $t9 ; strcmp
move    $a1, $s0
lw      $gp, 0x10($sp)
beqz    $v0, loc_406AD4
lui     $a0, 0x41
la      $t9, strcmp
la      $a0, aFalse      # "false"
jalr    $t9 ; strcmp
move    $a1, $s0
lw      $gp, 0x10($sp)
bnez    $v0, loc_406ADC
lui     $a0, 0x41

loc_406AD4:
b       loc_406B1C
sw      $zero, 0x78($sp)

loc_406ADC:
la      $t9, strcmp
addiu   $a0, (aWanconnectiond+0x14 - 0x410000)  # "1"
jalr    $t9 ; strcmp
move    $a1, $s0
lw      $gp, 0x10($sp)
beqz    $v0, loc_406B18
li      $v0, 1
la      $t9, strcmp
la      $a0, aTrue       # "true"
jalr    $t9 ; strcmp
move    $a1, $s0
lw      $gp, 0x10($sp)
bnez    $v0, loc_406EB0
li      $v0, 1

loc_406B18:
sw      $v0, 0x78($sp)

loc_406B1C:
la      $a1, aPortmappingdes  # "PortMappingDescription"
move    $a0, $s3
jal     sub_405D84
addiu   $a2, $sp, 0x18
lw      $a3, 0x18($sp)
lw      $gp, 0x10($sp)
beqz    $a3, loc_406B5C
lui     $a2, 0x41
la      $t9, snprintf
la      $a2, (aSS+4)     # "%s"
addiu   $a0, $sp, 0xB4
jalr    $t9 ; snprintf
li      $a1, 0x44
lw      $gp, 0x10($sp)
nop

loc_406B5C:
la      $v0, g_pstShmExt
move    $v1, $zero
lw      $v0, (g_pstShmExt - 0x426830)($v0)
nop
lw      $s2, 0($v0)
b       loc_406B80
move    $v0, $s2

loc_406B78:
lw      $v0, 0x84($v0)
addiu   $v1, 1

loc_406B80:
bnez    $v0, loc_406B78
nop
sltiu   $v0, $v1, 0x20
bnez    $v0, loc_406CF4
nop
beqz    $s2, loc_406CF4
sw      $zero, 0x20($sp)
la      $t9, malloc
nop
jalr    $t9 ; malloc
li      $a0, 0xAC
lw      $gp, 0x10($sp)
beqz    $v0, loc_406EB8
move    $s1, $v0
la      $t9, snprintf
lui     $s0, 0x41
lui     $a3, 0x41
addiu   $a2, $s0, (aSS+4 - 0x410000)  # "%s"
la      $a3, aUpnp       # "upnp"
addiu   $a0, $sp, 0x54
jalr    $t9 ; snprintf
li      $a1, 0xC
lw      $gp, 0x10($sp)
la      $a3, aCms        # "cms"
la      $t9, snprintf
addiu   $a2, $s0, (aSS+4 - 0x410000)  # "%s"
addiu   $a0, $sp, 0x60
jalr    $t9 ; snprintf
li      $a1, 0xC
lw      $gp, 0x10($sp)
li      $v0, 0x84
sw      $v0, 0x70($sp)
la      $t9, memcpy
lui     $v0, 0x11
addiu   $a1, $sp, 0x4C
move    $a0, $s1
li      $a2, 0x28
jalr    $t9 ; memcpy
sw      $v0, 0x4C($sp)
lw      $gp, 0x10($sp)
li      $v0, 2
addiu   $a0, $s1, 0x28
la      $t9, memcpy
move    $a1, $s2
li      $a2, 0x84
jalr    $t9 ; memcpy
sw      $v0, 0($s2)
lw      $gp, 0x10($sp)
move    $a0, $s1
addiu   $a1, $sp, 0x20
la      $t9, ATP_MSG_SendAndRecv
nop
jalr    $t9 ; ATP_MSG_SendAndRecv
li      $a2, 0x2710
lw      $gp, 0x10($sp)
move    $s0, $v0
la      $t9, free
nop
jalr    $t9 ; free
move    $a0, $s1
lw      $gp, 0x10($sp)
bnez    $s0, loc_406EBC
lui     $v0, 0x4009
lw      $a0, 0x20($sp)
nop
beqz    $a0, loc_406CD8
nop
lw      $v0, 0x20($a0)
nop
bnez    $v0, loc_406CD8
nop
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x10($sp)
lw      $v1, 0x84($s2)
move    $a0, $s2
la      $v0, g_pstShmExt
la      $t9, ATP_UPNP_Free
lw      $v0, (g_pstShmExt - 0x426830)($v0)
jalr    $t9 ; ATP_UPNP_Free
sw      $v1, 0($v0)
b       loc_406CF4
nop

loc_406CD8:
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x10($sp)
b       loc_406EBC
lui     $v0, 0x4009

loc_406CF4:
lhu     $a2, 0x7C($sp)
addiu   $a0, $sp, 0x94
jal     sub_404168
addiu   $a1, $sp, 0x84
lw      $gp, 0x10($sp)
addiu   $s4, $sp, 0x74
bnez    $v0, loc_406ECC
move    $s2, $zero
la      $t9, malloc
nop
jalr    $t9 ; malloc
li      $a0, 0xAC
lw      $gp, 0x10($sp)
beqz    $v0, loc_406EC4
lui     $s0, 0x41
la      $t9, snprintf
la      $a3, aUpnp       # "upnp"
addiu   $a0, $sp, 0x2C
li      $a1, 0xC
addiu   $a2, $s0, (aSS+4 - 0x410000)  # "%s"
jalr    $t9 ; snprintf
sw      $v0, 0x18($sp)
lw      $gp, 0x10($sp)
la      $a3, aCms        # "cms"
la      $t9, snprintf
addiu   $a2, $s0, (aSS+4 - 0x410000)  # "%s"
addiu   $a0, $sp, 0x38
jalr    $t9 ; snprintf
li      $a1, 0xC
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
li      $v0, 0x84
la      $t9, memcpy
sw      $v0, 0x48($sp)
lui     $v0, 0x11
addiu   $a1, $sp, 0x24
li      $a2, 0x28
jalr    $t9 ; memcpy
sw      $v0, 0x24($sp)
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
move    $a1, $s4
la      $t9, memcpy
addiu   $a0, 0x28
jalr    $t9 ; memcpy
li      $a2, 0x84
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
addiu   $a1, $sp, 0x1C
la      $t9, ATP_MSG_SendAndRecv
nop
jalr    $t9 ; ATP_MSG_SendAndRecv
li      $a2, 0x2710
lw      $gp, 0x10($sp)
lw      $a0, 0x18($sp)
la      $t9, free
nop
jalr    $t9 ; free
move    $s2, $v0
lw      $gp, 0x10($sp)
bnez    $s2, loc_406ECC
nop
lw      $a0, 0x1C($sp)
nop
beqz    $a0, loc_406E90
nop
lw      $v0, 0x20($a0)
nop
bnez    $v0, loc_406E90
nop
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x10($sp)
nop
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0x88
lw      $gp, 0x10($sp)
beqz    $v0, loc_406EC4
move    $s0, $v0
la      $t9, memcpy
sw      $zero, 0x84($v0)
move    $a1, $s4
move    $a0, $v0
jalr    $t9 ; memcpy
li      $a2, 0x84
lw      $gp, 0x10($sp)
lw      $v0, 0($s5)
b       loc_406E7C
move    $s1, $s5

loc_406E70:
addiu   $s1, $v0, 0x84
lw      $v0, 0x84($v0)
nop

loc_406E7C:
bnez    $v0, loc_406E70
nop
sw      $s0, 0($s1)
b       loc_406ECC
sw      $zero, 0($s3)

loc_406E90:
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x10($sp)
lw      $s2, 0x44($sp)
b       loc_406ECC
nop

loc_406EB0:
b       loc_406ECC
lui     $s2, 0x4009

loc_406EB8:
lui     $v0, 0x4009

loc_406EBC:
b       loc_406ECC
ori     $s2, $v0, 0xB

loc_406EC4:
lui     $v0, 0x4009
ori     $s2, $v0, 2

loc_406ECC:
lw      $ra, 0x114($sp)
move    $v0, $s2
lw      $s5, 0x110($sp)
lw      $s4, 0x10C($sp)
lw      $s3, 0x108($sp)
lw      $s2, 0x104($sp)
lw      $s1, 0x100($sp)
lw      $s0, 0xFC($sp)
jr      $ra
addiu   $sp, 0x118
lui     $gp, 0x43
addiu   $sp, -0x158
li      $gp, 0x42E470
sw      $ra, 0x154($sp)
sw      $s3, 0x150($sp)
sw      $s2, 0x14C($sp)
sw      $s1, 0x148($sp)
sw      $s0, 0x144($sp)
sw      $gp, 0x10($sp)
la      $t9, memcpy
addiu   $s2, $sp, 0x28
lui     $a1, 0x41
move    $s3, $a0
la      $a1, dword_4152A8
move    $a0, $s2
jalr    $t9 ; memcpy
li      $a2, 0x18
lw      $gp, 0x10($sp)
lw      $a0, 0x28($s3)
li      $v0, 0x1F5
la      $t9, ATP_TR064_GetDomainNameOfService
addiu   $s1, $sp, 0x40
sw      $v0, 0($s3)
sw      $zero, 0x1C($sp)
sw      $zero, 0x20($sp)
move    $a1, $s1
li      $a2, 0x100
jalr    $t9 ; ATP_TR064_GetDomainNameOfService
move    $a3, $zero
lw      $gp, 0x10($sp)
bnez    $v0, loc_4070F0
move    $s0, $v0
la      $t9, strstr
la      $a1, aWandevice1_0  # "WANDevice.1."
jalr    $t9 ; strstr
move    $a0, $s1
lw      $gp, 0x10($sp)
beqz    $v0, loc_4070F0
lui     $s0, 0x4009
la      $t9, strcat
lui     $a1, 0x41
sw      $v0, 0x1C($sp)
la      $a1, aWandslinterfac_0  # "WANDSLInterfaceConfig."
move    $a0, $s1
jalr    $t9 ; strcat
sb      $zero, 0xC($v0)
lw      $gp, 0x10($sp)
move    $a0, $s1
move    $a1, $s2
la      $t9, ATP_DBDomainToKeyList
nop
jalr    $t9 ; ATP_DBDomainToKeyList
addiu   $a2, $sp, 0x18
lw      $gp, 0x10($sp)
bnez    $v0, loc_4070F0
move    $s0, $v0
la      $t9, ATP_CFM_CfgMsgHeadBuilder
addiu   $s0, $sp, 0x20
lui     $a1, 1
move    $a0, $s0
li      $a1, 0x10002
move    $a2, $zero
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a3, $zero
lw      $gp, 0x10($sp)
lui     $s1, 0xC80
move    $a0, $s0
la      $t9, ATP_CFM_CfgMsgAppendPara
move    $a1, $s2
ori     $a2, $s1, 0x3002
move    $a3, $zero
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $s0, $v0
addu    $s0, $v0, $s0
lw      $gp, 0x10($sp)
lw      $a0, 0x20($sp)
beqz    $s0, loc_40703C
addiu   $a1, $sp, 0x24
la      $t9, ATP_CFM_MsgFree
b       loc_4070E4
nop

loc_40703C:
la      $t9, ATP_CFMA_GetPara
nop
jalr    $t9 ; ATP_CFMA_GetPara
li      $a2, 0x1388
lw      $gp, 0x10($sp)
lw      $a0, 0x20($sp)
la      $t9, ATP_CFM_MsgFree
bnez    $v0, loc_4070E4
move    $s0, $v0
jalr    $t9 ; ATP_CFM_MsgFree
nop
lw      $gp, 0x10($sp)
lw      $a0, 0x24($sp)
ori     $a2, $s1, 0x3002
la      $t9, ATP_CFM_GetParaOfMsgByOID
move    $a1, $zero
jalr    $t9 ; ATP_CFM_GetParaOfMsgByOID
addiu   $a3, $sp, 0x1C
lw      $gp, 0x10($sp)
beqz    $v0, loc_4070A0
move    $s0, $v0
la      $t9, ATP_CFM_MsgFree
lw      $a0, 0x24($sp)
b       loc_4070E4
nop

loc_4070A0:
lw      $a0, 0x30($s3)
lui     $a1, 0x41
lui     $a2, 0x41
la      $a1, aLinktype   # "LinkType"
jal     sub_404E5C
la      $a2, aEoa        # "EoA"
lw      $a0, 0x30($s3)
lw      $a2, 0x1C($sp)
la      $a1, aLinkstatus  # "LinkStatus"
jal     sub_404E5C
move    $s0, $v0
lw      $gp, 0x10($sp)
lw      $a0, 0x24($sp)
addu    $s0, $v0, $s0
la      $t9, ATP_CFM_MsgFree
nop

loc_4070E4:
jalr    $t9 ; ATP_CFM_MsgFree
nop
lw      $gp, 0x10($sp)

loc_4070F0:
lw      $ra, 0x154($sp)
move    $v0, $s0
lw      $s3, 0x150($sp)
lw      $s2, 0x14C($sp)
lw      $s1, 0x148($sp)
lw      $s0, 0x144($sp)
jr      $ra
addiu   $sp, 0x158
lui     $gp, 0x43
addiu   $sp, -0x20
li      $gp, 0x42E470
sw      $ra, 0x1C($sp)
sw      $s0, 0x18($sp)
sw      $gp, 0x10($sp)
la      $t9, ATP_UPNP_RegEndActionFunc
move    $s0, $a0
la      $a0, sub_407250
jalr    $t9 ; ATP_UPNP_RegEndActionFunc
move    $a1, $zero
lw      $gp, 0x10($sp)
beqz    $v0, loc_407150
li      $v0, 0x1F5
sw      $v0, 0($s0)

loc_407150:
lw      $ra, 0x1C($sp)
move    $v0, $zero
lw      $s0, 0x18($sp)
jr      $ra
addiu   $sp, 0x20
lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x24($sp)
sw      $s0, 0x20($sp)
sw      $gp, 0x10($sp)
la      $a1, aEnable     # "Enable"
addiu   $a2, $sp, 0x18
jal     sub_405D84
sw      $zero, 0x18($sp)
lw      $a0, 0x18($sp)
lw      $gp, 0x10($sp)
beqz    $a0, loc_40723C
lui     $v1, 0x4009
la      $t9, atoi
nop
jalr    $t9 ; atoi
nop
lw      $gp, 0x10($sp)
beqz    $v0, loc_4071C8
move    $v1, $v0
li      $v0, 1
bne     $v1, $v0, loc_40723C
lui     $v1, 0x4009

loc_4071C8:
la      $t9, malloc
nop
jalr    $t9 ; malloc
li      $a0, 0x20
lw      $gp, 0x10($sp)
beqz    $v0, loc_407234
move    $s0, $v0
la      $t9, memcpy
lw      $a1, 0x18($sp)
move    $a0, $v0
jalr    $t9 ; memcpy
li      $a2, 4
lw      $gp, 0x10($sp)
la      $a0, sub_4054A8
la      $t9, ATP_UPNP_RegEndActionFunc
nop
jalr    $t9 ; ATP_UPNP_RegEndActionFunc
move    $a1, $s0
lw      $gp, 0x10($sp)
beqz    $v0, loc_40723C
move    $v1, $zero
la      $t9, free
nop
jalr    $t9 ; free
move    $a0, $s0
lw      $gp, 0x10($sp)

loc_407234:
lui     $v0, 0x4009
ori     $v1, $v0, 2

loc_40723C:
lw      $ra, 0x24($sp)
move    $v0, $v1
lw      $s0, 0x20($sp)
jr      $ra
addiu   $sp, 0x28



sub_407250:

var_10= -0x10
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x20
li      $gp, 0x42E470
sw      $ra, 0x20+var_4($sp)
sw      $gp, 0x20+var_10($sp)
la      $t9, ATP_CFM_ExtReboot
nop
jalr    $t9 ; ATP_CFM_ExtReboot
nop
lw      $ra, 0x20+var_4($sp)
lw      $gp, 0x20+var_10($sp)
move    $v0, $zero
jr      $ra
addiu   $sp, 0x20
 # End of function sub_407250

lui     $gp, 0x43
addiu   $sp, -0x58
li      $gp, 0x42E470
sw      $ra, 0x54($sp)
sw      $s1, 0x50($sp)
sw      $s0, 0x4C($sp)
sw      $gp, 0x18($sp)
move    $s1, $a0
beqz    $a0, loc_40732C
lui     $s0, 0x4009
la      $t9, snprintf
addiu   $s0, $sp, 0x24
lui     $a2, 0x41
move    $a0, $s0
la      $a2, (aMaxAgeD+8)  # "%d"
li      $a1, 0x20
li      $a3, 0x9243
jalr    $t9 ; snprintf
sw      $zero, 0x20($sp)
lw      $gp, 0x18($sp)
addiu   $v0, $sp, 0x20
lui     $a2, 0x41
la      $t9, TSP_XML_CreateNode
move    $a3, $s0
sw      $v0, 0x10($sp)
la      $a2, aNewsecuritypor  # "NewSecurityPort"
move    $a0, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x18($sp)
beqz    $v0, loc_407314
move    $s0, $v0
li      $v0, 0x1F5
b       loc_40732C
sw      $v0, 0($s1)

loc_407314:
la      $t9, TSP_XML_AddFirstChildNode
lw      $a0, 0x30($s1)
lw      $a1, 0x20($sp)
jalr    $t9 ; TSP_XML_AddFirstChildNode
nop
lw      $gp, 0x18($sp)

loc_40732C:
lw      $ra, 0x54($sp)
move    $v0, $s0
lw      $s1, 0x50($sp)
lw      $s0, 0x4C($sp)
jr      $ra
addiu   $sp, 0x58
lui     $gp, 0x43
addiu   $sp, -0x38
li      $gp, 0x42E470
sw      $ra, 0x34($sp)
sw      $s1, 0x30($sp)
sw      $s0, 0x2C($sp)
sw      $gp, 0x18($sp)
move    $s1, $a0
beqz    $a0, loc_4073E4
lui     $s0, 0x4009
la      $t9, ATP_UPNP_UnLockTr064Device
nop
jalr    $t9 ; ATP_UPNP_UnLockTr064Device
nop
lw      $gp, 0x18($sp)
bnez    $v0, loc_4073C0
move    $s0, $v0
la      $t9, TSP_XML_CreateNode
addiu   $v0, $sp, 0x20
lui     $a2, 0x41
lui     $a3, 0x41
sw      $v0, 0x10($sp)
sw      $zero, 0x20($sp)
la      $a2, aNewstatus  # "NewStatus"
la      $a3, aChangesapplied  # "ChangesApplied"
move    $a0, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x18($sp)
beqz    $v0, loc_4073CC
move    $s0, $v0

loc_4073C0:
li      $v0, 0x1F5
b       loc_4073E4
sw      $v0, 0($s1)

loc_4073CC:
la      $t9, TSP_XML_AddFirstChildNode
lw      $a0, 0x30($s1)
lw      $a1, 0x20($sp)
jalr    $t9 ; TSP_XML_AddFirstChildNode
nop
lw      $gp, 0x18($sp)

loc_4073E4:
lw      $ra, 0x34($sp)
move    $v0, $s0
lw      $s1, 0x30($sp)
lw      $s0, 0x2C($sp)
jr      $ra
addiu   $sp, 0x38
lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x24($sp)
sw      $s0, 0x20($sp)
sw      $gp, 0x10($sp)
move    $s0, $a0
beqz    $a0, loc_407488
lui     $v1, 0x4009
la      $t9, ATP_XML_GetChildNodeByName
lw      $a0, 0x2C($a0)
lui     $a1, 0x41
sw      $zero, 0x18($sp)
la      $a1, aNewsessionid  # "NewSessionID"
move    $a2, $zero
jalr    $t9 ; ATP_XML_GetChildNodeByName
addiu   $a3, $sp, 0x18
lw      $gp, 0x10($sp)
bnez    $v0, loc_40745C
move    $v1, $v0
lw      $a0, 0x18($sp)
nop
bnez    $a0, loc_407464
nop

loc_40745C:
b       loc_407484
li      $v0, 0x192

loc_407464:
la      $t9, ATP_UPNP_LockTr064Device
nop
jalr    $t9 ; ATP_UPNP_LockTr064Device
nop
lw      $gp, 0x10($sp)
beqz    $v0, loc_407488
move    $v1, $v0
li      $v0, 0x1F5

loc_407484:
sw      $v0, 0($s0)

loc_407488:
lw      $ra, 0x24($sp)
move    $v0, $v1
lw      $s0, 0x20($sp)
jr      $ra
addiu   $sp, 0x28
lui     $gp, 0x43
addiu   $sp, -0x438
li      $gp, 0x42E470
sw      $ra, 0x434($sp)
sw      $s1, 0x430($sp)
sw      $s0, 0x42C($sp)
sw      $gp, 0x18($sp)
la      $t9, ATP_XML_GetChildNodeByName
move    $s0, $a0
lw      $a0, 0x2C($a0)
la      $a1, aNewdownloadurl  # "NewDownloadURL"
move    $a2, $zero
jalr    $t9 ; ATP_XML_GetChildNodeByName
addiu   $a3, $sp, 0x20
lw      $gp, 0x18($sp)
bnez    $v0, loc_407564
move    $s1, $v0
lw      $v0, 0x20($sp)
nop
beqz    $v0, loc_407564
lui     $a1, 0x41
la      $t9, ATP_XML_GetChildNodeByName
lw      $a0, 0x2C($s0)
la      $a1, aNewstatusurl  # "NewStatusURL"
move    $a2, $zero
jalr    $t9 ; ATP_XML_GetChildNodeByName
addiu   $a3, $sp, 0x24
lw      $gp, 0x18($sp)
bnez    $v0, loc_407564
move    $s1, $v0
lw      $v0, 0x24($sp)
nop
beqz    $v0, loc_407564
addiu   $s0, $sp, 0x28
la      $t9, snprintf
lw      $a3, 0x20($sp)
la      $a2, aUpgGUST1Firmwa  # "upg -g -U %s -t '1 Firmware Upgrade Ima"...
move    $a0, $s0
li      $a1, 0x400
jalr    $t9 ; snprintf
sw      $v0, 0x10($sp)
lw      $gp, 0x18($sp)
nop
la      $t9, system
nop
jalr    $t9 ; system
move    $a0, $s0
lw      $gp, 0x18($sp)

loc_407564:
lw      $ra, 0x434($sp)
move    $v0, $s1
lw      $s1, 0x430($sp)
lw      $s0, 0x42C($sp)
jr      $ra
addiu   $sp, 0x438



.globl ATP_UPNP_RegDeviceAndService
ATP_UPNP_RegDeviceAndService:

var_140= -0x140
var_13C= -0x13C
var_138= -0x138
var_130= -0x130
var_128= -0x128
var_124= -0x124
var_120= -0x120
var_11C= -0x11C
var_118= -0x118
var_114= -0x114
var_110= -0x110
var_10C= -0x10C
var_108= -0x108
var_104= -0x104
var_100= -0x100
var_FC= -0xFC
var_F8= -0xF8
var_F4= -0xF4
var_F0= -0xF0
var_E8= -0xE8
var_E4= -0xE4
var_E0= -0xE0
var_DC= -0xDC
var_D8= -0xD8
var_D4= -0xD4
var_D0= -0xD0
var_CC= -0xCC
var_C8= -0xC8
var_C4= -0xC4
var_C0= -0xC0
var_BC= -0xBC
var_B8= -0xB8
var_B4= -0xB4
var_B0= -0xB0
var_AC= -0xAC
var_A8= -0xA8
var_A4= -0xA4
var_A0= -0xA0
var_9C= -0x9C
var_98= -0x98
var_94= -0x94
var_90= -0x90
var_8C= -0x8C
var_88= -0x88
var_84= -0x84
var_80= -0x80
var_7C= -0x7C
var_78= -0x78
var_74= -0x74
var_70= -0x70
var_6C= -0x6C
var_68= -0x68
var_64= -0x64
var_60= -0x60
var_5C= -0x5C
var_58= -0x58
var_54= -0x54
var_50= -0x50
var_4C= -0x4C
var_48= -0x48
var_44= -0x44
var_40= -0x40
var_3C= -0x3C
var_38= -0x38
var_34= -0x34
var_30= -0x30
var_2C= -0x2C
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x150
li      $gp, 0x42E470
sw      $ra, 0x150+var_4($sp)
sw      $fp, 0x150+var_8($sp)
sw      $s7, 0x150+var_C($sp)
sw      $s6, 0x150+var_10($sp)
sw      $s5, 0x150+var_14($sp)
sw      $s4, 0x150+var_18($sp)
sw      $s3, 0x150+var_1C($sp)
sw      $s2, 0x150+var_20($sp)
sw      $s1, 0x150+var_24($sp)
sw      $s0, 0x150+var_28($sp)
sw      $gp, 0x150+var_130($sp)
la      $v0, g_stDevDesc
la      $t9, ATP_UPnP_RegDevice
lui     $a2, 0x41
lw      $a1, (dword_426854 - 0x426850)($v0)
addiu   $v0, $sp, 0x150+var_128
la      $a2, aInternetgatewa  # "InternetGatewayDevice:1"
move    $a0, $zero
li      $a3, 3
sw      $v0, 0x150+var_138($sp)
sw      $zero, 0x150+var_128($sp)
sw      $zero, 0x150+var_124($sp)
sw      $zero, 0x150+var_120($sp)
sw      $zero, 0x150+var_11C($sp)
sw      $zero, 0x150+var_118($sp)
sw      $zero, 0x150+var_114($sp)
sw      $zero, 0x150+var_110($sp)
sw      $zero, 0x150+var_10C($sp)
sw      $zero, 0x150+var_108($sp)
sw      $zero, 0x150+var_104($sp)
sw      $zero, 0x150+var_100($sp)
sw      $zero, 0x150+var_FC($sp)
sw      $zero, 0x150+var_F8($sp)
sw      $zero, 0x150+var_F4($sp)
sw      $zero, 0x150+var_F0($sp)
sw      $zero, 0x150+var_140($sp)
jalr    $t9 ; ATP_UPnP_RegDevice
sw      $zero, 0x150+var_13C($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_128($sp)
addiu   $v1, $sp, 0x150+var_124
la      $t9, ATP_UPnP_RegService
lui     $a1, 0x41
lui     $a2, 0x41
sw      $v1, 0x150+var_138($sp)
la      $a1, aUrnWwwHuaweiCo  # "urn:www-huawei-com:service:DeviceUpgrad"...
la      $a2, aDevupgXml  # "DevUpg.xml"
li      $a3, 2
sw      $zero, 0x150+var_140($sp)
sw      $zero, 0x150+var_13C($sp)
jalr    $t9 ; ATP_UPnP_RegService
move    $s3, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_128($sp)
addiu   $v1, $sp, 0x150+var_120
la      $t9, ATP_UPnP_RegService
lui     $a1, 0x41
lui     $a2, 0x41
sw      $v1, 0x150+var_138($sp)
la      $a1, aLayer3forwardi  # "Layer3Forwarding:1"
la      $a2, aL3fwdXml   # "L3Fwd.xml"
li      $a3, 3
sw      $zero, 0x150+var_140($sp)
sw      $zero, 0x150+var_13C($sp)
jalr    $t9 ; ATP_UPnP_RegService
move    $s0, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_128($sp)
addiu   $v1, $sp, 0x150+var_118
la      $t9, ATP_UPnP_RegService
lui     $a1, 0x41
lui     $a2, 0x41
sw      $v1, 0x150+var_138($sp)
la      $a1, aLanconfigsecur  # "LANConfigSecurity:1"
la      $a2, aLansecXml  # "LANSec.xml"
li      $a3, 2
sw      $zero, 0x150+var_140($sp)
sw      $zero, 0x150+var_13C($sp)
jalr    $t9 ; ATP_UPnP_RegService
move    $s2, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_128($sp)
addiu   $v1, $sp, 0x150+var_11C
la      $t9, ATP_UPnP_RegService
lui     $a1, 0x41
lui     $a2, 0x41
addu    $s0, $s3
move    $s1, $v0
sw      $v1, 0x150+var_138($sp)
sw      $zero, 0x150+var_140($sp)
sw      $zero, 0x150+var_13C($sp)
la      $a1, aUrnWwwHuaweiCo_0  # "urn:www-huawei-com:service:DeviceConfig"...
la      $a2, aDevcfgXml  # "DevCfg.xml"
li      $a3, 2
jalr    $t9 ; ATP_UPnP_RegService
addu    $s0, $s2
addu    $s0, $s1
addu    $v0, $s0, $v0
lw      $gp, 0x150+var_130($sp)
bnez    $v0, loc_408218
li      $s1, 1
la      $t9, ATP_UPnP_RegDevice
lw      $a0, 0x150+var_128($sp)
addiu   $v0, $sp, 0x150+var_110
la      $a2, aWandevice1  # "WANDevice:1"
sw      $s1, 0x150+var_140($sp)
move    $a1, $zero
li      $a3, 3
sw      $v0, 0x150+var_138($sp)
jalr    $t9 ; ATP_UPnP_RegDevice
sw      $zero, 0x150+var_13C($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_110($sp)
addiu   $v1, $sp, 0x150+var_10C
la      $t9, ATP_UPnP_RegService
lui     $a1, 0x41
lui     $a2, 0x41
sw      $v1, 0x150+var_138($sp)
la      $a1, aWancommoninter  # "WANCommonInterfaceConfig:1"
la      $a2, aWancommonifc1X  # "WanCommonIfc1.xml"
li      $a3, 2
sw      $zero, 0x150+var_140($sp)
sw      $zero, 0x150+var_13C($sp)
jalr    $t9 ; ATP_UPnP_RegService
move    $fp, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_110($sp)
addiu   $v1, $sp, 0x150+var_114
la      $t9, ATP_UPnP_RegService
lui     $a1, 0x41
lui     $a2, 0x41
sw      $v1, 0x150+var_138($sp)
la      $a1, aWandslinterfac  # "WANDSLInterfaceConfig:1"
la      $a2, aWandslifcfgXml  # "WanDslIfCfg.xml"
li      $a3, 3
sw      $zero, 0x150+var_140($sp)
sw      $zero, 0x150+var_13C($sp)
jalr    $t9 ; ATP_UPnP_RegService
move    $s0, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_110($sp)
addiu   $v1, $sp, 0x150+var_108
la      $t9, ATP_UPnP_RegDevice
lui     $a2, 0x41
sw      $v1, 0x150+var_138($sp)
la      $a2, aWanconnectiond  # "WANConnectionDevice:1"
sw      $s1, 0x150+var_140($sp)
move    $a1, $zero
li      $a3, 3
sw      $zero, 0x150+var_13C($sp)
jalr    $t9 ; ATP_UPnP_RegDevice
move    $s7, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_108($sp)
addiu   $v1, $sp, 0x150+var_F0
la      $t9, ATP_UPnP_RegService
lui     $a1, 0x41
lui     $a2, 0x41
sw      $v1, 0x150+var_138($sp)
la      $a1, aWandsllinkconf  # "WANDSLLinkConfig:1"
la      $a2, aWandsllinkXml  # "WanDslLink.xml"
li      $a3, 2
sw      $zero, 0x150+var_140($sp)
sw      $zero, 0x150+var_13C($sp)
jalr    $t9 ; ATP_UPnP_RegService
move    $s6, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_108($sp)
addiu   $v1, $sp, 0x150+var_100
la      $t9, ATP_UPnP_RegService
lui     $a1, 0x41
lui     $a2, 0x41
sw      $v1, 0x150+var_138($sp)
la      $a1, aWanipconnectio  # "WANIPConnection:1"
la      $a2, aWanipconnXml  # "WanIpConn.xml"
sw      $s1, 0x150+var_140($sp)
li      $a3, 3
sw      $zero, 0x150+var_13C($sp)
jalr    $t9 ; ATP_UPnP_RegService
move    $s5, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_108($sp)
addiu   $v1, $sp, 0x150+var_104
la      $t9, ATP_UPnP_RegService
lui     $a1, 0x41
lui     $a2, 0x41
sw      $v1, 0x150+var_138($sp)
la      $a1, aWanpppconnecti  # "WANPPPConnection:1"
la      $a2, aWanpppconnXml  # "WanPppConn.xml"
sw      $s1, 0x150+var_140($sp)
li      $a3, 3
sw      $zero, 0x150+var_13C($sp)
jalr    $t9 ; ATP_UPnP_RegService
move    $s4, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_128($sp)
addiu   $v1, $sp, 0x150+var_FC
la      $t9, ATP_UPnP_RegDevice
lui     $a2, 0x41
sw      $v1, 0x150+var_138($sp)
la      $a2, aLandevice1  # "LANDevice:1"
sw      $s1, 0x150+var_140($sp)
move    $a1, $zero
li      $a3, 2
sw      $zero, 0x150+var_13C($sp)
jalr    $t9 ; ATP_UPnP_RegDevice
move    $s3, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_FC($sp)
addiu   $v1, $sp, 0x150+var_F8
la      $t9, ATP_UPnP_RegService
lui     $a1, 0x41
lui     $a2, 0x41
sw      $v1, 0x150+var_138($sp)
la      $a1, aLanhostconfigm  # "LANHostConfigManagement:1"
la      $a2, aLanhostcfgmgmt  # "LanHostCfgMgmt.xml"
li      $a3, 2
sw      $zero, 0x150+var_140($sp)
sw      $zero, 0x150+var_13C($sp)
addu    $s0, $fp
move    $s2, $v0
jalr    $t9 ; ATP_UPnP_RegService
addu    $s0, $s7
lw      $gp, 0x150+var_130($sp)
addu    $s0, $s6
addu    $s0, $s5
la      $t9, ATP_UPnP_RegService
lw      $a0, 0x150+var_FC($sp)
addu    $s0, $s4
addiu   $v1, $sp, 0x150+var_F4
lui     $a1, 0x41
lui     $a2, 0x41
addu    $s0, $s3
sw      $s1, 0x150+var_140($sp)
sw      $v1, 0x150+var_138($sp)
move    $s1, $v0
sw      $zero, 0x150+var_13C($sp)
la      $a1, aWlanconfigurat  # "WLANConfiguration:1"
la      $a2, aWlancfgXml  # "WLANCfg.xml"
li      $a3, 2
jalr    $t9 ; ATP_UPnP_RegService
addu    $s0, $s2
addu    $s0, $s1
addu    $v0, $s0, $v0
lw      $gp, 0x150+var_130($sp)
bnez    $v0, loc_408218
nop
la      $t9, ATP_UPNP_RegAction
lw      $a0, 0x150+var_124($sp)
jalr    $t9 ; ATP_UPNP_RegAction
move    $a1, $zero
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_124($sp)
li      $a1, 1
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_E8($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 2
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
move    $s0, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 3
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_2C($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 4
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_30($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 5
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_34($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 6
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_38($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 7
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_3C($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 0x31
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_40($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 0x32
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_44($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 0x33
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_48($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 0x34
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_4C($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 0x35
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_50($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 0x36
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_54($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 0x37
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_58($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 0x38
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_5C($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F4($sp)
li      $a1, 0x39
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_60($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_118($sp)
li      $a1, 8
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_64($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_11C($sp)
li      $a1, 9
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_68($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_11C($sp)
li      $a1, 0xA
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_6C($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_11C($sp)
li      $a1, 0xB
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_70($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_11C($sp)
li      $a1, 0xC
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_74($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F0($sp)
li      $a1, 0xD
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_78($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_100($sp)
li      $a1, 0xE
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_7C($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_100($sp)
li      $a1, 0xF
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_80($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_100($sp)
li      $a1, 0x10
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_84($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_100($sp)
li      $a1, 0x11
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_88($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_100($sp)
li      $a1, 0x16
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_8C($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x12
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_90($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x13
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_94($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x14
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_98($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x15
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_9C($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x17
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_A0($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x18
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_A4($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F8($sp)
li      $a1, 0x19
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_A8($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F8($sp)
li      $a1, 0x1A
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_AC($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F8($sp)
li      $a1, 0x1B
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_B0($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F8($sp)
li      $a1, 0x1C
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_B4($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_10C($sp)
li      $a1, 0x1D
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_B8($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_10C($sp)
li      $a1, 0x1E
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_BC($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x1F
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_C0($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x21
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_C4($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_100($sp)
li      $a1, 0x20
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_C8($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_100($sp)
li      $a1, 0x22
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_CC($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_100($sp)
li      $a1, 0x2E
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_D0($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_100($sp)
li      $a1, 0x2F
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_D4($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_100($sp)
li      $a1, 0x30
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_D8($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x29
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_DC($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x2A
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_E0($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x2B
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
sw      $v0, 0x150+var_E4($sp)
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x2C
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
move    $fp, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_104($sp)
li      $a1, 0x2D
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
move    $s7, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F0($sp)
li      $a1, 0x23
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
move    $s6, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F0($sp)
li      $a1, 0x24
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
move    $s5, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F0($sp)
li      $a1, 0x25
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
move    $s4, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F0($sp)
li      $a1, 0x26
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
move    $s3, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F0($sp)
li      $a1, 0x27
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
move    $s2, $v0
lw      $gp, 0x150+var_130($sp)
lw      $a0, 0x150+var_F0($sp)
li      $a1, 0x28
la      $t9, ATP_UPNP_RegAction
nop
jalr    $t9 ; ATP_UPNP_RegAction
move    $s1, $v0
lw      $v1, 0x150+var_E8($sp)
lw      $gp, 0x150+var_130($sp)
addu    $s0, $v1
lw      $v1, 0x150+var_2C($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_30($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_34($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_38($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_3C($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_40($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_44($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_48($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_4C($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_50($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_54($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_58($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_5C($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_60($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_64($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_68($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_6C($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_70($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_74($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_78($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_7C($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_80($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_84($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_88($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_8C($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_90($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_94($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_98($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_9C($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_A0($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_A4($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_A8($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_AC($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_B0($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_B4($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_B8($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_BC($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_C0($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_C4($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_C8($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_CC($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_D0($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_D4($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_D8($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_DC($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_E0($sp)
nop
addu    $s0, $v1
lw      $v1, 0x150+var_E4($sp)
nop
addu    $s0, $v1
addu    $s0, $fp
addu    $s0, $s7
addu    $s0, $s6
addu    $s0, $s5
addu    $s0, $s4
addu    $s0, $s3
addu    $s0, $s2
addu    $s0, $s1
addu    $v0, $s0, $v0

loc_408218:
lw      $ra, 0x150+var_4($sp)
lw      $fp, 0x150+var_8($sp)
lw      $s7, 0x150+var_C($sp)
lw      $s6, 0x150+var_10($sp)
lw      $s5, 0x150+var_14($sp)
lw      $s4, 0x150+var_18($sp)
lw      $s3, 0x150+var_1C($sp)
lw      $s2, 0x150+var_20($sp)
lw      $s1, 0x150+var_24($sp)
lw      $s0, 0x150+var_28($sp)
jr      $ra
addiu   $sp, 0x150
 # End of function ATP_UPNP_RegDeviceAndService

.align 4

locret_408250:
jr      $ra
nop
beqz    $a0, locret_408278
lui     $v1, 0x4009
lw      $v0, g_pstUPnPStack
move    $v1, $zero
lw      $v0, 0($v0)
nop
sw      $v0, 0($a0)

locret_408278:
jr      $ra
move    $v0, $v1



.globl ATP_UPNP_GetVersion
ATP_UPNP_GetVersion:
lui     $v0, 0x41
jr      $ra
la      $v0, aHg532ev100r001  # "HG532eV100R001C01B020 UPNP <libupnpapi."...
 # End of function ATP_UPNP_GetVersion




.globl ATP_UPNP_SetTr064SecurityInfo
ATP_UPNP_SetTr064SecurityInfo:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
beqz    $a0, loc_4082EC
move    $s1, $a0
lui     $s0, 0x42
lw      $v0, g_pstUPnPStack
la      $t9, ATP_UPNP_Free
lw      $a0, 0x20($v0)
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)
lw      $s0, g_pstUPnPStack
move    $a0, $s1
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
sw      $zero, 0x20($s0)
lw      $gp, 0x28+var_18($sp)
sw      $v0, 0x20($s0)

loc_4082EC:
lw      $ra, 0x28+var_4($sp)
move    $v0, $zero
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function ATP_UPNP_SetTr064SecurityInfo

lui     $gp, 0x43
addiu   $sp, -0x38
li      $gp, 0x42E470
sw      $ra, 0x34($sp)
sw      $s3, 0x30($sp)
sw      $s2, 0x2C($sp)
sw      $s1, 0x28($sp)
sw      $s0, 0x24($sp)
sw      $gp, 0x18($sp)
move    $s2, $a0
move    $s1, $a1
move    $s0, $a2
beqz    $a0, loc_40839C
move    $s3, $a3
beqz    $a2, loc_4083A0
lui     $v1, 0x4009
lw      $a3, 8($a0)
nop
beqz    $a3, loc_4083A0
nop
beqz    $a1, loc_408384
lui     $a2, 0x41
lw      $v0, 0xC($a0)
la      $t9, snprintf
move    $a0, $a1
sw      $v0, 0x10($sp)
la      $a2, aSD_2       # "%s%d"
jalr    $t9 ; snprintf
move    $a1, $s0
addu    $v0, $s1, $s0
lw      $gp, 0x18($sp)
sb      $zero, -1($v0)

loc_408384:
beqz    $s3, loc_4083A0
move    $v1, $zero
lw      $v0, 0x14($s2)
move    $v1, $zero
b       loc_4083A0
sw      $v0, 0($s3)

loc_40839C:
lui     $v1, 0x4009

loc_4083A0:
lw      $ra, 0x34($sp)
move    $v0, $v1
lw      $s3, 0x30($sp)
lw      $s2, 0x2C($sp)
lw      $s1, 0x28($sp)
lw      $s0, 0x24($sp)
jr      $ra
addiu   $sp, 0x38
lui     $gp, 0x43
addiu   $sp, -0x140
li      $gp, 0x42E470
sw      $ra, 0x13C($sp)
sw      $s5, 0x138($sp)
sw      $s4, 0x134($sp)
sw      $s3, 0x130($sp)
sw      $s2, 0x12C($sp)
sw      $s1, 0x128($sp)
sw      $s0, 0x124($sp)
sw      $gp, 0x18($sp)
move    $s3, $a0
beqz    $a0, loc_408490
move    $s4, $a1
beqz    $a1, loc_408490
lui     $v0, 0x42
lw      $v1, g_pstUpnpGvarHead
lui     $v0, 0x41
addiu   $s5, $v0, (aSD_2 - 0x410000)  # "%s%d"
lw      $s1, 0($v1)
b       loc_408488
addiu   $s2, $sp, 0x20

loc_408418:
lw      $s0, 0x1C($s1)
b       loc_408460
nop

loc_408424:
lw      $v0, 0xC($s0)
lw      $a3, 8($s0)
jalr    $t9 ; snprintf
sw      $v0, 0x10($sp)
lw      $gp, 0x18($sp)
sb      $zero, 0x11F($sp)
move    $a0, $s2
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a1, $s3
lw      $gp, 0x18($sp)
beqz    $v0, loc_40847C
nop
lw      $s0, 0x38($s0)

loc_408460:
la      $t9, snprintf
move    $a0, $s2
li      $a1, 0x100
bnez    $s0, loc_408424
move    $a2, $s5
b       loc_4084B8
nop

loc_40847C:
sw      $s0, 0($s4)
b       loc_408494
move    $v0, $zero

loc_408488:
bnez    $s1, loc_408418
nop

loc_408490:
lui     $v0, 0x4009

loc_408494:
lw      $ra, 0x13C($sp)
lw      $s5, 0x138($sp)
lw      $s4, 0x134($sp)
lw      $s3, 0x130($sp)
lw      $s2, 0x12C($sp)
lw      $s1, 0x128($sp)
lw      $s0, 0x124($sp)
jr      $ra
addiu   $sp, 0x140

loc_4084B8:
la      $t9, device_iterator
nop
jalr    $t9 ; device_iterator
move    $a0, $s1
lw      $gp, 0x18($sp)
b       loc_408488
move    $s1, $v0



sub_4084D4:

var_20= -0x20
var_18= -0x18
var_10= -0x10
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x30+var_4($sp)
sw      $s0, 0x30+var_8($sp)
sw      $gp, 0x30+var_18($sp)
la      $t9, TSP_XML_CreateNode
addiu   $v0, $sp, 0x30+var_10
move    $a3, $a2
sw      $v0, 0x30+var_20($sp)
move    $a2, $a1
move    $s0, $a0
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a0, $zero
lw      $gp, 0x30+var_18($sp)
bnez    $v0, loc_408530
nop
la      $t9, TSP_XML_AppendChildNode
lw      $a1, 0x30+var_10($sp)
jalr    $t9 ; TSP_XML_AppendChildNode
move    $a0, $s0
lw      $gp, 0x30+var_18($sp)

loc_408530:
lw      $ra, 0x30+var_4($sp)
lw      $s0, 0x30+var_8($sp)
jr      $ra
addiu   $sp, 0x30
 # End of function sub_4084D4




sub_408540:

var_30= -0x30
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x40
li      $gp, 0x42E470
sw      $ra, 0x40+var_4($sp)
sw      $fp, 0x40+var_8($sp)
sw      $s7, 0x40+var_C($sp)
sw      $s6, 0x40+var_10($sp)
sw      $s5, 0x40+var_14($sp)
sw      $s4, 0x40+var_18($sp)
sw      $s3, 0x40+var_1C($sp)
sw      $s2, 0x40+var_20($sp)
sw      $s1, 0x40+var_24($sp)
sw      $s0, 0x40+var_28($sp)
sw      $gp, 0x40+var_30($sp)
la      $t9, strlen
move    $s0, $a0
jalr    $t9 ; strlen
li      $fp, 0x26
lw      $gp, 0x40+var_30($sp)
addu    $t3, $s0, $v0
move    $a1, $s0
move    $v1, $s0
li      $s7, 0x71
li      $s6, 0x6C
li      $s5, 0x67
li      $t2, 0x74
li      $t0, 0x3B
li      $s4, 0x3E
li      $s3, 0x3C
li      $s2, 0x61
li      $t5, 0x70
li      $s1, 0x6D
li      $ra, 0x26
li      $t4, 0x6F
li      $t9, 0x73
li      $t8, 0x27
li      $t7, 0x75
b       loc_408734
li      $t6, 0x22

loc_4085DC:
lb      $t1, 0($v1)
nop
bne     $t1, $fp, loc_408728
nop
lb      $a2, 1($v1)
nop
bne     $a2, $s7, loc_408644
nop
lb      $v0, 2($v1)
nop
bne     $v0, $t7, loc_408644
nop
lb      $v0, 3($v1)
nop
bne     $v0, $t4, loc_408644
nop
lb      $v0, 4($v1)
nop
bne     $v0, $t2, loc_4086C8
nop
lb      $v0, 5($v1)
nop
bne     $v0, $t0, loc_4086C8
addiu   $a0, $v1, 5
b       loc_408690
sb      $t6, 0($a1)

loc_408644:
bne     $a2, $s2, loc_4086C8
nop
lb      $a3, 2($v1)
nop
bne     $a3, $t5, loc_408698
nop
lb      $v0, 3($v1)
nop
bne     $v0, $t4, loc_408698
nop
lb      $v0, 4($v1)
nop
bne     $v0, $t9, loc_408698
nop
lb      $v0, 5($v1)
nop
bne     $v0, $t0, loc_408698
addiu   $a0, $v1, 5
sb      $t8, 0($a1)

loc_408690:
b       loc_40872C
move    $v1, $a0

loc_408698:
bne     $a3, $s1, loc_4086C8
nop
lb      $v0, 3($v1)
nop
bne     $v0, $t5, loc_4086C8
nop
lb      $v0, 4($v1)
nop
bne     $v0, $t0, loc_4086C8
addiu   $a0, $v1, 4
b       loc_408690
sb      $ra, 0($a1)

loc_4086C8:
bne     $a2, $s6, loc_4086F8
nop
lb      $v0, 2($v1)
nop
bne     $v0, $t2, loc_4086F8
nop
lb      $v0, 3($v1)
nop
bne     $v0, $t0, loc_408728
addiu   $a0, $v1, 3
b       loc_408690
sb      $s3, 0($a1)

loc_4086F8:
bne     $a2, $s5, loc_408728
nop
lb      $v0, 2($v1)
nop
bne     $v0, $t2, loc_408728
nop
lb      $v0, 3($v1)
nop
bne     $v0, $t0, loc_408728
addiu   $a0, $v1, 3
b       loc_408690
sb      $s4, 0($a1)

loc_408728:
sb      $t1, 0($a1)

loc_40872C:
addiu   $a1, 1
addiu   $v1, 1

loc_408734:
sltu    $v0, $v1, $t3
bnez    $v0, loc_4085DC
subu    $v0, $a1, $s0
sb      $zero, 0($a1)
lw      $ra, 0x40+var_4($sp)
lw      $fp, 0x40+var_8($sp)
lw      $s7, 0x40+var_C($sp)
lw      $s6, 0x40+var_10($sp)
lw      $s5, 0x40+var_14($sp)
lw      $s4, 0x40+var_18($sp)
lw      $s3, 0x40+var_1C($sp)
lw      $s2, 0x40+var_20($sp)
lw      $s1, 0x40+var_24($sp)
lw      $s0, 0x40+var_28($sp)
jr      $ra
addiu   $sp, 0x40
 # End of function sub_408540




sub_408774:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
move    $s0, $a0

loc_408794:
beqz    $s0, loc_4087F8
nop
lw      $v0, 0($s0)
la      $t9, free
lw      $s1, 8($s0)
beqz    $v0, loc_4087BC
move    $a0, $v0
jalr    $t9 ; free
nop
lw      $gp, 0x28+var_18($sp)

loc_4087BC:
lw      $v0, 4($s0)
la      $t9, free
beqz    $v0, loc_4087E0
move    $a0, $v0
jalr    $t9 ; free
nop
lw      $gp, 0x28+var_18($sp)
nop
la      $t9, free

loc_4087E0:
move    $a0, $s0
jalr    $t9 ; free
move    $s0, $s1
lw      $gp, 0x28+var_18($sp)
b       loc_408794
nop

loc_4087F8:
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_408774




sub_40880C:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
lui     $v0, 0x42
lw      $v1, dword_426870
li      $v0, 1
beq     $v1, $v0, loc_408890
lui     $v0, 0x42
lw      $v0, g_pstUPnPStack
nop
lw      $s0, 0x14($v0)
b       loc_408888
sw      $zero, 0x14($v0)

loc_408850:
lw      $t9, 0($s0)
lw      $s1, 8($s0)
beqz    $t9, loc_408874
nop
lw      $a0, 4($s0)
jalr    $t9
nop
lw      $gp, 0x28+var_18($sp)
nop

loc_408874:
la      $t9, free
move    $a0, $s0
jalr    $t9 ; free
move    $s0, $s1
lw      $gp, 0x28+var_18($sp)

loc_408888:
bnez    $s0, loc_408850
nop

loc_408890:
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_40880C




sub_4088A4:

var_178= -0x178
var_174= -0x174
var_170= -0x170
var_16C= -0x16C
var_168= -0x168
var_164= -0x164
var_160= -0x160
var_158= -0x158
var_154= -0x154
var_150= -0x150
var_14C= -0x14C
var_148= -0x148
var_144= -0x144
var_140= -0x140
var_13C= -0x13C
var_128= -0x128
var_29= -0x29
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x188
li      $gp, 0x42E470
sw      $ra, 0x188+var_4($sp)
sw      $fp, 0x188+var_8($sp)
sw      $s7, 0x188+var_C($sp)
sw      $s6, 0x188+var_10($sp)
sw      $s5, 0x188+var_14($sp)
sw      $s4, 0x188+var_18($sp)
sw      $s3, 0x188+var_1C($sp)
sw      $s2, 0x188+var_20($sp)
sw      $s1, 0x188+var_24($sp)
sw      $s0, 0x188+var_28($sp)
sw      $gp, 0x188+var_160($sp)
move    $s4, $a0
move    $fp, $a1
beqz    $a0, loc_408C3C
move    $s7, $a2
lw      $v0, 4($a0)
nop
beqz    $v0, loc_408C4C
lui     $s0, 0x4009
lw      $a1, 0($a0)
nop
beqz    $a1, loc_408C4C
li      $a2, 0x100
la      $t9, strncpy
addiu   $s0, $sp, 0x188+var_128
move    $a0, $s0
jalr    $t9 ; strncpy
sh      $zero, 0x188+var_158($sp)
lw      $gp, 0x188+var_160($sp)
addiu   $v0, $sp, 0x188+var_150
sw      $v0, 0x188+var_178($sp)
la      $t9, ATP_UTIL_ParseUrl
sb      $zero, 0x188+var_29($sp)
sw      $zero, 0x188+var_154($sp)
sw      $zero, 0x188+var_150($sp)
move    $a0, $s0
addiu   $a1, $sp, 0x188+var_144
addiu   $a2, $sp, 0x188+var_154
jalr    $t9 ; ATP_UTIL_ParseUrl
addiu   $a3, $sp, 0x188+var_14C
lw      $gp, 0x188+var_160($sp)
beqz    $v0, loc_408C48
lui     $v0, 0x4009
lw      $v0, 0x188+var_144($sp)
nop
bnez    $v0, loc_40898C
move    $a1, $zero
la      $t9, ATP_UTIL_GetIpAddresses
lw      $a0, 0x188+var_154($sp)
addiu   $a2, $sp, 0x188+var_148
jalr    $t9 ; ATP_UTIL_GetIpAddresses
addiu   $a3, $sp, 0x188+var_158
lw      $gp, 0x188+var_160($sp)
beqz    $v0, loc_4089DC
nop

loc_40898C:
lw      $a0, 0x188+var_154($sp)
nop
beqz    $a0, loc_4089B0
nop
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x188+var_160($sp)

loc_4089B0:
lw      $a0, 0x188+var_150($sp)
nop
beqz    $a0, loc_408C44
nop
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x188+var_160($sp)
b       loc_408C48
lui     $v0, 0x4009

loc_4089DC:
lw      $v0, 0x188+var_148($sp)
nop
lw      $s0, 0($v0)
lw      $v0, 0x188+var_150($sp)
nop
bnez    $v0, loc_408A10
lui     $a0, 0x41
la      $t9, strdup
nop
jalr    $t9 ; strdup
la      $a0, (aEvt+4)    # "/"
lw      $gp, 0x188+var_160($sp)
sw      $v0, 0x188+var_150($sp)

loc_408A10:
la      $t9, ATP_UTIL_StrFileOpen
lw      $s6, 0x188+var_154($sp)
lw      $s5, 0x188+var_150($sp)
lw      $s3, 0x188+var_14C($sp)
jalr    $t9 ; ATP_UTIL_StrFileOpen
li      $a0, 0x400
lw      $gp, 0x188+var_160($sp)
bnez    $v0, loc_408A40
move    $s1, $v0
lui     $v0, 0x4009
b       loc_408BF0
ori     $s0, $v0, 2

loc_408A40:
la      $t9, ATP_UTIL_SocketCreateClient
addiu   $s2, $sp, 0x188+var_13C
move    $a0, $s2
move    $a1, $zero
sw      $zero, 0x188+var_13C($sp)
sw      $zero, 4($s2)
sw      $zero, 8($s2)
sw      $zero, 0xC($s2)
jalr    $t9 ; ATP_UTIL_SocketCreateClient
sw      $zero, 0x10($s2)
lw      $gp, 0x188+var_160($sp)
move    $a1, $s0
move    $a0, $s2
la      $t9, ATP_UTIL_SocketConnect
andi    $a2, $s3, 0xFFFF
jalr    $t9 ; ATP_UTIL_SocketConnect
move    $s0, $v0
addu    $s0, $v0, $s0
lw      $gp, 0x188+var_160($sp)
beqz    $s0, loc_408AA0
addiu   $v0, $s7, 0x17
la      $t9, ATP_UTIL_StrFileClose
b       loc_408BC8
move    $a0, $s1

loc_408AA0:
lw      $v1, 4($s4)
lw      $a0, 0xC($s4)
la      $t9, ATP_UTIL_StrFilePrintf
sw      $v0, 0x188+var_174($sp)
la      $v0, aXmlVersion10  # "<?xml version=\"1.0\"?>\r\n"
lui     $a1, 0x41
sw      $v1, 0x188+var_170($sp)
la      $a1, aNotifySHttp11H  # "NOTIFY %s HTTP/1.1\r\nHOST: %s:%d\r\nCO"...
move    $a2, $s5
move    $a3, $s6
sw      $a0, 0x188+var_16C($sp)
sw      $s3, 0x188+var_178($sp)
move    $a0, $s1
sw      $v0, 0x188+var_168($sp)
jalr    $t9 ; ATP_UTIL_StrFilePrintf
sw      $fp, 0x188+var_164($sp)
lw      $gp, 0x188+var_160($sp)
nop
la      $t9, ATP_UTIL_StrFileBuffer
nop
jalr    $t9 ; ATP_UTIL_StrFileBuffer
move    $a0, $s1
lw      $gp, 0x188+var_160($sp)
move    $a0, $s1
la      $t9, ATP_UTIL_StrFileTell
nop
jalr    $t9 ; ATP_UTIL_StrFileTell
move    $s0, $v0
lw      $gp, 0x188+var_160($sp)
beqz    $s0, loc_408B28
sw      $v0, 0x188+var_140($sp)
bgtz    $v0, loc_408B4C
move    $a2, $v0

loc_408B28:
la      $t9, ATP_UTIL_StrFileClose
nop
jalr    $t9 ; ATP_UTIL_StrFileClose
move    $a0, $s1
lw      $gp, 0x188+var_160($sp)
nop
la      $t9, ATP_UTIL_SocketDisconnect
b       loc_408B88
addiu   $a0, $sp, 0x188+var_13C

loc_408B4C:
la      $t9, ATP_UTIL_SocketSend
move    $a0, $s2
jalr    $t9 ; ATP_UTIL_SocketSend
move    $a1, $s0
lw      $gp, 0x188+var_160($sp)
beqz    $v0, loc_408BA0
move    $a1, $s0
la      $t9, ATP_UTIL_StrFileClose
nop
jalr    $t9 ; ATP_UTIL_StrFileClose
move    $a0, $s1
lw      $gp, 0x188+var_160($sp)
move    $a0, $s2
la      $t9, ATP_UTIL_SocketDisconnect
nop

loc_408B88:
jalr    $t9 ; ATP_UTIL_SocketDisconnect
nop
lui     $v0, 0x4009
lw      $gp, 0x188+var_160($sp)
b       loc_408BF0
ori     $s0, $v0, 6

loc_408BA0:
la      $t9, ATP_UTIL_SocketRecv
lw      $a2, 0x188+var_140($sp)
move    $a0, $s2
jalr    $t9 ; ATP_UTIL_SocketRecv
addiu   $a3, $sp, 0x188+var_140
lw      $gp, 0x188+var_160($sp)
move    $a0, $s1
move    $s0, $v0
la      $t9, ATP_UTIL_StrFileClose
nop

loc_408BC8:
jalr    $t9 ; ATP_UTIL_StrFileClose
nop
lw      $gp, 0x188+var_160($sp)
nop
la      $t9, ATP_UTIL_SocketDisconnect
nop
jalr    $t9 ; ATP_UTIL_SocketDisconnect
move    $a0, $s2
lw      $gp, 0x188+var_160($sp)
nop

loc_408BF0:
la      $t9, free
lw      $a0, 0x188+var_148($sp)
jalr    $t9 ; free
nop
lw      $gp, 0x188+var_160($sp)
lw      $a0, 0x188+var_154($sp)
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x188+var_160($sp)
lw      $a0, 0x188+var_150($sp)
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x188+var_160($sp)
b       loc_408C4C
nop

loc_408C3C:
b       loc_408C4C
lui     $s0, 0x4009

loc_408C44:
lui     $v0, 0x4009

loc_408C48:
ori     $s0, $v0, 6

loc_408C4C:
lw      $ra, 0x188+var_4($sp)
move    $v0, $s0
lw      $fp, 0x188+var_8($sp)
lw      $s7, 0x188+var_C($sp)
lw      $s6, 0x188+var_10($sp)
lw      $s5, 0x188+var_14($sp)
lw      $s4, 0x188+var_18($sp)
lw      $s3, 0x188+var_1C($sp)
lw      $s2, 0x188+var_20($sp)
lw      $s1, 0x188+var_24($sp)
lw      $s0, 0x188+var_28($sp)
jr      $ra
addiu   $sp, 0x188
 # End of function sub_4088A4




sub_408C80:

var_48= -0x48
var_40= -0x40
var_38= -0x38
var_34= -0x34
var_30= -0x30
var_2C= -0x2C
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x58
li      $gp, 0x42E470
sw      $ra, 0x58+var_4($sp)
sw      $fp, 0x58+var_8($sp)
sw      $s7, 0x58+var_C($sp)
sw      $s6, 0x58+var_10($sp)
sw      $s5, 0x58+var_14($sp)
sw      $s4, 0x58+var_18($sp)
sw      $s3, 0x58+var_1C($sp)
sw      $s2, 0x58+var_20($sp)
sw      $s1, 0x58+var_24($sp)
sw      $s0, 0x58+var_28($sp)
sw      $gp, 0x58+var_40($sp)
move    $s0, $a2
move    $s5, $a0
beqz    $a2, loc_408F4C
move    $s4, $a1
beqz    $a0, loc_408CE0
nop
bnez    $a1, loc_408F4C
move    $s3, $a0
b       loc_408CEC
nop

loc_408CE0:
beqz    $a1, loc_408CEC
move    $s3, $zero
lw      $s3, 0x14($a1)

loc_408CEC:
la      $t9, TSP_XML_CreateNode
addiu   $v0, $sp, 0x58+var_38
lui     $s2, 0x41
lui     $a2, 0x41
sw      $v0, 0x58+var_48($sp)
sw      $zero, 0x58+var_38($sp)
la      $a2, aPropertyset  # "propertyset"
move    $a0, $zero
addiu   $a1, $s2, (aArgumentRelate+0x1C - 0x410000)  # "e"
jalr    $t9 ; TSP_XML_CreateNode
move    $a3, $zero
lw      $gp, 0x58+var_40($sp)
bnez    $v0, loc_408F50
move    $s1, $v0
la      $t9, TSP_XML_AddAttr
lw      $a0, 0x58+var_38($sp)
lui     $a1, 0x41
lui     $a3, 0x41
la      $a1, aXmlns      # "xmlns"
la      $a3, aUrnSchemasUpnp  # "urn:schemas-upnp-org:event-1-0"
jalr    $t9 ; TSP_XML_AddAttr
addiu   $a2, $s2, (aArgumentRelate+0x1C - 0x410000)  # "e"
lw      $gp, 0x58+var_40($sp)
bnez    $v0, loc_408D98
move    $s1, $v0
lui     $v0, 0x41
addiu   $fp, $s2, (aArgumentRelate+0x1C - 0x410000)  # "e"
addiu   $s7, $v0, (aProperty - 0x410000)  # "property"
addiu   $s6, $sp, 0x58+var_34
addiu   $s2, $sp, 0x58+var_30

loc_408D64:
la      $t9, TSP_XML_CreateNode
move    $a0, $zero
move    $a1, $fp
sw      $s6, 0x58+var_48($sp)
move    $a2, $s7
jalr    $t9 ; TSP_XML_CreateNode
move    $a3, $zero
lw      $gp, 0x58+var_40($sp)
move    $a0, $zero
move    $a1, $zero
la      $t9, TSP_XML_CreateNode
beqz    $v0, loc_408DA8
move    $s1, $v0

loc_408D98:
la      $t9, TSP_XML_FreeNode
lw      $a0, 0x58+var_38($sp)
b       loc_408E48
nop

loc_408DA8:
lw      $a2, 0($s0)
lw      $a3, 4($s0)
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x58+var_48($sp)
lw      $gp, 0x58+var_40($sp)
lw      $a0, 0x58+var_34($sp)
la      $t9, TSP_XML_AppendChildNode
bnez    $v0, loc_408E28
move    $s1, $v0
lw      $a1, 0x58+var_30($sp)
jalr    $t9 ; TSP_XML_AppendChildNode
nop
lw      $gp, 0x58+var_40($sp)
nop
la      $t9, TSP_XML_AppendChildNode
beqz    $v0, loc_408E08
move    $s1, $v0
la      $t9, TSP_XML_FreeNode
lw      $a0, 0x58+var_30($sp)
jalr    $t9 ; TSP_XML_FreeNode
nop
lw      $gp, 0x58+var_40($sp)
b       loc_408E24
nop

loc_408E08:
lw      $a0, 0x58+var_38($sp)
lw      $a1, 0x58+var_34($sp)
jalr    $t9 ; TSP_XML_AppendChildNode
nop
lw      $gp, 0x58+var_40($sp)
beqz    $v0, loc_408E5C
move    $s1, $v0

loc_408E24:
lw      $a0, 0x58+var_34($sp)

loc_408E28:
la      $t9, TSP_XML_FreeNode
nop
jalr    $t9 ; TSP_XML_FreeNode
nop
lw      $gp, 0x58+var_40($sp)
lw      $a0, 0x58+var_38($sp)
la      $t9, TSP_XML_FreeNode
nop

loc_408E48:
jalr    $t9 ; TSP_XML_FreeNode
nop
lw      $gp, 0x58+var_40($sp)
b       loc_408F50
nop

loc_408E5C:
lw      $s0, 8($s0)
nop
bnez    $s0, loc_408D64
addiu   $a1, $sp, 0x58+var_2C
la      $t9, TSP_XML_Transform
lw      $a0, 0x58+var_38($sp)
jalr    $t9 ; TSP_XML_Transform
sw      $zero, 0x58+var_2C($sp)
lw      $gp, 0x58+var_40($sp)
lw      $a0, 0x58+var_38($sp)
la      $t9, TSP_XML_FreeNode
nop
jalr    $t9 ; TSP_XML_FreeNode
move    $s1, $v0
lw      $gp, 0x58+var_40($sp)
bnez    $s1, loc_408F50
nop
lw      $s0, 0x58+var_2C($sp)
nop
beqz    $s0, loc_408F50
nop
la      $t9, strlen
nop
jalr    $t9 ; strlen
move    $a0, $s0
lw      $gp, 0x58+var_40($sp)
beqz    $s5, loc_408F1C
move    $s2, $v0
beqz    $s3, loc_408F3C
nop
lw      $s0, 0x2C($s3)
b       loc_408F0C
move    $a0, $s0

loc_408EE0:
lw      $v0, 0xC($s0)
lw      $a1, 0x58+var_2C($sp)
addiu   $v0, 1
jal     sub_4088A4
sw      $v0, 0xC($s0)
lw      $gp, 0x58+var_40($sp)
bnez    $v0, loc_408F3C
nop
lw      $s0, 0x18($s0)
nop
move    $a0, $s0

loc_408F0C:
bnez    $s0, loc_408EE0
move    $a2, $s2
b       loc_408F3C
nop

loc_408F1C:
beqz    $s4, loc_408F3C
move    $a1, $s0
sw      $zero, 0xC($s4)
move    $a0, $s4
jal     sub_4088A4
move    $a2, $v0
lw      $gp, 0x58+var_40($sp)
nop

loc_408F3C:
la      $t9, TSP_XML_FreeMem
lw      $a0, 0x58+var_2C($sp)
b       loc_408E48
nop

loc_408F4C:
lui     $s1, 0x4009

loc_408F50:
lw      $ra, 0x58+var_4($sp)
move    $v0, $s1
lw      $fp, 0x58+var_8($sp)
lw      $s7, 0x58+var_C($sp)
lw      $s6, 0x58+var_10($sp)
lw      $s5, 0x58+var_14($sp)
lw      $s4, 0x58+var_18($sp)
lw      $s3, 0x58+var_1C($sp)
lw      $s2, 0x58+var_20($sp)
lw      $s1, 0x58+var_24($sp)
lw      $s0, 0x58+var_28($sp)
jr      $ra
addiu   $sp, 0x58
 # End of function sub_408C80




.globl ATP_UPNP_SendEvent
ATP_UPNP_SendEvent:
beqz    $a0, locret_408F9C
nop
beqz    $a1, locret_408F9C
move    $a2, $a1
j       sub_408C80
move    $a1, $zero

locret_408F9C:
jr      $ra
lui     $v0, 0x4009
 # End of function ATP_UPNP_SendEvent




.globl ATP_UPNP_DestroyAllDevices
ATP_UPNP_DestroyAllDevices:

var_10= -0x10
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x20
li      $gp, 0x42E470
sw      $ra, 0x20+var_4($sp)
sw      $gp, 0x20+var_10($sp)
lw      $v0, g_pstUpnpGvarHead
la      $t9, UpnpDestoryDevice
lw      $a0, 0($v0)
jalr    $t9 ; UpnpDestoryDevice
nop
lw      $gp, 0x20+var_10($sp)
nop
la      $t9, UpnpDestroyAllActions
nop
jalr    $t9 ; UpnpDestroyAllActions
nop
lw      $gp, 0x20+var_10($sp)
nop
la      $t9, UpnpDestroyAllStatVar
nop
jalr    $t9 ; UpnpDestroyAllStatVar
nop
lw      $gp, 0x20+var_10($sp)
lw      $ra, 0x20+var_4($sp)
la      $t9, UpnpFreeGlobalVar
nop
jr      $t9 ; UpnpFreeGlobalVar
addiu   $sp, 0x20
 # End of function ATP_UPNP_DestroyAllDevices




.globl ATP_UPNP_Init
ATP_UPNP_Init:

var_38= -0x38
var_30= -0x30
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x48
li      $gp, 0x42E470
sw      $ra, 0x48+var_4($sp)
sw      $s3, 0x48+var_8($sp)
sw      $s2, 0x48+var_C($sp)
sw      $s1, 0x48+var_10($sp)
sw      $s0, 0x48+var_14($sp)
sw      $gp, 0x48+var_30($sp)
lw      $v0, g_pstUPnPStack
move    $s1, $a0
move    $s0, $a1
bnez    $v0, loc_4092DC
lui     $s2, 0x4009
beqz    $a1, loc_409060
li      $v0, 1
sw      $zero, 0($a1)

loc_409060:
bne     $s1, $v0, loc_409080
li      $a0, 2
la      $t9, ATP_UTIL_GVarDelModule
nop
jalr    $t9 ; ATP_UTIL_GVarDelModule
li      $a1, 0xB400
lw      $gp, 0x48+var_30($sp)
nop

loc_409080:
la      $t9, ATP_UTIL_GVarInit
li      $a0, 2
li      $a1, 0xB400
li      $a2, 0x34
jalr    $t9 ; ATP_UTIL_GVarInit
move    $a3, $zero
lw      $gp, 0x48+var_30($sp)
bnez    $v0, loc_4092DC
move    $s2, $v0
la      $t9, ATP_UTIL_GVarGetMemHandle
nop
jalr    $t9 ; ATP_UTIL_GVarGetMemHandle
li      $a0, 2
lui     $v1, 0x42
lw      $gp, 0x48+var_30($sp)
beqz    $v0, loc_4092D4
sw      $v0, g_pvUpnpShmHandle
la      $t9, ATP_UTIL_GVarGetValue
li      $a0, 0x20001
jalr    $t9 ; ATP_UTIL_GVarGetValue
move    $a1, $zero
lui     $v1, 0x42
lw      $gp, 0x48+var_30($sp)
beqz    $v0, loc_4090F4
sw      $v0, g_pstUpnpGvarHead
li      $v0, 1
bne     $s1, $v0, loc_4091CC
nop

loc_4090F4:
beqz    $s0, loc_409100
li      $v0, 1
sw      $v0, 0($s0)

loc_409100:
la      $t9, ATP_UTIL_GVarSetValue
lui     $s0, 2
sw      $zero, 0x48+var_28($sp)
sw      $zero, 0x48+var_24($sp)
sw      $zero, 0x48+var_20($sp)
ori     $a0, $s0, 1
addiu   $a1, $sp, 0x48+var_28
jalr    $t9 ; ATP_UTIL_GVarSetValue
li      $a2, 0xC
lw      $gp, 0x48+var_30($sp)
bnez    $v0, loc_4092D8
lui     $v0, 0x4009
la      $t9, ATP_UTIL_GVarGetValue
ori     $a0, $s0, 1
jalr    $t9 ; ATP_UTIL_GVarGetValue
move    $a1, $zero
lui     $s0, 0x42
lw      $gp, 0x48+var_30($sp)
beqz    $v0, loc_4092D4
sw      $v0, g_pstUpnpGvarHead
la      $t9, ATP_UPNP_RegDeviceAndService
nop
jalr    $t9 ; ATP_UPNP_RegDeviceAndService
nop
lw      $gp, 0x48+var_30($sp)
bnez    $v0, loc_409184
nop
lw      $v0, g_pstUpnpGvarHead
nop
lw      $v0, 0($v0)
nop
bnez    $v0, loc_4091A8
nop

loc_409184:
la      $t9, ATP_UPNP_Free
lw      $a0, (g_pstUpnpGvarHead - 0x420000)($s0)
jalr    $t9 ; ATP_UPNP_Free
nop
lui     $v0, 0x4009
lw      $gp, 0x48+var_30($sp)
sw      $zero, (g_pstUpnpGvarHead - 0x420000)($s0)
b       loc_4092DC
ori     $s2, $v0, 3

loc_4091A8:
la      $t9, ATP_UPNP_RefreshFromDB
nop
jalr    $t9 ; ATP_UPNP_RefreshFromDB
nop
lw      $gp, 0x48+var_30($sp)
beqz    $v0, loc_4091CC
nop
b       loc_4092DC
move    $s2, $v0

loc_4091CC:
la      $t9, calloc
li      $a0, 1
jalr    $t9 ; calloc
li      $a1, 0x28
lui     $s3, 0x42
lw      $gp, 0x48+var_30($sp)
move    $s0, $v0
beqz    $v0, loc_409298
sw      $v0, g_pstUPnPStack
la      $t9, ATP_HTTP_ServerCreate
la      $a0, sub_40B5B4
jalr    $t9 ; ATP_HTTP_ServerCreate
move    $a1, $v0
lw      $s1, g_pstUPnPStack
sw      $v0, 8($s0)
lw      $gp, 0x48+var_30($sp)
lw      $v0, 8($s1)
nop
bnez    $v0, loc_40922C
lui     $a1, 0x41
la      $t9, free
b       loc_409288
move    $a0, $s1

loc_40922C:
la      $t9, ATP_HTTP_ClientCreate
lui     $a2, 0x41
move    $a0, $zero
sw      $zero, 0x48+var_38($sp)
addiu   $a1, (sub_40BD64 - 0x410000)
la      $a2, locret_408250
jalr    $t9 ; ATP_HTTP_ClientCreate
move    $a3, $s1
lw      $a0, (g_pstUPnPStack - 0x420000)($s3)
sw      $v0, 0xC($s1)
lw      $gp, 0x48+var_30($sp)
lw      $v0, 0xC($a0)
nop
bnez    $v0, loc_4092A4
lui     $v0, 0x41
la      $t9, free
lw      $a0, 8($a0)
jalr    $t9 ; free
nop
lw      $gp, 0x48+var_30($sp)
lw      $a0, (g_pstUPnPStack - 0x420000)($s3)
la      $t9, free
nop

loc_409288:
jalr    $t9 ; free
nop
lw      $gp, 0x48+var_30($sp)
sw      $zero, (g_pstUPnPStack - 0x420000)($s3)

loc_409298:
lui     $v0, 0x4009
b       loc_4092DC
ori     $s2, $v0, 2

loc_4092A4:
addiu   $v0, (aDslfConfig - 0x410000)  # "dslf-config"
la      $t9, ATP_UPNP_GetTr064SecurityInfo
sw      $v0, 0x18($a0)
la      $v0, aDslfReset  # "dslf-reset"
sw      $v0, 0x1C($a0)
addiu   $a1, $a0, 0x24
jalr    $t9 ; ATP_UPNP_GetTr064SecurityInfo
addiu   $a0, 0x20
lw      $gp, 0x48+var_30($sp)
b       loc_4092DC
nop

loc_4092D4:
lui     $v0, 0x4009

loc_4092D8:
ori     $s2, $v0, 1

loc_4092DC:
lw      $ra, 0x48+var_4($sp)
move    $v0, $s2
lw      $s3, 0x48+var_8($sp)
lw      $s2, 0x48+var_C($sp)
lw      $s1, 0x48+var_10($sp)
lw      $s0, 0x48+var_14($sp)
jr      $ra
addiu   $sp, 0x48
 # End of function ATP_UPNP_Init




sub_4092FC:

var_378= -0x378
var_374= -0x374
var_370= -0x370
var_368= -0x368
var_328= -0x328
var_2E8= -0x2E8
var_2A8= -0x2A8
var_228= -0x228
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4
arg_0=  0

lui     $gp, 0x43
addiu   $sp, -0x388
li      $gp, 0x42E470
sw      $ra, 0x388+var_4($sp)
sw      $fp, 0x388+var_8($sp)
sw      $s7, 0x388+var_C($sp)
sw      $s6, 0x388+var_10($sp)
sw      $s5, 0x388+var_14($sp)
sw      $s4, 0x388+var_18($sp)
sw      $s3, 0x388+var_1C($sp)
sw      $s2, 0x388+var_20($sp)
sw      $s1, 0x388+var_24($sp)
sw      $s0, 0x388+var_28($sp)
sw      $gp, 0x388+var_370($sp)
lui     $v0, 0x42
lw      $v1, g_pstUpnpGvarHead
li      $v0, 0xFFFFFFFF
sh      $v0, 0x42($a1)
li      $v0, 0xC8
lw      $a3, 4($a0)
sh      $v0, 0x44($a1)
la      $t9, upnpGetLocationUrl
li      $v0, 2
addiu   $s1, $sp, 0x388+var_2A8
sh      $v0, 0x40($a1)
li      $v0, 0x915F
lw      $s3, 0($v1)
move    $s5, $a1
sw      $a0, 0x388+arg_0($sp)
move    $s4, $a2
sw      $a2, 0x388+var_374($sp)
move    $a0, $zero
move    $a1, $s1
li      $a2, 0x80
jalr    $t9 ; upnpGetLocationUrl
sw      $v0, 0x388+var_378($sp)
lw      $gp, 0x388+var_370($sp)
addiu   $s2, $s5, 0x40
move    $a0, $s2
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
li      $a2, 0xA
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a3, $s1
lw      $gp, 0x388+var_370($sp)
la      $a3, aLinuxUpnp10Hua  # "Linux UPnP/1.0 Huawei-ATP-IGD"
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s2
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x10
lw      $gp, 0x388+var_370($sp)
lui     $a2, 0x41
lui     $a3, 1
la      $t9, snprintf
la      $a2, aMaxAgeD    # "max-age=%d"
li      $a3, 0x151E4
move    $a0, $s1
jalr    $t9 ; snprintf
li      $a1, 0x80
lw      $gp, 0x388+var_370($sp)
move    $a0, $s2
li      $a1, 1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a2, 0x11
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a3, $s1
lw      $gp, 0x388+var_370($sp)
move    $a0, $s2
li      $a1, 1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a2, 0x18
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a3, $zero
lw      $gp, 0x388+var_370($sp)
la      $a3, aUpnpRootdevice  # "upnp:rootdevice"
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s2
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x17
lw      $gp, 0x388+var_370($sp)
lw      $a0, 0xC($s3)
addiu   $s0, $sp, 0x388+var_368
la      $t9, UpnpGetDeviceUuid
move    $a1, $s0
li      $a2, 0x40
jalr    $t9 ; UpnpGetDeviceUuid
move    $a3, $s4
lw      $gp, 0x388+var_370($sp)
la      $a2, dword_415488
la      $t9, snprintf
move    $a3, $s0
move    $a0, $s1
jalr    $t9 ; snprintf
li      $a1, 0x80
lw      $gp, 0x388+var_370($sp)
move    $a3, $s1
li      $a2, 0x14
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s2
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a1, 1
lw      $gp, 0x388+var_370($sp)
move    $a0, $s5
li      $a1, 1
la      $t9, ATP_HTTP_ClientSendEx
nop
jalr    $t9 ; ATP_HTTP_ClientSendEx
li      $s6, 2
lw      $gp, 0x388+var_370($sp)
nop
la      $t9, usleep
nop
jalr    $t9 ; usleep
li      $a0, 0x4E20
lw      $gp, 0x388+var_370($sp)
bnez    $s4, loc_409668
li      $fp, 1
b       loc_409668
li      $s6, 4

loc_4094EC:
jalr    $t9 ; UpnpIsDeviceValid
nop
lw      $gp, 0x388+var_370($sp)
bne     $v0, $fp, loc_40964C
nop
lw      $v1, 0x388+arg_0($sp)
nop
lw      $v0, 0($v1)
nop
and     $v0, $s6, $v0
beqz    $v0, loc_40964C
move    $a1, $s0
sb      $zero, 0x388+var_328($sp)
la      $t9, UpnpGetDeviceUuid
lw      $a0, 0xC($s3)
move    $a3, $s4
jalr    $t9 ; UpnpGetDeviceUuid
li      $a2, 0x40
lw      $gp, 0x388+var_370($sp)
move    $a0, $s2
move    $a3, $s0
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x17
lw      $gp, 0x388+var_370($sp)
move    $a3, $s0
li      $a2, 0x14
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s2
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a1, 1
lw      $gp, 0x388+var_370($sp)
li      $a1, 1
la      $t9, ATP_HTTP_ClientSendEx
nop
jalr    $t9 ; ATP_HTTP_ClientSendEx
move    $a0, $s5
lw      $gp, 0x388+var_370($sp)
nop
la      $t9, usleep
nop
jalr    $t9 ; usleep
li      $a0, 0x4E20
lw      $gp, 0x388+var_370($sp)
move    $a0, $s3
move    $a1, $s1
la      $t9, UpnpGetDeviceType
move    $a3, $s4
jalr    $t9 ; UpnpGetDeviceType
li      $a2, 0x40
lw      $gp, 0x388+var_370($sp)
move    $a0, $s2
move    $a3, $s1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x17
lw      $gp, 0x388+var_370($sp)
lui     $a2, 0x41
move    $a0, $s7
la      $t9, snprintf
la      $a2, aSS         # "%s::%s"
move    $a3, $s0
li      $a1, 0x200
jalr    $t9 ; snprintf
sw      $s1, 0x388+var_378($sp)
lw      $gp, 0x388+var_370($sp)
li      $a2, 0x14
move    $a3, $s7
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s2
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a1, 1
lw      $gp, 0x388+var_370($sp)
li      $a1, 1
la      $t9, ATP_HTTP_ClientSendEx
nop
jalr    $t9 ; ATP_HTTP_ClientSendEx
move    $a0, $s5
lw      $gp, 0x388+var_370($sp)
nop
la      $t9, usleep
nop
jalr    $t9 ; usleep
li      $a0, 0x4E20
lw      $gp, 0x388+var_370($sp)
nop

loc_40964C:
la      $t9, device_iterator
nop
jalr    $t9 ; device_iterator
move    $a0, $s3
lw      $gp, 0x388+var_370($sp)
b       loc_409674
move    $s3, $v0

loc_409668:
addiu   $s0, $sp, 0x388+var_2E8
addiu   $s1, $sp, 0x388+var_328
addiu   $s7, $sp, 0x388+var_228

loc_409674:
la      $t9, UpnpIsDeviceValid
move    $a0, $s3
bnez    $s3, loc_4094EC
move    $a1, $s4
lui     $v0, 0x42
lw      $v1, g_pstUpnpGvarHead
addiu   $fp, $sp, 0x60
addiu   $s3, $sp, 0x388+var_2E8
lw      $s1, 0($v1)
b       loc_4097CC
addiu   $s7, $sp, 0x388+var_228

loc_4096A0:
lw      $s0, 0x1C($s1)
b       loc_4097A4
nop

loc_4096AC:
jalr    $t9 ; UpnpIsServiceValid
nop
li      $v1, 1
lw      $gp, 0x388+var_370($sp)
bne     $v0, $v1, loc_4097A0
nop
lw      $v1, 0x388+arg_0($sp)
nop
lw      $v0, 0($v1)
nop
and     $v0, $s6, $v0
beqz    $v0, loc_4097A0
move    $a1, $fp
la      $t9, UpnpGetDeviceUuid
lw      $a0, 0xC($s1)
li      $a2, 0x40
jalr    $t9 ; UpnpGetDeviceUuid
move    $a3, $s4
lw      $gp, 0x388+var_370($sp)
move    $a0, $s0
move    $a1, $s3
la      $t9, UpnpGetServiceType
li      $a2, 0x40
jalr    $t9 ; UpnpGetServiceType
move    $a3, $s4
lw      $gp, 0x388+var_370($sp)
move    $a0, $s2
li      $a1, 1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a2, 0x17
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a3, $s3
lw      $gp, 0x388+var_370($sp)
lui     $a2, 0x41
move    $a0, $s7
la      $t9, snprintf
li      $a1, 0x200
la      $a2, aSS         # "%s::%s"
move    $a3, $fp
jalr    $t9 ; snprintf
sw      $s3, 0x388+var_378($sp)
lw      $gp, 0x388+var_370($sp)
li      $a2, 0x14
move    $a3, $s7
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s2
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a1, 1
lw      $gp, 0x388+var_370($sp)
move    $a0, $s5
la      $t9, ATP_HTTP_ClientSendEx
nop
jalr    $t9 ; ATP_HTTP_ClientSendEx
li      $a1, 1
lw      $gp, 0x388+var_370($sp)
nop
la      $t9, usleep
nop
jalr    $t9 ; usleep
li      $a0, 0x4E20
lw      $gp, 0x388+var_370($sp)

loc_4097A0:
lw      $s0, 0x38($s0)

loc_4097A4:
la      $t9, UpnpIsServiceValid
move    $a0, $s0
bnez    $s0, loc_4096AC
move    $a1, $s4
la      $t9, device_iterator
nop
jalr    $t9 ; device_iterator
move    $a0, $s1
lw      $gp, 0x388+var_370($sp)
move    $s1, $v0

loc_4097CC:
bnez    $s1, loc_4096A0
nop
lw      $ra, 0x388+var_4($sp)
lw      $fp, 0x388+var_8($sp)
lw      $s7, 0x388+var_C($sp)
lw      $s6, 0x388+var_10($sp)
lw      $s5, 0x388+var_14($sp)
lw      $s4, 0x388+var_18($sp)
lw      $s3, 0x388+var_1C($sp)
lw      $s2, 0x388+var_20($sp)
lw      $s1, 0x388+var_24($sp)
lw      $s0, 0x388+var_28($sp)
jr      $ra
addiu   $sp, 0x388
 # End of function sub_4092FC




sub_409804:

var_138= -0x138
var_134= -0x134
var_130= -0x130
var_128= -0x128
var_E8= -0xE8
var_A8= -0xA8
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4
arg_10=  0x10
arg_14=  0x14

lui     $gp, 0x43
addiu   $sp, -0x148
li      $gp, 0x42E470
sw      $ra, 0x148+var_4($sp)
sw      $s7, 0x148+var_8($sp)
sw      $s6, 0x148+var_C($sp)
sw      $s5, 0x148+var_10($sp)
sw      $s4, 0x148+var_14($sp)
sw      $s3, 0x148+var_18($sp)
sw      $s2, 0x148+var_1C($sp)
sw      $s1, 0x148+var_20($sp)
sw      $s0, 0x148+var_24($sp)
sw      $gp, 0x148+var_130($sp)
li      $v0, 0xFFFFFFFF
lw      $v1, 4($a0)
sh      $v0, 0x42($a1)
lw      $s4, 0x148+arg_14($sp)
li      $v0, 0xC8
sh      $v0, 0x44($a1)
la      $t9, upnpGetLocationUrl
li      $v0, 2
sh      $v0, 0x40($a1)
addiu   $s1, $sp, 0x148+var_A8
li      $v0, 0x915F
move    $s6, $a1
move    $s5, $a2
move    $a0, $zero
move    $a1, $s1
li      $a2, 0x80
sw      $v0, 0x148+var_138($sp)
move    $s7, $a3
sw      $s4, 0x148+var_134($sp)
jalr    $t9 ; upnpGetLocationUrl
move    $a3, $v1
lw      $gp, 0x148+var_130($sp)
addiu   $s2, $s6, 0x40
move    $a0, $s2
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
li      $a2, 0xA
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a3, $s1
lw      $gp, 0x148+var_130($sp)
la      $a3, aLinuxUpnp10Hua  # "Linux UPnP/1.0 Huawei-ATP-IGD"
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s2
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x10
lw      $gp, 0x148+var_130($sp)
lui     $a2, 0x41
lui     $a3, 1
la      $t9, snprintf
la      $a2, aMaxAgeD    # "max-age=%d"
li      $a3, 0x151E4
move    $a0, $s1
jalr    $t9 ; snprintf
li      $a1, 0x80
lw      $gp, 0x148+var_130($sp)
move    $a0, $s2
li      $a1, 1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a2, 0x11
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a3, $s1
lw      $gp, 0x148+var_130($sp)
li      $a2, 0x18
move    $a3, $zero
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s2
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a1, 1
lw      $gp, 0x148+var_130($sp)
lw      $a0, 0x38($s6)
li      $a1, 0x17
la      $t9, ATP_HTTP_PacketGetHeaderValue
nop
jalr    $t9 ; ATP_HTTP_PacketGetHeaderValue
addiu   $s3, $sp, 0x148+var_128
lw      $gp, 0x148+var_130($sp)
move    $a0, $s2
li      $a1, 1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a2, 0x17
move    $a3, $v0
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $s0, $v0
lw      $gp, 0x148+var_130($sp)
lw      $a0, 0xC($s5)
move    $a1, $s3
la      $t9, UpnpGetDeviceUuid
li      $a2, 0x40
jalr    $t9 ; UpnpGetDeviceUuid
move    $a3, $s4
lw      $v0, 0x148+arg_10($sp)
li      $v1, 1
lw      $gp, 0x148+var_130($sp)
bne     $v0, $v1, loc_4099A4
lui     $a2, 0x41
la      $t9, snprintf
move    $a0, $s1
b       loc_4099FC
la      $a2, dword_415488

loc_4099A4:
bnez    $s7, loc_409A10
move    $a0, $s0
la      $t9, strncmp
la      $a1, aUuid       # "uuid:"
jalr    $t9 ; strncmp
li      $a2, 5
lw      $gp, 0x148+var_130($sp)
addiu   $s0, $sp, 0x148+var_E8
la      $t9, UpnpGetDeviceType
bnez    $v0, loc_409A1C
move    $a0, $s5
move    $a0, $s5
li      $a2, 0x40
move    $a1, $s0
jalr    $t9 ; UpnpGetDeviceType
move    $a3, $s4
lw      $gp, 0x148+var_130($sp)
lui     $a2, 0x41
move    $a0, $s1
la      $t9, snprintf
la      $a2, (aSS+4)     # "%s"

loc_4099FC:
move    $a3, $s3
jalr    $t9 ; snprintf
li      $a1, 0x80
b       loc_409A50
nop

loc_409A10:
la      $t9, UpnpGetServiceType
addiu   $s0, $sp, 0x148+var_E8
move    $a0, $s7

loc_409A1C:
move    $a3, $s4
move    $a1, $s0
jalr    $t9
li      $a2, 0x40
lw      $gp, 0x148+var_130($sp)
lui     $a2, 0x41
sw      $s0, 0x148+var_138($sp)
la      $t9, snprintf
move    $a0, $s1
la      $a2, aSS         # "%s::%s"
move    $a3, $s3
jalr    $t9 ; snprintf
li      $a1, 0x80

loc_409A50:
lw      $gp, 0x148+var_130($sp)
move    $a0, $s2
addiu   $a3, $sp, 0x148+var_A8
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x14
lw      $gp, 0x148+var_130($sp)
move    $a0, $s6
la      $t9, ATP_HTTP_ClientSendEx
nop
jalr    $t9 ; ATP_HTTP_ClientSendEx
li      $a1, 1
lw      $ra, 0x148+var_4($sp)
lw      $gp, 0x148+var_130($sp)
lw      $s7, 0x148+var_8($sp)
lw      $s6, 0x148+var_C($sp)
lw      $s5, 0x148+var_10($sp)
lw      $s4, 0x148+var_14($sp)
lw      $s3, 0x148+var_18($sp)
lw      $s2, 0x148+var_1C($sp)
lw      $s1, 0x148+var_20($sp)
lw      $s0, 0x148+var_24($sp)
jr      $ra
addiu   $sp, 0x148
 # End of function sub_409804




sub_409AB4:

var_20= -0x20
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x30+var_4($sp)
sw      $s3, 0x30+var_8($sp)
sw      $s2, 0x30+var_C($sp)
sw      $s1, 0x30+var_10($sp)
sw      $s0, 0x30+var_14($sp)
sw      $gp, 0x30+var_20($sp)
la      $t9, ATP_HTTP_PacketSetHeader
addiu   $s0, $a0, 0x40
li      $v0, 0x1F4
lui     $a3, 0x41
move    $s1, $a0
move    $s2, $a1
move    $s3, $a2
sh      $v0, 0x44($a0)
la      $a3, aTextXmlCharset  # "text/xml; charset=\"utf-8\""
move    $a0, $s0
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0xE
lw      $gp, 0x30+var_20($sp)
lui     $a3, 0x41
move    $a0, $s0
la      $t9, ATP_HTTP_PacketSetHeader
la      $a3, aLinuxUpnp10Hua  # "Linux UPnP/1.0 Huawei-ATP-IGD"
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x10
lw      $gp, 0x30+var_20($sp)
move    $a0, $s0
li      $a1, 1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a2, 0x18
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a3, $zero
lw      $gp, 0x30+var_20($sp)
la      $a3, aKeepAlive  # "Keep-Alive"
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
li      $a2, 5
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a0, $s0
lw      $gp, 0x30+var_20($sp)
nop
la      $t9, ATP_HTTP_ClientGetSendBuf
nop
jalr    $t9 ; ATP_HTTP_ClientGetSendBuf
move    $a0, $s1
lw      $gp, 0x30+var_20($sp)
move    $a0, $v0
la      $t9, ATP_UTIL_StrFileFlush
nop
jalr    $t9 ; ATP_UTIL_StrFileFlush
move    $s0, $v0
lw      $gp, 0x30+var_20($sp)
lui     $a1, 0x41
move    $a0, $s0
la      $t9, ATP_UTIL_StrFilePrintf
move    $a2, $s2
move    $a3, $s3
jalr    $t9 ; ATP_UTIL_StrFilePrintf
la      $a1, aSEnvelopeXmlns  # "<s:Envelope\nxmlns:s=\"http://schemas.x"...
lw      $gp, 0x30+var_20($sp)
move    $a0, $s1
lw      $ra, 0x30+var_4($sp)
la      $t9, ATP_HTTP_ClientSend
lw      $s3, 0x30+var_8($sp)
lw      $s2, 0x30+var_C($sp)
lw      $s1, 0x30+var_10($sp)
lw      $s0, 0x30+var_14($sp)
jr      $t9 ; ATP_HTTP_ClientSend
addiu   $sp, 0x30
 # End of function sub_409AB4




sub_409BE0:

var_828= -0x828
var_820= -0x820
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x838
li      $gp, 0x42E470
sw      $ra, 0x838+var_4($sp)
sw      $s5, 0x838+var_8($sp)
sw      $s4, 0x838+var_C($sp)
sw      $s3, 0x838+var_10($sp)
sw      $s2, 0x838+var_14($sp)
sw      $s1, 0x838+var_18($sp)
sw      $s0, 0x838+var_1C($sp)
sw      $gp, 0x838+var_828($sp)
la      $t9, fopen
move    $s0, $a1
lui     $a1, 0x41
move    $s5, $a0
la      $a1, aRb         # "rb"
jalr    $t9 ; fopen
move    $a0, $s0
lw      $gp, 0x838+var_828($sp)
beqz    $v0, loc_409E1C
move    $s3, $v0
la      $t9, strchr
move    $a0, $s0
jalr    $t9 ; strchr
li      $a1, 0x2E
lw      $gp, 0x838+var_828($sp)
move    $a0, $v0
addiu   $s0, $s5, 0x40
la      $t9, ATP_UTIL_GetMimeTypeFromSuffix
nop
jalr    $t9 ; ATP_UTIL_GetMimeTypeFromSuffix
addiu   $s4, $sp, 0x838+var_820
lw      $gp, 0x838+var_828($sp)
move    $a0, $s0
move    $a3, $v0
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0xE
lw      $gp, 0x838+var_828($sp)
lui     $a3, 0x41
move    $a0, $s0
la      $t9, ATP_HTTP_PacketSetHeader
la      $a3, aLinuxUpnp10Hua  # "Linux UPnP/1.0 Huawei-ATP-IGD"
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x10
lw      $gp, 0x838+var_828($sp)
la      $a3, aKeepAlive  # "Keep-Alive"
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
li      $a2, 5
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a0, $s0
lw      $gp, 0x838+var_828($sp)
nop
la      $t9, ATP_HTTP_ClientGetSendBuf
nop
jalr    $t9 ; ATP_HTTP_ClientGetSendBuf
move    $a0, $s5
lw      $gp, 0x838+var_828($sp)
move    $a0, $v0
la      $t9, ATP_UTIL_StrFileFlush
nop
jalr    $t9 ; ATP_UTIL_StrFileFlush
move    $s2, $v0
lw      $gp, 0x838+var_828($sp)
move    $a1, $zero
li      $a2, 2
la      $t9, fseek
nop
jalr    $t9 ; fseek
move    $a0, $s3
lw      $gp, 0x838+var_828($sp)
nop
la      $t9, ftell
nop
jalr    $t9 ; ftell
move    $a0, $s3
lw      $gp, 0x838+var_828($sp)
move    $a1, $zero
move    $a2, $zero
la      $t9, fseek
move    $a0, $s3
jalr    $t9 ; fseek
move    $s0, $v0
lw      $gp, 0x838+var_828($sp)
move    $a0, $s2
la      $t9, ATP_UTIL_StrFileFlush
nop
jalr    $t9 ; ATP_UTIL_StrFileFlush
move    $s1, $s0
lw      $gp, 0x838+var_828($sp)
move    $a0, $s2
la      $t9, ATP_UTIL_StrFileReSize
nop
jalr    $t9 ; ATP_UTIL_StrFileReSize
addiu   $a1, $s0, 1
b       loc_409DA4
nop

loc_409D74:
jalr    $t9 ; fread
nop
lw      $gp, 0x838+var_828($sp)
addu    $v1, $s4, $v0
subu    $s1, $v0
la      $t9, ATP_UTIL_StrFileWriteBin
move    $a0, $s2
move    $a1, $s4
bltz    $v0, loc_409E1C
move    $a2, $v0
jalr    $t9 ; ATP_UTIL_StrFileWriteBin
sb      $zero, 0($v1)

loc_409DA4:
lw      $gp, 0x838+var_828($sp)
sltiu   $v0, $s1, 0x801
move    $a0, $s4
la      $t9, fread
li      $a1, 1
li      $a2, 0x7FF
beqz    $v0, loc_409D74
move    $a3, $s3
blez    $s1, loc_409DFC
addiu   $s0, $sp, 0x838+var_820
move    $a2, $s1
jalr    $t9 ; fread
move    $a0, $s0
lw      $gp, 0x838+var_828($sp)
bltz    $v0, loc_409E1C
move    $a0, $s2
la      $t9, ATP_UTIL_StrFileWriteBin
move    $a1, $s0
jalr    $t9 ; ATP_UTIL_StrFileWriteBin
move    $a2, $v0
lw      $gp, 0x838+var_828($sp)
nop

loc_409DFC:
la      $t9, ATP_HTTP_ClientSend
li      $v0, 0xC8
sh      $v0, 0x44($s5)
jalr    $t9 ; ATP_HTTP_ClientSend
move    $a0, $s5
lw      $gp, 0x838+var_828($sp)
b       loc_409E24
move    $v0, $zero

loc_409E1C:
li      $v0, 0x40090009

loc_409E24:
lw      $ra, 0x838+var_4($sp)
lw      $s5, 0x838+var_8($sp)
lw      $s4, 0x838+var_C($sp)
lw      $s3, 0x838+var_10($sp)
lw      $s2, 0x838+var_14($sp)
lw      $s1, 0x838+var_18($sp)
lw      $s0, 0x838+var_1C($sp)
jr      $ra
addiu   $sp, 0x838
 # End of function sub_409BE0




sub_409E48:

var_30= -0x30
var_28= -0x28
var_20= -0x20
var_1C= -0x1C
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x40
li      $gp, 0x42E470
sw      $ra, 0x40+var_4($sp)
sw      $s3, 0x40+var_8($sp)
sw      $s2, 0x40+var_C($sp)
sw      $s1, 0x40+var_10($sp)
sw      $s0, 0x40+var_14($sp)
sw      $gp, 0x40+var_28($sp)
beqz    $a0, loc_409F20
move    $s1, $a1
beqz    $a1, loc_409F24
move    $v0, $zero
la      $t9, TSP_XML_GetNodeFirstChild
lw      $a0, 0x2C($a0)
sw      $zero, 0x40+var_1C($sp)
jalr    $t9 ; TSP_XML_GetNodeFirstChild
sw      $zero, 0x40+var_20($sp)
lw      $gp, 0x40+var_28($sp)
move    $s0, $v0
addiu   $s3, $sp, 0x40+var_1C
b       loc_409F08
addiu   $s2, $sp, 0x40+var_20

loc_409EA4:
jalr    $t9 ; TSP_XML_GetNodeValue
sw      $s2, 0x40+var_30($sp)
lw      $gp, 0x40+var_28($sp)
nop
la      $t9, strcmp
bnez    $v0, loc_409F20
move    $a0, $s1
lw      $v0, 0x40+var_1C($sp)
nop
beqz    $v0, loc_409EF0
move    $a1, $v0
jalr    $t9 ; strcmp
nop
lw      $gp, 0x40+var_28($sp)
bnez    $v0, loc_409EF0
nop
lw      $v0, 0x40+var_20($sp)
b       loc_409F24
nop

loc_409EF0:
la      $t9, TSP_XML_GetNodeNextSibling
nop
jalr    $t9 ; TSP_XML_GetNodeNextSibling
move    $a0, $s0
lw      $gp, 0x40+var_28($sp)
move    $s0, $v0

loc_409F08:
la      $t9, TSP_XML_GetNodeValue
move    $a0, $s0
move    $a1, $zero
move    $a2, $zero
bnez    $s0, loc_409EA4
move    $a3, $s3

loc_409F20:
move    $v0, $zero

loc_409F24:
lw      $ra, 0x40+var_4($sp)
lw      $s3, 0x40+var_8($sp)
lw      $s2, 0x40+var_C($sp)
lw      $s1, 0x40+var_10($sp)
lw      $s0, 0x40+var_14($sp)
jr      $ra
addiu   $sp, 0x40
 # End of function sub_409E48




.globl ATP_XML_GetChildNodeByName
ATP_XML_GetChildNodeByName:

var_38= -0x38
var_30= -0x30
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x48
li      $gp, 0x42E470
sw      $ra, 0x48+var_4($sp)
sw      $s6, 0x48+var_8($sp)
sw      $s5, 0x48+var_C($sp)
sw      $s4, 0x48+var_10($sp)
sw      $s3, 0x48+var_14($sp)
sw      $s2, 0x48+var_18($sp)
sw      $s1, 0x48+var_1C($sp)
sw      $s0, 0x48+var_20($sp)
sw      $gp, 0x48+var_30($sp)
move    $s3, $a1
move    $s4, $a2
move    $s2, $a3
beqz    $a1, loc_40A064
lui     $s1, 0x4009
la      $t9, TSP_XML_GetNodeFirstChild
addiu   $s6, $sp, 0x48+var_24
b       loc_40A028
addiu   $s5, $sp, 0x48+var_28

loc_409F94:
jalr    $t9 ; TSP_XML_GetNodeValue
sw      $s5, 0x48+var_38($sp)
lw      $gp, 0x48+var_30($sp)
move    $a1, $s3
la      $t9, strcmp
beqz    $v0, loc_409FC0
move    $s1, $v0
beqz    $s2, loc_40A064
nop
b       loc_40A064
sw      $zero, 0($s2)

loc_409FC0:
lw      $v0, 0x48+var_24($sp)
nop
beqz    $v0, loc_40A020
move    $a0, $v0
jalr    $t9 ; strcmp
nop
lw      $gp, 0x48+var_30($sp)
bnez    $v0, loc_40A020
nop
beqz    $s4, loc_409FF0
nop
sw      $s0, 0($s4)

loc_409FF0:
beqz    $s2, loc_40A064
nop
lw      $a0, 0x48+var_28($sp)
nop
beqz    $a0, loc_40A014
nop
jal     sub_408540
nop
lw      $gp, 0x48+var_30($sp)

loc_40A014:
lw      $v0, 0x48+var_28($sp)
b       loc_40A064
sw      $v0, 0($s2)

loc_40A020:
la      $t9, TSP_XML_GetNodeNextSibling
move    $a0, $s0

loc_40A028:
jalr    $t9
nop
lw      $gp, 0x48+var_30($sp)
move    $s0, $v0
move    $a0, $v0
la      $t9, TSP_XML_GetNodeValue
move    $a1, $zero
move    $a2, $zero
bnez    $v0, loc_409F94
move    $a3, $s6
beqz    $s2, loc_40A060
lui     $v0, 0x4009
sw      $zero, 0($s2)
lui     $v0, 0x4009

loc_40A060:
ori     $s1, $v0, 4

loc_40A064:
lw      $ra, 0x48+var_4($sp)
move    $v0, $s1
lw      $s6, 0x48+var_8($sp)
lw      $s5, 0x48+var_C($sp)
lw      $s4, 0x48+var_10($sp)
lw      $s3, 0x48+var_14($sp)
lw      $s2, 0x48+var_18($sp)
lw      $s1, 0x48+var_1C($sp)
lw      $s0, 0x48+var_20($sp)
jr      $ra
addiu   $sp, 0x48
 # End of function ATP_XML_GetChildNodeByName




.globl ATP_UPNP_RegEndActionFunc
ATP_UPNP_RegEndActionFunc:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
move    $s0, $a0
move    $s1, $a1
beqz    $a0, loc_40A120
lui     $v0, 0x4009
la      $t9, malloc
nop
jalr    $t9 ; malloc
li      $a0, 0xC
lw      $gp, 0x28+var_18($sp)
bnez    $v0, loc_40A0E4
move    $a0, $v0
lui     $v0, 0x4009
b       loc_40A120
li      $v0, 0x40090002

loc_40A0E4:
lw      $v0, g_pstUPnPStack
sw      $zero, 8($a0)
sw      $s0, 0($a0)
lw      $v1, 0x14($v0)
sw      $s1, 4($a0)
b       loc_40A110
addiu   $v0, 0x14

loc_40A104:
addiu   $v0, $v1, 8
lw      $v1, 8($v1)
nop

loc_40A110:
bnez    $v1, loc_40A104
nop
sw      $a0, 0($v0)
move    $v0, $zero

loc_40A120:
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function ATP_UPNP_RegEndActionFunc




sub_40A134:

var_270= -0x270
var_268= -0x268
var_260= -0x260
var_25C= -0x25C
var_258= -0x258
var_254= -0x254
var_250= -0x250
var_24C= -0x24C
var_234= -0x234
var_134= -0x134
var_30= -0x30
var_2C= -0x2C
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x280
li      $gp, 0x42E470
sw      $ra, 0x280+var_4($sp)
sw      $fp, 0x280+var_8($sp)
sw      $s7, 0x280+var_C($sp)
sw      $s6, 0x280+var_10($sp)
sw      $s5, 0x280+var_14($sp)
sw      $s4, 0x280+var_18($sp)
sw      $s3, 0x280+var_1C($sp)
sw      $s2, 0x280+var_20($sp)
sw      $s1, 0x280+var_24($sp)
sw      $s0, 0x280+var_28($sp)
sw      $gp, 0x280+var_268($sp)
move    $s5, $a0
beqz    $a0, loc_40A758
lui     $s1, 0x4009
la      $t9, ATP_TR064_GetDomainNameOfService
lw      $a0, 0x28($a0)
addiu   $s2, $sp, 0x280+var_234
move    $a1, $s2
li      $a2, 0x100
jalr    $t9 ; ATP_TR064_GetDomainNameOfService
move    $a3, $zero
lw      $gp, 0x280+var_268($sp)
bnez    $v0, loc_40A758
move    $s1, $v0
la      $t9, UpnpGetActListByActName
lw      $a0, 0x28($s5)
lw      $a1, 0x24($s5)
jalr    $t9 ; UpnpGetActListByActName
nop
lw      $gp, 0x280+var_268($sp)
beqz    $v0, loc_40A754
move    $s3, $v0
lw      $v1, 8($v0)
lw      $v0, 0xC($v0)
beqz    $v1, loc_40A4CC
nop
bnez    $v0, loc_40A758
li      $s1, 0x1F5
lui     $v0, 0x41
addiu   $s7, $v0, (aSS+4 - 0x410000)  # "%s"
lui     $v0, 0x41
move    $s6, $s2
move    $s1, $v1
sw      $zero, 0x280+var_260($sp)
addiu   $s4, $v0, (aNotifySHttp11H+0x8C - 0x410000)  # "%s%s"
addiu   $s2, $sp, 0x280+var_134

loc_40A1F8:
lw      $v0, 4($s1)
nop
lw      $v0, 8($v0)
nop
bnez    $v0, loc_40A364
nop
lw      $a3, 0($s1)
nop
beqz    $a3, loc_40A250
move    $a0, $s2
la      $t9, snprintf
li      $a1, 0x100
jalr    $t9 ; snprintf
move    $a2, $s7
move    $a0, $s5
jal     sub_409E48
move    $a1, $s2
lw      $gp, 0x280+var_268($sp)
bnez    $v0, loc_40A274
move    $s3, $v0
b       loc_40A264
li      $v0, 0x192

loc_40A250:
li      $v0, 0x25B
sw      $v0, 0($s5)
lui     $v0, 0x4009
b       loc_40A758
ori     $s1, $v0, 0xB

loc_40A264:
sw      $v0, 0($s5)
lui     $v0, 0x4009
b       loc_40A758
ori     $s1, $v0, 4

loc_40A274:
lw      $v0, 4($s1)
nop
beqz    $v0, loc_40A2C0
nop
lw      $v1, 4($v0)
la      $t9, snprintf
beqz    $v1, loc_40A2A0
li      $a1, 0x100
sw      $v1, 0x280+var_270($sp)
b       loc_40A2AC
move    $a0, $s2

loc_40A2A0:
lw      $v0, 0($v0)
move    $a0, $s2
sw      $v0, 0x280+var_270($sp)

loc_40A2AC:
move    $a2, $s4
jalr    $t9 ; snprintf
move    $a3, $s6
lw      $gp, 0x280+var_268($sp)
nop

loc_40A2C0:
la      $t9, malloc
nop
jalr    $t9 ; malloc
li      $a0, 0xC
lw      $gp, 0x280+var_268($sp)
beqz    $v0, loc_40A78C
move    $s0, $v0
la      $t9, strdup
sw      $zero, 0($v0)
sw      $zero, 4($v0)
sw      $zero, 8($v0)
jalr    $t9 ; strdup
move    $a0, $s2
lw      $gp, 0x280+var_268($sp)
bnez    $v0, loc_40A318
sw      $v0, 0($s0)
la      $t9, free
nop
jalr    $t9 ; free
move    $a0, $s0
b       loc_40A78C
nop

loc_40A318:
la      $t9, strdup
nop
jalr    $t9 ; strdup
move    $a0, $s3
move    $a0, $v0
jal     sub_408540
sw      $v0, 4($s0)
lw      $v0, 0x280+var_260($sp)
lw      $gp, 0x280+var_268($sp)
bnez    $v0, loc_40A350
addiu   $v1, $v0, 8
b       loc_40A364
sw      $s0, 0x280+var_260($sp)

loc_40A34C:
addiu   $v1, $v0, 8

loc_40A350:
lw      $v0, 8($v0)
nop
bnez    $v0, loc_40A34C
nop
sw      $s0, 0($v1)

loc_40A364:
lw      $s1, 8($s1)
nop
bnez    $s1, loc_40A1F8
lui     $v0, 1
ori     $s6, $v0, 1
sw      $zero, 0x280+var_258($sp)
lw      $s1, 0x280+var_260($sp)
lui     $v0, 0x4009
addiu   $s0, $sp, 0x280+var_24C
addiu   $s5, $sp, 0x280+var_250
addiu   $s4, $sp, 0x280+var_25C
lui     $s3, 0x380
b       loc_40A448
addiu   $s2, $sp, 0x280+var_258

loc_40A39C:
sw      $zero, 0($s0)
sw      $zero, 4($s0)
sw      $zero, 8($s0)
sw      $zero, 0xC($s0)
sw      $zero, 0x10($s0)
sw      $zero, 0x14($s0)
lw      $a0, 0($s1)
jalr    $t9 ; ATP_DBDomainToKeyList
nop
lw      $gp, 0x280+var_268($sp)
nop
la      $t9, ATP_CFM_UtilConvertValueType
bnez    $v0, loc_40A460
move    $a1, $s4
lw      $a2, 0x280+var_250($sp)
lw      $a0, 4($s1)
jalr    $t9 ; ATP_CFM_UtilConvertValueType
and     $a2, $s3
lw      $gp, 0x280+var_268($sp)
beqz    $v0, loc_40A460
lui     $v0, 0x4009
lw      $v0, 0x280+var_258($sp)
nop
bnez    $v0, loc_40A420
move    $a0, $s2
la      $t9, ATP_CFM_CfgMsgHeadBuilder
lw      $a3, 0x280+var_250($sp)
move    $a1, $s6
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a2, $s0
lw      $gp, 0x280+var_268($sp)
bnez    $v0, loc_40A460
nop

loc_40A420:
la      $t9, ATP_CFM_CfgMsgAppendPara
lw      $a2, 0x280+var_250($sp)
lw      $a3, 0x280+var_25C($sp)
move    $a0, $s2
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $a1, $s0
lw      $gp, 0x280+var_268($sp)
bnez    $v0, loc_40A460
nop
lw      $s1, 8($s1)

loc_40A448:
la      $t9, ATP_DBDomainToKeyList
move    $a1, $s0
bnez    $s1, loc_40A39C
move    $a2, $s5
beqz    $v0, loc_40A478
move    $s1, $v0

loc_40A460:
la      $t9, ATP_CFM_MsgFree
lw      $a0, 0x280+var_258($sp)
jalr    $t9 ; ATP_CFM_MsgFree
move    $s1, $v0
b       loc_40A4B8
nop

loc_40A478:
la      $t9, ATP_CFMA_SetPara
lw      $a0, 0x280+var_258($sp)
jalr    $t9 ; ATP_CFMA_SetPara
li      $a1, 0x2710
lw      $gp, 0x280+var_268($sp)
lw      $a0, 0x280+var_258($sp)
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
move    $s0, $v0
beqz    $s0, loc_40A4B4
lui     $v0, 0x4001
li      $v0, 0x40010403
beq     $s0, $v0, loc_40A4B8
nop

loc_40A4B4:
move    $s1, $s0

loc_40A4B8:
lw      $a0, 0x280+var_260($sp)
jal     sub_408774
nop
b       loc_40A748
nop

loc_40A4CC:
beqz    $v0, loc_40A754
addiu   $s4, $sp, 0x280+var_24C
la      $t9, memcpy
lui     $a1, 0x41
sw      $zero, 0x280+var_25C($sp)
la      $a1, dword_415830
move    $a0, $s4
jalr    $t9 ; memcpy
li      $a2, 0x18
lw      $v0, 0xC($s3)
lw      $gp, 0x280+var_268($sp)
beqz    $v0, loc_40A758
lui     $s1, 0x4009
la      $t9, ATP_CFM_CfgMsgHeadBuilder
addiu   $s0, $sp, 0x280+var_258
li      $a1, 0x10002
move    $a0, $s0
move    $a2, $zero
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a3, $zero
lw      $gp, 0x280+var_268($sp)
bnez    $v0, loc_40A758
move    $s1, $v0
lui     $v0, 0x41
addiu   $s6, $v0, (aNotifySHttp11H+0x8C - 0x410000)  # "%s%s"
addiu   $v0, $sp, 0x280+var_250
move    $fp, $s2
move    $s7, $s4
sw      $s0, 0x280+var_2C($sp)
lw      $s2, 0xC($s3)
addiu   $s4, $sp, 0x280+var_134
b       loc_40A60C
sw      $v0, 0x280+var_30($sp)

loc_40A554:
lw      $v1, 4($s2)
nop
lw      $v0, 8($v1)
nop
bnez    $v0, loc_40A604
move    $a0, $s4
lw      $v0, 4($v1)
li      $a1, 0x100
move    $a2, $s6
la      $t9, snprintf
beqz    $v0, loc_40A58C
move    $a3, $fp
b       loc_40A5A0
sw      $v0, 0x280+var_270($sp)

loc_40A58C:
lw      $v0, 0($v1)
move    $a0, $s4
sw      $v0, 0x280+var_270($sp)
li      $a1, 0x100
move    $a2, $s6

loc_40A5A0:
jalr    $t9 ; snprintf
nop
lw      $gp, 0x280+var_268($sp)
lw      $a2, 0x280+var_30($sp)
move    $a0, $s4
la      $t9, ATP_DBDomainToKeyList
nop
jalr    $t9 ; ATP_DBDomainToKeyList
move    $a1, $s7
lw      $gp, 0x280+var_268($sp)
lw      $a2, 0x280+var_250($sp)
lw      $a0, 0x280+var_2C($sp)
la      $t9, ATP_CFM_CfgMsgAppendPara
move    $a1, $s7
move    $a3, $zero
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $s0, $v0
addu    $s1, $v0, $s0
lw      $gp, 0x280+var_268($sp)
beqz    $s1, loc_40A604
nop
la      $t9, ATP_CFM_MsgFree
lw      $a0, 0x280+var_258($sp)
b       loc_40A740
nop

loc_40A604:
lw      $s2, 8($s2)
nop

loc_40A60C:
bnez    $s2, loc_40A554
addiu   $a1, $sp, 0x280+var_254
la      $t9, ATP_CFMA_GetPara
lw      $a0, 0x280+var_258($sp)
jalr    $t9 ; ATP_CFMA_GetPara
li      $a2, 0x2710
lw      $gp, 0x280+var_268($sp)
lw      $a0, 0x280+var_258($sp)
move    $s0, $v0
la      $t9, ATP_CFM_MsgFree
nop
jalr    $t9 ; ATP_CFM_MsgFree
move    $s1, $v0
lw      $gp, 0x280+var_268($sp)
bnez    $s0, loc_40A758
move    $s2, $zero
lw      $s0, 0xC($s3)
addiu   $fp, $sp, 0x30
addiu   $s7, $sp, 0x280+var_25C
lui     $s6, 0x380
lui     $s4, 0x80
b       loc_40A730
addiu   $s3, $sp, 0x280+var_134

loc_40A668:
lw      $v0, 4($s0)
nop
lw      $v0, 8($v0)
nop
beqz    $v0, loc_40A690
move    $a2, $v0
lw      $a1, 0($s0)
lw      $a0, 0x30($s5)
b       loc_40A704
addiu   $s2, -1

loc_40A690:
la      $t9, ATP_CFM_GetParaOfMsgBySeqNum
lw      $a0, 0x280+var_254($sp)
move    $a2, $s2
move    $a1, $zero
sw      $s7, 0x280+var_270($sp)
jalr    $t9 ; ATP_CFM_GetParaOfMsgBySeqNum
move    $a3, $fp
lw      $gp, 0x280+var_268($sp)
lui     $a2, 0x41
move    $a0, $s3
la      $t9, snprintf
li      $a1, 0x100
la      $a2, (aMaxAgeD+8)  # "%d"
bnez    $v0, loc_40A718
move    $s1, $v0
lw      $v0, 0x280+var_250($sp)
lw      $v1, 0x280+var_25C($sp)
and     $v0, $s6
beq     $v0, $s4, loc_40A6F8
move    $a3, $v1
jalr    $t9 ; snprintf
nop
lw      $a0, 0x30($s5)
lw      $a1, 0($s0)
b       loc_40A704
move    $a2, $s3

loc_40A6F8:
lw      $a1, 0($s0)
lw      $a0, 0x30($s5)
move    $a2, $v1

loc_40A704:
jal     sub_4084D4
nop
lw      $gp, 0x280+var_268($sp)
beqz    $v0, loc_40A728
move    $s1, $v0

loc_40A718:
la      $t9, ATP_CFM_MsgFree
lw      $a0, 0x280+var_254($sp)
b       loc_40A740
nop

loc_40A728:
lw      $s0, 8($s0)
addiu   $s2, 1

loc_40A730:
bnez    $s0, loc_40A668
move    $s1, $zero
la      $t9, ATP_CFM_MsgFree
lw      $a0, 0x280+var_254($sp)

loc_40A740:
jalr    $t9 ; ATP_CFM_MsgFree
nop

loc_40A748:
lw      $gp, 0x280+var_268($sp)
b       loc_40A758
nop

loc_40A754:
li      $s1, 0x1F5

loc_40A758:
lw      $ra, 0x280+var_4($sp)
move    $v0, $s1
lw      $fp, 0x280+var_8($sp)
lw      $s7, 0x280+var_C($sp)
lw      $s6, 0x280+var_10($sp)
lw      $s5, 0x280+var_14($sp)
lw      $s4, 0x280+var_18($sp)
lw      $s3, 0x280+var_1C($sp)
lw      $s2, 0x280+var_20($sp)
lw      $s1, 0x280+var_24($sp)
lw      $s0, 0x280+var_28($sp)
jr      $ra
addiu   $sp, 0x280

loc_40A78C:
lw      $a0, 0x280+var_260($sp)
li      $v0, 0x192
jal     sub_408774
sw      $v0, 0($s5)
lui     $v0, 0x4009
lw      $gp, 0x280+var_268($sp)
b       loc_40A758
ori     $s1, $v0, 2
 # End of function sub_40A134




sub_40A7AC:

var_20= -0x20
var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x30+var_4($sp)
sw      $s1, 0x30+var_8($sp)
sw      $s0, 0x30+var_C($sp)
sw      $gp, 0x30+var_20($sp)
la      $t9, time
move    $s1, $a0
move    $a0, $zero
jalr    $t9 ; time
move    $s0, $a1
lw      $gp, 0x30+var_20($sp)
addiu   $a0, $sp, 0x30+var_18
la      $t9, localtime
nop
jalr    $t9 ; localtime
sw      $v0, 0x30+var_18($sp)
lw      $gp, 0x30+var_20($sp)
lui     $a2, 0x41
move    $a0, $s1
la      $t9, strftime
move    $a1, $s0
la      $a2, aADBYHMSGmt  # "%a, %d %b %Y %H:%M:%S GMT"
jalr    $t9 ; strftime
move    $a3, $v0
lw      $ra, 0x30+var_4($sp)
lw      $gp, 0x30+var_20($sp)
lw      $s1, 0x30+var_8($sp)
lw      $s0, 0x30+var_C($sp)
jr      $ra
addiu   $sp, 0x30
 # End of function sub_40A7AC




sub_40A82C:

var_48= -0x48
var_40= -0x40
var_3C= -0x3C
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x58
li      $gp, 0x42E470
sw      $ra, 0x58+var_4($sp)
sw      $s3, 0x58+var_8($sp)
sw      $s2, 0x58+var_C($sp)
sw      $s1, 0x58+var_10($sp)
sw      $s0, 0x58+var_14($sp)
sw      $gp, 0x58+var_48($sp)
la      $t9, ATP_HTTP_PacketSetHeader
addiu   $s2, $a0, 0x40
lui     $a3, 0x41
move    $s0, $a1
la      $a3, aKeepAlive  # "Keep-Alive"
li      $a1, 1
li      $a2, 5
move    $s3, $a0
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a0, $s2
lw      $gp, 0x58+var_48($sp)
move    $a0, $s0
la      $t9, TSP_XML_Transform
nop
jalr    $t9 ; TSP_XML_Transform
addiu   $a1, $sp, 0x58+var_40
lw      $gp, 0x58+var_48($sp)
bnez    $v0, loc_40A9AC
nop
la      $t9, ATP_HTTP_ClientGetSendBuf
move    $a0, $s3
jalr    $t9 ; ATP_HTTP_ClientGetSendBuf
addiu   $s1, $sp, 0x58+var_3C
lw      $gp, 0x58+var_48($sp)
move    $a0, $v0
la      $t9, ATP_UTIL_StrFileFlush
nop
jalr    $t9 ; ATP_UTIL_StrFileFlush
move    $s0, $v0
move    $a0, $s1
li      $a1, 0x20
jal     sub_40A7AC
sb      $zero, 0x58+var_3C($sp)
lw      $gp, 0x58+var_48($sp)
lw      $a2, 0x58+var_40($sp)
lui     $a1, 0x41
la      $t9, ATP_UTIL_StrFilePrintf
la      $a1, aXmlVersion10S  # "<?xml version=\"1.0\"?>\n%s"
jalr    $t9 ; ATP_UTIL_StrFilePrintf
move    $a0, $s0
lw      $gp, 0x58+var_48($sp)
lw      $a0, 0x58+var_40($sp)
la      $t9, TSP_XML_FreeMem
nop
jalr    $t9 ; TSP_XML_FreeMem
nop
lw      $gp, 0x58+var_48($sp)
li      $v0, 0xC8
sh      $v0, 0x44($s3)
la      $t9, ATP_HTTP_PacketSetHeader
li      $v0, 2
la      $a3, aTextXmlCharset  # "text/xml; charset=\"utf-8\""
move    $a0, $s2
li      $a1, 1
li      $a2, 0xE
jalr    $t9 ; ATP_HTTP_PacketSetHeader
sh      $v0, 0x40($s3)
lw      $gp, 0x58+var_48($sp)
la      $a3, aLinuxUpnp10Hua  # "Linux UPnP/1.0 Huawei-ATP-IGD"
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s2
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x10
lw      $gp, 0x58+var_48($sp)
move    $a3, $s1
move    $a0, $s2
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 9
lw      $gp, 0x58+var_48($sp)
move    $a0, $s2
li      $a1, 1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a2, 0x18
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a3, $zero
lw      $gp, 0x58+var_48($sp)
nop
la      $t9, ATP_HTTP_ClientSend
nop
jalr    $t9 ; ATP_HTTP_ClientSend
move    $a0, $s3
lw      $gp, 0x58+var_48($sp)

loc_40A9AC:
lw      $ra, 0x58+var_4($sp)
lw      $s3, 0x58+var_8($sp)
lw      $s2, 0x58+var_C($sp)
lw      $s1, 0x58+var_10($sp)
lw      $s0, 0x58+var_14($sp)
jr      $ra
addiu   $sp, 0x58
 # End of function sub_40A82C




sub_40A9C8:

var_3A8= -0x3A8
var_3A4= -0x3A4
var_3A0= -0x3A0
var_398= -0x398
var_394= -0x394
var_390= -0x390
var_38C= -0x38C
var_388= -0x388
var_384= -0x384
var_380= -0x380
var_37C= -0x37C
var_378= -0x378
var_374= -0x374
var_370= -0x370
var_36C= -0x36C
var_368= -0x368
var_364= -0x364
var_344= -0x344
var_340= -0x340
var_33C= -0x33C
var_338= -0x338
var_334= -0x334
var_330= -0x330
var_32C= -0x32C
var_22C= -0x22C
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x3B8
li      $gp, 0x42E470
sw      $ra, 0x3B8+var_4($sp)
sw      $fp, 0x3B8+var_8($sp)
sw      $s7, 0x3B8+var_C($sp)
sw      $s6, 0x3B8+var_10($sp)
sw      $s5, 0x3B8+var_14($sp)
sw      $s4, 0x3B8+var_18($sp)
sw      $s3, 0x3B8+var_1C($sp)
sw      $s2, 0x3B8+var_20($sp)
sw      $s1, 0x3B8+var_24($sp)
sw      $s0, 0x3B8+var_28($sp)
sw      $gp, 0x3B8+var_3A0($sp)
lw      $s0, 0x38($a1)
move    $s4, $a1
beqz    $s0, loc_40B1B0
move    $s1, $a0
la      $t9, ATP_HTTP_ClientRecvAllBody
move    $a0, $a1
sw      $zero, 0x3B8+var_394($sp)
sw      $zero, 0x3B8+var_398($sp)
move    $a1, $s0
addiu   $a2, $sp, 0x3B8+var_394
jalr    $t9 ; ATP_HTTP_ClientRecvAllBody
move    $a3, $zero
lw      $gp, 0x3B8+var_3A0($sp)
bnez    $v0, loc_40B1B4
lui     $v0, 0x4009
lw      $s0, 8($s0)
la      $t9, strncmp
la      $a1, aCtrlu      # "/ctrlu/"
move    $a0, $s0
jalr    $t9 ; strncmp
li      $a2, 7
lw      $gp, 0x3B8+var_3A0($sp)
bnez    $v0, loc_40AA80
nop
lw      $v0, 0($s1)
nop
andi    $v0, 2
bnez    $v0, loc_40AA80
lui     $v0, 0x4009
b       loc_40B1B8
ori     $s2, $v0, 0xC

loc_40AA80:
la      $t9, UpnpGetServiceByUrl
move    $a0, $s0
jalr    $t9 ; UpnpGetServiceByUrl
addiu   $a1, $sp, 0x3B8+var_398
lw      $gp, 0x3B8+var_3A0($sp)
bnez    $v0, loc_40AAD0
move    $s0, $v0
la      $t9, free
lw      $a0, 0x3B8+var_394($sp)
jalr    $t9 ; free
nop
lui     $a2, 0x41
move    $a0, $s4
la      $a2, (aCreateUpnpHttp+0x24)  # ""
jal     sub_409AB4
li      $a1, 0x192
lui     $v0, 0x4009
lw      $gp, 0x3B8+var_3A0($sp)
b       loc_40B1B8
ori     $s2, $v0, 6

loc_40AAD0:
la      $t9, memset
addiu   $a0, $sp, 0x3B8+var_368
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x3C
lw      $gp, 0x3B8+var_3A0($sp)
lw      $a0, 0x3B8+var_394($sp)
addiu   $v0, $sp, 0x3B8+var_22C
la      $t9, TSP_XML_Parse
sw      $v0, 0x3B8+var_344($sp)
sw      $s0, 0x3B8+var_340($sp)
sb      $zero, 0x3B8+var_22C($sp)
jalr    $t9 ; TSP_XML_Parse
addiu   $a1, $sp, 0x3B8+var_390
lw      $gp, 0x3B8+var_3A0($sp)
beqz    $v0, loc_40AB20
lui     $v0, 0x4009
ori     $s2, $v0, 0xA
b       loc_40ACE0
move    $s5, $zero

loc_40AB20:
lw      $a0, 0x3B8+var_390($sp)
la      $a1, aHeader     # "Header"
addiu   $a2, $sp, 0x3B8+var_384
move    $a3, $zero
jal     ATP_XML_GetChildNodeByName
sw      $zero, 0x3B8+var_330($sp)
bnez    $v0, loc_40AB58
lui     $a1, 0x41
lw      $a0, 0x3B8+var_384($sp)
la      $a1, aSessionid  # "SessionID"
move    $a2, $zero
jal     ATP_XML_GetChildNodeByName
addiu   $a3, $sp, 0x3B8+var_330

loc_40AB58:
lw      $a0, 0x3B8+var_390($sp)
la      $a1, aBody       # "Body"
addiu   $a2, $sp, 0x3B8+var_38C
jal     ATP_XML_GetChildNodeByName
move    $a3, $zero
lw      $gp, 0x3B8+var_3A0($sp)
bnez    $v0, loc_40ABD4
nop
la      $t9, TSP_XML_GetNodeFirstChild
lw      $a0, 0x3B8+var_38C($sp)
jalr    $t9 ; TSP_XML_GetNodeFirstChild
nop
lw      $gp, 0x3B8+var_3A0($sp)
beqz    $v0, loc_40ABD4
move    $s0, $v0
la      $t9, TSP_XML_GetNodeValue
sw      $zero, 0x3B8+var_380($sp)
sw      $zero, 0x3B8+var_3A8($sp)
move    $a0, $v0
move    $a1, $zero
addiu   $a2, $sp, 0x3B8+var_380
jalr    $t9 ; TSP_XML_GetNodeValue
addiu   $a3, $sp, 0x3B8+var_37C
lw      $gp, 0x3B8+var_3A0($sp)
bnez    $v0, loc_40ABD4
nop
lw      $v0, 0x3B8+var_37C($sp)
nop
bnez    $v0, loc_40ABF4
move    $a0, $s0

loc_40ABD4:
la      $t9, TSP_XML_FreeNode
lw      $a0, 0x3B8+var_390($sp)
jalr    $t9 ; TSP_XML_FreeNode
move    $s5, $zero
lui     $v0, 0x4009
lw      $gp, 0x3B8+var_3A0($sp)
b       loc_40ACE0
ori     $s2, $v0, 0xA

loc_40ABF4:
la      $t9, TSP_XML_CloneNodeSelf
sw      $zero, 0x3B8+var_388($sp)
jalr    $t9 ; TSP_XML_CloneNodeSelf
addiu   $a1, $sp, 0x3B8+var_388
lw      $gp, 0x3B8+var_3A0($sp)
beqz    $v0, loc_40AC20
move    $s2, $v0
la      $t9, TSP_XML_FreeNode
lw      $a0, 0x3B8+var_390($sp)
b       loc_40AC8C
move    $s5, $zero

loc_40AC20:
la      $t9, snprintf
lw      $a0, 0x3B8+var_344($sp)
lw      $a3, 0x3B8+var_37C($sp)
la      $a2, aSresponse  # "%sResponse"
jalr    $t9 ; snprintf
li      $a1, 0x200
lw      $gp, 0x3B8+var_3A0($sp)
lw      $a0, 0x3B8+var_388($sp)
lw      $a1, 0x3B8+var_380($sp)
la      $t9, TSP_XML_SetNode
lw      $a2, 0x3B8+var_344($sp)
jalr    $t9 ; TSP_XML_SetNode
move    $a3, $zero
move    $s2, $v0
lw      $v0, 0x3B8+var_37C($sp)
lw      $gp, 0x3B8+var_3A0($sp)
beqz    $s2, loc_40ACA0
sw      $v0, 0x3B8+var_344($sp)
la      $t9, TSP_XML_FreeNode
lw      $a0, 0x3B8+var_388($sp)
jalr    $t9 ; TSP_XML_FreeNode
move    $s5, $zero
lw      $gp, 0x3B8+var_3A0($sp)
lw      $a0, 0x3B8+var_390($sp)
la      $t9, TSP_XML_FreeNode
nop

loc_40AC8C:
jalr    $t9 ; TSP_XML_FreeNode
nop
lw      $gp, 0x3B8+var_3A0($sp)
b       loc_40ACE0
nop

loc_40ACA0:
la      $t9, TSP_XML_RemoveNode
nop
jalr    $t9 ; TSP_XML_RemoveNode
move    $a0, $s0
lw      $gp, 0x3B8+var_3A0($sp)
lw      $a0, 0x3B8+var_38C($sp)
lw      $a1, 0x3B8+var_388($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
nop
lw      $v0, 0x3B8+var_388($sp)
lw      $gp, 0x3B8+var_3A0($sp)
lw      $s5, 0x3B8+var_390($sp)
sw      $s0, 0x3B8+var_33C($sp)
sw      $v0, 0x3B8+var_338($sp)

loc_40ACE0:
la      $t9, free
lw      $a0, 0x3B8+var_394($sp)
jalr    $t9 ; free
nop
lw      $gp, 0x3B8+var_3A0($sp)
beqz    $s2, loc_40AD1C
lui     $a2, 0x41
move    $a0, $s4
la      $a2, (aCreateUpnpHttp+0x24)  # ""
jal     sub_409AB4
li      $a1, 0x191
lui     $v0, 0x4009
lw      $gp, 0x3B8+var_3A0($sp)
b       loc_40B1B8
ori     $s2, $v0, 0xA

loc_40AD1C:
lw      $a0, 0x3B8+var_340($sp)
la      $t9, UPnPGetActionByName
lw      $a1, 0x3B8+var_344($sp)
lw      $a2, 4($a0)
li      $v0, 0x1F5
sw      $v0, 0x3B8+var_368($sp)
sw      $zero, 0x3B8+var_374($sp)
lw      $s0, 0x3B8+var_398($sp)
jalr    $t9 ; UPnPGetActionByName
addiu   $a3, $sp, 0x3B8+var_378
lw      $a0, 0x3B8+var_378($sp)
li      $v1, 0xC8
move    $s1, $v0
li      $v0, 1
lw      $gp, 0x3B8+var_3A0($sp)
sh      $v1, 0x44($s4)
bne     $s0, $v0, loc_40AD98
sw      $a0, 0x3B8+var_334($sp)
beqz    $s1, loc_40AD80
addiu   $a0, $sp, 0x3B8+var_368
move    $t9, $s1
jalr    $t9
nop
b       loc_40AD88
nop

loc_40AD80:
jal     sub_40A134
nop

loc_40AD88:
bnez    $v0, loc_40AF78
move    $a0, $s4
b       loc_40AF98
nop

loc_40AD98:
andi    $v0, $a0, 2
beqz    $v0, loc_40ADD4
andi    $v0, $a0, 1
lw      $v0, 0x10($s4)
nop
bnez    $v0, loc_40ADD4
andi    $v0, $a0, 1
li      $v0, 0x25E
move    $a0, $s4
li      $a1, 0x25E
addiu   $a2, $sp, 0x3B8+var_364
jal     sub_409AB4
sw      $v0, 0x3B8+var_368($sp)
b       loc_40AFA0
nop

loc_40ADD4:
beqz    $v0, loc_40AEE8
lui     $a1, 0x42
lhu     $v0, 0x64($s4)
li      $v1, 2
sltiu   $v0, 3
bnez    $v0, loc_40AE08
sh      $v1, 0x66($s4)
li      $v0, 0x25E
move    $a0, $s4
li      $a1, 0x25E
addiu   $a2, $sp, 0x3B8+var_364
b       loc_40AE94
sw      $v0, 0x3B8+var_368($sp)

loc_40AE08:
la      $t9, strcmp
lw      $a0, 0x3B8+var_344($sp)
lui     $a1, 0x41
jalr    $t9 ; strcmp
la      $a1, aSetconfigpassw  # "SetConfigPassword"
lw      $gp, 0x3B8+var_3A0($sp)
bnez    $v0, loc_40AE48
lui     $v1, 0x42
lw      $v0, g_pstUPnPStack
nop
lw      $v1, 0x1C($v0)
nop
sw      $v1, 0x3B8+var_370($sp)
lw      $v0, 0x24($v0)
b       loc_40AE60
nop

loc_40AE48:
lw      $v0, (g_pstUPnPStack - 0x420000)($v1)
nop
lw      $v1, 0x18($v0)
nop
sw      $v1, 0x3B8+var_370($sp)
lw      $v0, 0x20($v0)

loc_40AE60:
la      $t9, ATP_HTTP_ClientCheckAuthorization
lw      $a1, 0x38($s4)
sw      $v0, 0x3B8+var_36C($sp)
move    $a0, $s4
addiu   $a2, $sp, 0x3B8+var_370
jalr    $t9 ; ATP_HTTP_ClientCheckAuthorization
addiu   $a3, $sp, 0x3B8+var_374
lw      $gp, 0x3B8+var_3A0($sp)
beqz    $v0, loc_40AEAC
li      $v1, 1
lw      $a1, 0x3B8+var_368($sp)
move    $a0, $s4
addiu   $a2, $sp, 0x3B8+var_364

loc_40AE94:
jal     sub_409AB4
nop
lui     $v0, 0x4009
lw      $gp, 0x3B8+var_3A0($sp)
b       loc_40AFA8
ori     $s2, $v0, 6

loc_40AEAC:
lw      $v0, 0x3B8+var_374($sp)
nop
bne     $v0, $v1, loc_40AEE8
lui     $a1, 0x42
li      $v0, 0xFFFFFFFF
sh      $v0, 0x42($s4)
la      $t9, ATP_HTTP_ClientSend
li      $v0, 0x191
sh      $v0, 0x44($s4)
li      $v0, 2
sh      $v0, 0x40($s4)
jalr    $t9 ; ATP_HTTP_ClientSend
move    $a0, $s4
b       loc_40AFA0
nop

loc_40AEE8:
lw      $v1, (dword_426870 - 0x420000)($a1)
li      $v0, 1
bne     $v1, $v0, loc_40AF30
nop
lw      $a0, 0x3B8+var_330($sp)
nop
beqz    $a0, loc_40AF78
addiu   $v0, $a1, (dword_426870 - 0x420000)
lw      $a1, (dword_426874 - 0x426870)($v0)
nop
beqz    $a1, loc_40AF78
nop
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
nop
bnez    $v0, loc_40AF78
nop

loc_40AF30:
beqz    $s1, loc_40AF4C
addiu   $a0, $sp, 0x3B8+var_368
move    $t9, $s1
jalr    $t9
nop
b       loc_40AF54
nop

loc_40AF4C:
jal     sub_40A134
nop

loc_40AF54:
lw      $gp, 0x3B8+var_3A0($sp)
move    $s0, $v0
lui     $v0, 0x42
la      $t9, ATP_UTIL_TimerChgPeriod
lw      $a0, dword_426878
jalr    $t9 ; ATP_UTIL_TimerChgPeriod
li      $a1, 0x9C40
beqz    $s0, loc_40AF98
move    $a0, $s4

loc_40AF78:
lw      $a1, 0x3B8+var_368($sp)
move    $a0, $s4
jal     sub_409AB4
addiu   $a2, $sp, 0x3B8+var_364
lui     $v0, 0x4009
lw      $gp, 0x3B8+var_3A0($sp)
b       loc_40AFA8
ori     $s2, $v0, 0xB

loc_40AF98:
jal     sub_40A82C
move    $a1, $s5

loc_40AFA0:
lw      $gp, 0x3B8+var_3A0($sp)
nop

loc_40AFA8:
la      $t9, memset
addiu   $s3, $sp, 0x3B8+var_32C
move    $a1, $zero
move    $a0, $s3
jalr    $t9 ; memset
li      $a2, 0x100
lw      $a1, 0x3B8+var_344($sp)
lw      $gp, 0x3B8+var_3A0($sp)
beqz    $a1, loc_40B17C
nop
lw      $a0, 0x3B8+var_340($sp)
nop
beqz    $a0, loc_40B17C
nop
la      $t9, UpnpGetActListByActName
nop
jalr    $t9 ; UpnpGetActListByActName
nop
lw      $gp, 0x3B8+var_3A0($sp)
lw      $a3, 0x3B8+var_344($sp)
bnez    $v0, loc_40B00C
move    $s1, $v0
la      $t9, ATP_LOG_Printf
b       loc_40B0A0
sw      $a3, 0x3B8+var_3A8($sp)

loc_40B00C:
la      $t9, snprintf
la      $a2, aUpnpSetActionS  # "upnp set action(%s)"
move    $a0, $s3
jalr    $t9 ; snprintf
li      $a1, 0x100
lw      $s0, 8($s1)
lw      $gp, 0x3B8+var_3A0($sp)
beqz    $s0, loc_40B17C
nop
lw      $v0, 0xC($s1)
nop
bnez    $v0, loc_40B17C
lui     $v0, 0x41
addiu   $fp, $v0, (aParamSValueS - 0x410000)  # "[param %s, value:%s]"
addiu   $s7, $sp, 0x3B8+var_368
li      $s6, 0x100

loc_40B050:
lw      $v0, 4($s0)
nop
lw      $v0, 8($v0)
nop
bnez    $v0, loc_40B0D8
move    $a0, $s7
lw      $v0, 0($s0)
nop
beqz    $v0, loc_40B094
move    $a1, $v0
jal     sub_409E48
nop
lw      $gp, 0x3B8+var_3A0($sp)
move    $a0, $s3
la      $t9, strlen
bnez    $v0, loc_40B0AC
move    $s1, $v0

loc_40B094:
lw      $v0, 0x3B8+var_344($sp)
la      $t9, ATP_LOG_Printf
sw      $v0, 0x3B8+var_3A8($sp)

loc_40B0A0:
lui     $a3, 0x41
b       loc_40B164
la      $a3, aTr064SetAction  # "tr064 set action(%s) failed !"

loc_40B0AC:
jalr    $t9 ; strlen
nop
lw      $gp, 0x3B8+var_3A0($sp)
lw      $a3, 0($s0)
subu    $a1, $s6, $v0
la      $t9, snprintf
sw      $s1, 0x3B8+var_3A8($sp)
addu    $a0, $s3, $v0
jalr    $t9 ; snprintf
move    $a2, $fp
lw      $gp, 0x3B8+var_3A0($sp)

loc_40B0D8:
lw      $s0, 8($s0)
nop
bnez    $s0, loc_40B050
li      $v0, 0xC8
lh      $v1, 0x44($s4)
nop
bne     $v1, $v0, loc_40B14C
lui     $a3, 0x41
la      $t9, strlen
addiu   $s0, $sp, 0x3B8+var_32C
jalr    $t9 ; strlen
move    $a0, $s0
lw      $gp, 0x3B8+var_3A0($sp)
li      $a1, 0x100
lui     $a2, 0x41
la      $t9, snprintf
addu    $a0, $s0, $v0
subu    $a1, $v0
jalr    $t9 ; snprintf
la      $a2, aSuccess    # " success !"
lw      $gp, 0x3B8+var_3A0($sp)
move    $a3, $s0
li      $a0, 2
la      $t9, ATP_LOG_Printf
li      $a1, 0x20
jalr    $t9 ; ATP_LOG_Printf
li      $a2, 1
b       loc_40B174
nop

loc_40B14C:
lw      $v0, 0x3B8+var_344($sp)
la      $t9, ATP_LOG_Printf
sw      $v0, 0x3B8+var_3A8($sp)
lw      $v0, 0x3B8+var_368($sp)
addiu   $a3, (aTr064SetAction_0 - 0x410000)  # "tr064 set action(%s) failed, ErrorCode:"...
sw      $v0, 0x3B8+var_3A4($sp)

loc_40B164:
li      $a0, 2
li      $a1, 0x20
jalr    $t9 ; ATP_LOG_Printf
li      $a2, 1

loc_40B174:
lw      $gp, 0x3B8+var_3A0($sp)
nop

loc_40B17C:
la      $t9, TSP_XML_FreeNode
lw      $a0, 0x3B8+var_33C($sp)
jalr    $t9 ; TSP_XML_FreeNode
nop
lw      $gp, 0x3B8+var_3A0($sp)
nop
la      $t9, TSP_XML_FreeNode
nop
jalr    $t9 ; TSP_XML_FreeNode
move    $a0, $s5
lw      $gp, 0x3B8+var_3A0($sp)
b       loc_40B1B8
nop

loc_40B1B0:
lui     $v0, 0x4009

loc_40B1B4:
ori     $s2, $v0, 0xB

loc_40B1B8:
lw      $ra, 0x3B8+var_4($sp)
move    $v0, $s2
lw      $fp, 0x3B8+var_8($sp)
lw      $s7, 0x3B8+var_C($sp)
lw      $s6, 0x3B8+var_10($sp)
lw      $s5, 0x3B8+var_14($sp)
lw      $s4, 0x3B8+var_18($sp)
lw      $s3, 0x3B8+var_1C($sp)
lw      $s2, 0x3B8+var_20($sp)
lw      $s1, 0x3B8+var_24($sp)
lw      $s0, 0x3B8+var_28($sp)
jr      $ra
addiu   $sp, 0x3B8
 # End of function sub_40A9C8




sub_40B1EC:

var_B0= -0xB0
var_AC= -0xAC
var_A8= -0xA8
var_A0= -0xA0
var_98= -0x98
var_94= -0x94
var_74= -0x74
var_30= -0x30
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0xC0
li      $gp, 0x42E470
sw      $ra, 0xC0+var_4($sp)
sw      $fp, 0xC0+var_8($sp)
sw      $s7, 0xC0+var_C($sp)
sw      $s6, 0xC0+var_10($sp)
sw      $s5, 0xC0+var_14($sp)
sw      $s4, 0xC0+var_18($sp)
sw      $s3, 0xC0+var_1C($sp)
sw      $s2, 0xC0+var_20($sp)
sw      $s1, 0xC0+var_24($sp)
sw      $s0, 0xC0+var_28($sp)
sw      $gp, 0xC0+var_A0($sp)
la      $t9, memset
move    $s3, $a0
li      $a2, 0x40
addiu   $a0, $sp, 0xC0+var_74
move    $fp, $a1
jalr    $t9 ; memset
move    $a1, $zero
lw      $gp, 0xC0+var_A0($sp)
lw      $s7, 0x38($s3)
li      $a1, 0x19
la      $t9, ATP_HTTP_PacketGetHeaderValue
nop
jalr    $t9 ; ATP_HTTP_PacketGetHeaderValue
move    $a0, $s7
lw      $gp, 0xC0+var_A0($sp)
beqz    $v0, loc_40B2C8
move    $s0, $v0
la      $t9, strcmp
addiu   $s1, $v0, 7
la      $a0, aInfinite   # "infinite"
jalr    $t9 ; strcmp
move    $a1, $s1
lw      $gp, 0xC0+var_A0($sp)
beqz    $v0, loc_40B2CC
lui     $v0, 0x20
la      $t9, strlen
nop
jalr    $t9 ; strlen
move    $a0, $s0
sltiu   $v0, 8
lw      $gp, 0xC0+var_A0($sp)
bnez    $v0, loc_40B2CC
lui     $v0, 0x20
la      $t9, atoi
nop
jalr    $t9 ; atoi
move    $a0, $s1
lw      $gp, 0xC0+var_A0($sp)
b       loc_40B2D0
move    $s4, $v0

loc_40B2C8:
lui     $v0, 0x20

loc_40B2CC:
ori     $s4, $v0, 0xC49B

loc_40B2D0:
la      $t9, ATP_HTTP_PacketGetHeaderValue
move    $a0, $s7
jalr    $t9 ; ATP_HTTP_PacketGetHeaderValue
li      $a1, 0x1A
lw      $gp, 0xC0+var_A0($sp)
beqz    $v0, loc_40B324
move    $s0, $v0
la      $t9, strchr
move    $a0, $v0
jalr    $t9 ; strchr
li      $a1, 0x3E
lw      $gp, 0xC0+var_A0($sp)
beqz    $v0, loc_40B324
move    $a0, $s0
la      $t9, strchr
sb      $zero, 0($v0)
jalr    $t9 ; strchr
li      $a1, 0x3C
lw      $gp, 0xC0+var_A0($sp)
bnez    $v0, loc_40B328
addiu   $s0, $v0, 1

loc_40B324:
move    $s0, $zero

loc_40B328:
la      $t9, ATP_HTTP_PacketGetHeaderValue
move    $a0, $s7
jalr    $t9 ; ATP_HTTP_PacketGetHeaderValue
li      $a1, 0x1B
lw      $gp, 0xC0+var_A0($sp)
beqz    $v0, loc_40B364
move    $a0, $v0
la      $t9, strlen
nop
jalr    $t9 ; strlen
addiu   $s5, $v0, 5
sltiu   $v0, 6
lw      $gp, 0xC0+var_A0($sp)
beqz    $v0, loc_40B368
nop

loc_40B364:
move    $s5, $zero

loc_40B368:
la      $t9, ATP_HTTP_PacketSetHeader
la      $a3, aLinuxUpnp10Hua  # "Linux UPnP/1.0 Huawei-ATP-IGD"
move    $a0, $zero
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x10
lw      $gp, 0xC0+var_A0($sp)
addiu   $v0, $sp, 0xC0+var_74
sw      $v0, 0xC0+var_30($sp)
addiu   $v0, $sp, 0xC0+var_98
lw      $a0, 8($s7)
sw      $v0, 0xC0+var_A8($sp)
lw      $v0, 0xC0+var_30($sp)
la      $t9, UpnpRegSubscription
move    $a3, $s0
move    $a1, $s5
move    $a2, $s4
sw      $fp, 0xC0+var_B0($sp)
jalr    $t9 ; UpnpRegSubscription
sw      $v0, 0xC0+var_AC($sp)
lw      $gp, 0xC0+var_A0($sp)
li      $v1, 2
addiu   $s1, $s3, 0x40
la      $t9, ATP_HTTP_PacketSetHeader
li      $s6, 0xC8
lui     $a3, 0x41
sh      $v1, 0x40($s3)
move    $s2, $v0
sh      $s6, 0x44($s3)
la      $a3, aAtpUpnpCore  # "ATP UPnP Core"
move    $a0, $s1
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x10
lw      $gp, 0xC0+var_A0($sp)
bnez    $s2, loc_40B480
lui     $v0, 0x4009
li      $v0, 1
bne     $fp, $v0, loc_40B4A0
li      $v0, 0xC8
lb      $v0, 0xC0+var_74($sp)
nop
beqz    $v0, loc_40B4A4
addiu   $s0, $sp, 0xC0+var_94
la      $t9, snprintf
la      $a2, aSecondD    # "Second-%d"
move    $a3, $s4
move    $a0, $s0
li      $a1, 0x20
jalr    $t9 ; snprintf
sh      $s6, 0x44($s3)
lw      $gp, 0xC0+var_A0($sp)
move    $a3, $s0
move    $a0, $s1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x19
lw      $gp, 0xC0+var_A0($sp)
lw      $a3, 0xC0+var_30($sp)
move    $a0, $s1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x1B
lw      $gp, 0xC0+var_A0($sp)
b       loc_40B4A4
nop

loc_40B480:
ori     $v0, 0xB
beq     $s2, $v0, loc_40B490
li      $v0, 0x1F5
li      $v0, 0x19C

loc_40B490:
sh      $v0, 0x44($s3)
li      $v0, 1
beq     $fp, $v0, loc_40B4A4
li      $v0, 0xC8

loc_40B4A0:
sh      $v0, 0x44($s3)

loc_40B4A4:
la      $t9, memset
addiu   $s0, $sp, 0xC0+var_74
li      $a2, 0x40
move    $a0, $s0
jalr    $t9 ; memset
move    $a1, $zero
move    $a0, $s0
jal     sub_40A7AC
li      $a1, 0x40
lw      $gp, 0xC0+var_A0($sp)
move    $a3, $s0
li      $a1, 1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a2, 9
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a0, $s1
lw      $gp, 0xC0+var_A0($sp)
nop
la      $t9, ATP_HTTP_ClientSend
nop
jalr    $t9 ; ATP_HTTP_ClientSend
move    $a0, $s3
lw      $gp, 0xC0+var_A0($sp)
move    $a0, $s3
la      $t9, ATP_HTTP_ClientDisconnect
nop
jalr    $t9 ; ATP_HTTP_ClientDisconnect
move    $a1, $zero
lw      $gp, 0xC0+var_A0($sp)
bnez    $s2, loc_40B580
nop
bnez    $s5, loc_40B580
nop
lw      $v0, 0xC0+var_98($sp)
nop
beqz    $v0, loc_40B580
nop
la      $t9, UpnpGetServiceByUrl
lw      $a0, 8($s7)
jalr    $t9 ; UpnpGetServiceByUrl
move    $a1, $zero
lw      $gp, 0xC0+var_A0($sp)
beqz    $v0, loc_40B580
nop
lw      $v1, 0x20($v0)
li      $v0, 1
bne     $v1, $v0, loc_40B580
lui     $a2, 0x41
la      $t9, ATP_UTIL_TimerAdd
lw      $a3, 0xC0+var_98($sp)
la      $a2, sub_40BE20
li      $a0, 0xC8
jalr    $t9 ; ATP_UTIL_TimerAdd
li      $a1, 1
lw      $gp, 0xC0+var_A0($sp)

loc_40B580:
lw      $ra, 0xC0+var_4($sp)
move    $v0, $zero
lw      $fp, 0xC0+var_8($sp)
lw      $s7, 0xC0+var_C($sp)
lw      $s6, 0xC0+var_10($sp)
lw      $s5, 0xC0+var_14($sp)
lw      $s4, 0xC0+var_18($sp)
lw      $s3, 0xC0+var_1C($sp)
lw      $s2, 0xC0+var_20($sp)
lw      $s1, 0xC0+var_24($sp)
lw      $s0, 0xC0+var_28($sp)
jr      $ra
addiu   $sp, 0xC0
 # End of function sub_40B1EC




sub_40B5B4:

var_C0= -0xC0
var_BC= -0xBC
var_B8= -0xB8
var_B0= -0xB0
var_AC= -0xAC
var_A8= -0xA8
var_A4= -0xA4
var_A0= -0xA0
var_9C= -0x9C
var_98= -0x98
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0xD0
li      $gp, 0x42E470
sw      $ra, 0xD0+var_4($sp)
sw      $s3, 0xD0+var_8($sp)
sw      $s2, 0xD0+var_C($sp)
sw      $s1, 0xD0+var_10($sp)
sw      $s0, 0xD0+var_14($sp)
sw      $gp, 0xD0+var_B8($sp)
move    $s3, $a0
beqz    $a0, loc_40BD40
move    $s2, $a1
beqz    $a1, loc_40BD44
lui     $v0, 0x4009
lw      $v0, 4($a0)
lw      $s0, 0x38($a0)
andi    $v0, 1
lh      $v1, 2($s0)
beqz    $v0, loc_40B964
li      $v0, 1
li      $v0, 3
bne     $v1, $v0, loc_40BD2C
nop
lw      $a0, 8($s0)
nop
beqz    $a0, loc_40BD2C
nop
lh      $v0, 0($s0)
nop
slti    $v0, 2
bnez    $v0, loc_40BD2C
nop
la      $t9, strchr
nop
jalr    $t9 ; strchr
li      $a1, 0x2A
lw      $gp, 0xD0+var_B8($sp)
beqz    $v0, loc_40BD2C
move    $a0, $s0
la      $t9, ATP_HTTP_PacketGetHeaderValue
sw      $zero, 0xD0+var_A4($sp)
jalr    $t9 ; ATP_HTTP_PacketGetHeaderValue
li      $a1, 0xB
lw      $gp, 0xD0+var_B8($sp)
beqz    $v0, loc_40BD2C
move    $a0, $s0
la      $t9, ATP_HTTP_PacketGetHeaderValue
nop
jalr    $t9 ; ATP_HTTP_PacketGetHeaderValue
li      $a1, 0x15
lw      $gp, 0xD0+var_B8($sp)
beqz    $v0, loc_40BD2C
lui     $a1, 0x41
la      $t9, strstr
move    $a0, $v0
jalr    $t9 ; strstr
la      $a1, aSsdpDiscover  # "ssdp:discover"
lw      $gp, 0xD0+var_B8($sp)
beqz    $v0, loc_40BD2C
move    $a0, $s0
la      $t9, ATP_HTTP_PacketGetHeaderValue
nop
jalr    $t9 ; ATP_HTTP_PacketGetHeaderValue
li      $a1, 0x16
lw      $gp, 0xD0+var_B8($sp)
bnez    $v0, loc_40B6E8
move    $v1, $v0
b       loc_40BD2C
nop

loc_40B6C8:
bnez    $v0, loc_40B6E8
lui     $a0, 0x41
la      $t9, printf
nop
jalr    $t9 ; printf
la      $a0, aMxInvalidC  # "MX  invalid <%c>\n"
b       loc_40BD2C
nop

loc_40B6E8:
lb      $a1, 0($v1)
addiu   $v1, 1
addiu   $v0, $a1, -0x30
andi    $v0, 0xFF
bnez    $a1, loc_40B6C8
sltiu   $v0, 0xA
la      $t9, ATP_HTTP_PacketGetHeaderValue
move    $a0, $s0
jalr    $t9 ; ATP_HTTP_PacketGetHeaderValue
li      $a1, 0x17
lw      $gp, 0xD0+var_B8($sp)
beqz    $v0, loc_40BD2C
move    $s0, $v0
la      $t9, upnpIsSsdpAll
move    $a0, $v0
jalr    $t9 ; upnpIsSsdpAll
li      $s1, 1
lw      $gp, 0xD0+var_B8($sp)
bne     $v0, $s1, loc_40B780
move    $a0, $s0
lw      $v0, 0($s2)
nop
andi    $v0, 2
beqz    $v0, loc_40B758
move    $a0, $s2
move    $a1, $s3
jal     sub_4092FC
li      $a2, 1

loc_40B758:
lw      $v0, 0($s2)
nop
andi    $v0, 4
beqz    $v0, loc_40BD2C
move    $a0, $s2
move    $a1, $s3
jal     sub_4092FC
move    $a2, $zero
b       loc_40BD2C
nop

loc_40B780:
la      $t9, upnpIsRootDevice
nop
jalr    $t9 ; upnpIsRootDevice
addiu   $a1, $sp, 0xD0+var_B0
lw      $gp, 0xD0+var_B8($sp)
bne     $v0, $s1, loc_40B800
move    $v1, $v0
lw      $v0, 0($s2)
nop
andi    $v0, 2
beqz    $v0, loc_40B7C8
move    $a0, $s2
lw      $a2, 0xD0+var_B0($sp)
move    $a1, $s3
move    $a3, $zero
sw      $v1, 0xD0+var_BC($sp)
jal     sub_409804
sw      $v1, 0xD0+var_C0($sp)

loc_40B7C8:
lw      $v0, 0($s2)
nop
andi    $v0, 4
beqz    $v0, loc_40BD2C
move    $a0, $s2
lw      $a2, 0xD0+var_B0($sp)
li      $v0, 1
move    $a1, $s3
move    $a3, $zero
sw      $v0, 0xD0+var_C0($sp)
jal     sub_409804
sw      $zero, 0xD0+var_BC($sp)
b       loc_40BD2C
nop

loc_40B800:
la      $t9, UpnpGetDeviceOrService
sw      $zero, 0xD0+var_A8($sp)
sw      $zero, 0xD0+var_A4($sp)
move    $a0, $s0
addiu   $a1, $sp, 0xD0+var_A4
addiu   $a2, $sp, 0xD0+var_AC
jalr    $t9 ; UpnpGetDeviceOrService
addiu   $a3, $sp, 0xD0+var_A8
lw      $gp, 0xD0+var_B8($sp)
bnez    $v0, loc_40B844
nop
b       loc_40B85C
nop

loc_40B834:
lw      $v0, 8($v0)
jalr    $t9 ; free
sw      $v0, 0xD0+var_A4($sp)
lw      $gp, 0xD0+var_B8($sp)

loc_40B844:
lw      $v0, 0xD0+var_A4($sp)
la      $t9, free
bnez    $v0, loc_40B834
move    $a0, $v0
b       loc_40BD2C
nop

loc_40B85C:
lw      $v1, 0xD0+var_AC($sp)
lw      $v0, 0($s2)
bne     $v1, $s1, loc_40B8DC
nop
andi    $v0, 2
bnez    $v0, loc_40B8C4
li      $s1, 1
lw      $v0, 0xD0+var_A8($sp)
nop
bne     $v0, $v1, loc_40B94C
nop
b       loc_40B8C4
nop

loc_40B890:
lw      $v0, 8($s0)
lw      $a2, 4($s0)
lw      $a3, 0($s0)
sw      $v0, 0xD0+var_A4($sp)
sw      $zero, 0xD0+var_C0($sp)
jal     sub_409804
sw      $s1, 0xD0+var_BC($sp)
lw      $gp, 0xD0+var_B8($sp)
nop
la      $t9, free
nop
jalr    $t9 ; free
move    $a0, $s0

loc_40B8C4:
lw      $s0, 0xD0+var_A4($sp)
move    $a0, $s2
bnez    $s0, loc_40B890
move    $a1, $s3
b       loc_40BD2C
nop

loc_40B8DC:
andi    $v0, 4
beqz    $v0, loc_40B94C
nop
b       loc_40B924
nop

loc_40B8F0:
lw      $v0, 8($s0)
lw      $a2, 4($s0)
lw      $a3, 0($s0)
sw      $v0, 0xD0+var_A4($sp)
sw      $zero, 0xD0+var_C0($sp)
jal     sub_409804
sw      $zero, 0xD0+var_BC($sp)
lw      $gp, 0xD0+var_B8($sp)
nop
la      $t9, free
nop
jalr    $t9 ; free
move    $a0, $s0

loc_40B924:
lw      $s0, 0xD0+var_A4($sp)
move    $a0, $s2
bnez    $s0, loc_40B8F0
move    $a1, $s3
b       loc_40BD2C
nop

loc_40B93C:
lw      $v0, 8($v0)
jalr    $t9 ; free
sw      $v0, 0xD0+var_A4($sp)
lw      $gp, 0xD0+var_B8($sp)

loc_40B94C:
lw      $v0, 0xD0+var_A4($sp)
la      $t9, free
bnez    $v0, loc_40B93C
move    $a0, $v0
b       loc_40BD2C
nop

loc_40B964:
beq     $v1, $v0, loc_40BD10
nop
slti    $v0, $v1, 2
beqz    $v0, loc_40B988
li      $v0, 4
beqz    $v1, loc_40B9A4
nop
b       loc_40BD2C
nop

loc_40B988:
beq     $v1, $v0, loc_40BD24
li      $a1, 1
li      $v0, 5
bne     $v1, $v0, loc_40BD2C
move    $a1, $zero
b       loc_40BD24
nop

loc_40B9A4:
lw      $s0, 8($s0)
nop
beqz    $s0, loc_40BCA4
lui     $s1, 0x41
la      $t9, strcmp
move    $a0, $s0
jalr    $t9 ; strcmp
addiu   $a1, $s1, (aUpnpdevXml - 0x410000)  # "/upnpdev.xml"
lw      $gp, 0xD0+var_B8($sp)
bnez    $v0, loc_40B9F0
move    $a0, $s0
lw      $v0, 0($s2)
nop
andi    $v0, 2
beqz    $v0, loc_40BCA4
addiu   $v0, $s1, (aUpnpdevXml - 0x410000)  # "/upnpdev.xml"
la      $t9, snprintf
b       loc_40BA18
lui     $a2, 0x41

loc_40B9F0:
la      $t9, strcmp
lui     $s1, 0x41
jalr    $t9 ; strcmp
addiu   $a1, $s1, (aTr064devXml - 0x410000)  # "/tr064dev.xml"
lw      $gp, 0xD0+var_B8($sp)
bnez    $v0, loc_40BA2C
lui     $v0, 0x42
la      $t9, snprintf
addiu   $v0, $s1, (aTr064devXml - 0x410000)  # "/tr064dev.xml"
lui     $a2, 0x41

loc_40BA18:
lui     $a3, 0x41
sw      $v0, 0xD0+var_C0($sp)
addiu   $a2, (aNotifySHttp11H+0x8C - 0x410000)  # "%s%s"
b       loc_40BAD8
la      $a3, aVar        # "/var"

loc_40BA2C:
lw      $s1, (g_pcDescPath - 0x420000)($v0)
nop
beqz    $s1, loc_40BCA4
lui     $a1, 0x41
la      $t9, strncmp
la      $a1, aIcon_0     # "/icon/"
move    $a0, $s0
jalr    $t9 ; strncmp
li      $a2, 6
lw      $gp, 0xD0+var_B8($sp)
bnez    $v0, loc_40BAA4
lui     $a1, 0x41
la      $t9, snprintf
addiu   $v0, $s0, 6
lui     $a2, 0x41
addiu   $s0, $sp, 0xD0+var_98
la      $a2, aSS_0       # "%s/%s"
move    $a3, $s1
move    $a0, $s0
li      $a1, 0x80
jalr    $t9 ; snprintf
sw      $v0, 0xD0+var_C0($sp)
move    $a1, $s0
jal     sub_409BE0
move    $a0, $s3
lw      $gp, 0xD0+var_B8($sp)
beqz    $v0, loc_40BD2C
nop
b       loc_40BCA4
nop

loc_40BAA4:
la      $t9, strncmp
addiu   $a1, (aDesc - 0x410000)  # "/desc/"
move    $a0, $s0
jalr    $t9 ; strncmp
li      $a2, 6
lw      $gp, 0xD0+var_B8($sp)
bnez    $v0, loc_40BCA4
addiu   $s0, 6
la      $t9, snprintf
lui     $a2, 0x41
sw      $s0, 0xD0+var_C0($sp)
la      $a2, aSS_0       # "%s/%s"
move    $a3, $s1

loc_40BAD8:
li      $a1, 0x80
jalr    $t9 ; snprintf
addiu   $a0, $sp, 0xD0+var_98
lw      $gp, 0xD0+var_B8($sp)
nop
la      $t9, ATP_HTTP_ClientGetSendBuf
nop
jalr    $t9 ; ATP_HTTP_ClientGetSendBuf
move    $a0, $s3
lw      $gp, 0xD0+var_B8($sp)
move    $a0, $v0
la      $t9, ATP_UTIL_StrFileFlush
nop
jalr    $t9 ; ATP_UTIL_StrFileFlush
move    $s1, $v0
lw      $gp, 0xD0+var_B8($sp)
la      $a1, aUpnpdevXml  # "/upnpdev.xml"
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a0, $s0
lw      $gp, 0xD0+var_B8($sp)
beqz    $v0, loc_40BB58
lui     $a1, 0x41
la      $t9, strcmp
move    $a0, $s0
jalr    $t9 ; strcmp
la      $a1, aTr064devXml  # "/tr064dev.xml"
lw      $gp, 0xD0+var_B8($sp)
bnez    $v0, loc_40BB9C
addiu   $a0, $sp, 0xD0+var_98

loc_40BB58:
la      $t9, ATP_UTIL_StrFileToBuf
addiu   $a0, $sp, 0xD0+var_98
jalr    $t9 ; ATP_UTIL_StrFileToBuf
addiu   $a1, $sp, 0xD0+var_A0
lw      $gp, 0xD0+var_B8($sp)
beqz    $v0, loc_40BCA4
lui     $a1, 0x41
la      $t9, ATP_UTIL_StrFilePrintf
lw      $a2, 0xD0+var_A0($sp)
move    $a0, $s1
jalr    $t9 ; ATP_UTIL_StrFilePrintf
la      $a1, (aSS+4)     # "%s"
lw      $gp, 0xD0+var_B8($sp)
lw      $a0, 0xD0+var_A0($sp)
la      $t9, free
b       loc_40BC0C
nop

loc_40BB9C:
la      $t9, upnpScpdStrip
nop
jalr    $t9 ; upnpScpdStrip
addiu   $a1, $sp, 0xD0+var_9C
lw      $gp, 0xD0+var_B8($sp)
bnez    $v0, loc_40BCA4
nop
la      $t9, TSP_XML_Transform
lw      $a0, 0xD0+var_9C($sp)
jalr    $t9 ; TSP_XML_Transform
addiu   $a1, $sp, 0xD0+var_A0
lw      $gp, 0xD0+var_B8($sp)
lw      $a2, 0xD0+var_A0($sp)
lui     $a1, 0x41
la      $t9, ATP_UTIL_StrFilePrintf
la      $a1, aXmlVersion10S  # "<?xml version=\"1.0\"?>\n%s"
jalr    $t9 ; ATP_UTIL_StrFilePrintf
move    $a0, $s1
lw      $gp, 0xD0+var_B8($sp)
lw      $a0, 0xD0+var_A0($sp)
la      $t9, TSP_XML_FreeMem
nop
jalr    $t9 ; TSP_XML_FreeMem
nop
lw      $gp, 0xD0+var_B8($sp)
lw      $a0, 0xD0+var_9C($sp)
la      $t9, TSP_XML_FreeNode
nop

loc_40BC0C:
jalr    $t9
addiu   $s0, $s3, 0x40
lw      $gp, 0xD0+var_B8($sp)
li      $v0, 2
la      $t9, ATP_HTTP_PacketSetHeader
sh      $v0, 0x40($s3)
lui     $a3, 0x41
li      $v0, 0xC8
la      $a3, aTextXmlCharset  # "text/xml; charset=\"utf-8\""
move    $a0, $s0
li      $a1, 1
li      $a2, 0xE
jalr    $t9 ; ATP_HTTP_PacketSetHeader
sh      $v0, 0x44($s3)
lw      $gp, 0xD0+var_B8($sp)
la      $a3, aLinuxUpnp10Hua  # "Linux UPnP/1.0 Huawei-ATP-IGD"
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s0
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x10
lw      $gp, 0xD0+var_B8($sp)
lui     $a3, 0x41
move    $a0, $s0
la      $t9, ATP_HTTP_PacketSetHeader
la      $a3, aKeepAlive  # "Keep-Alive"
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 5
lw      $gp, 0xD0+var_B8($sp)
nop
la      $t9, ATP_HTTP_ClientSend
nop

loc_40BC94:
jalr    $t9 ; ATP_HTTP_ClientSend
move    $a0, $s3
b       loc_40BD2C
nop

loc_40BCA4:
la      $t9, ATP_HTTP_ClientGetSendBuf
nop
jalr    $t9 ; ATP_HTTP_ClientGetSendBuf
move    $a0, $s3
lw      $gp, 0xD0+var_B8($sp)
beqz    $v0, loc_40BD2C
move    $s0, $v0
la      $t9, ATP_UTIL_StrFileFlush
nop
jalr    $t9 ; ATP_UTIL_StrFileFlush
move    $a0, $v0
lw      $gp, 0xD0+var_B8($sp)
lui     $a1, 0x41
move    $a0, $s0
la      $t9, ATP_UTIL_StrFilePrintf
nop
jalr    $t9 ; ATP_UTIL_StrFilePrintf
la      $a1, aFileNotFound  # "File not found.\n"
li      $v0, 0xFFFFFFFF
lw      $gp, 0xD0+var_B8($sp)
sh      $v0, 0x42($s3)
li      $v0, 0x194
sh      $v0, 0x44($s3)
li      $v0, 2
la      $t9, ATP_HTTP_ClientSend
b       loc_40BC94
sh      $v0, 0x40($s3)

loc_40BD10:
move    $a0, $a1
jal     sub_40A9C8
move    $a1, $s3
b       loc_40BD2C
nop

loc_40BD24:
jal     sub_40B1EC
nop

loc_40BD2C:
jal     sub_40880C
nop
lw      $gp, 0xD0+var_B8($sp)
b       loc_40BD48
move    $v0, $zero

loc_40BD40:
lui     $v0, 0x4009

loc_40BD44:
ori     $v0, 0xB

loc_40BD48:
lw      $ra, 0xD0+var_4($sp)
lw      $s3, 0xD0+var_8($sp)
lw      $s2, 0xD0+var_C($sp)
lw      $s1, 0xD0+var_10($sp)
lw      $s0, 0xD0+var_14($sp)
jr      $ra
addiu   $sp, 0xD0
 # End of function sub_40B5B4




sub_40BD64:
lw      $a1, 0x1C($a0)
j       sub_40B5B4
nop
 # End of function sub_40BD64




.globl ATP_UPNP_LockTr064Device
ATP_UPNP_LockTr064Device:

var_18= -0x18
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s2, 0x28+var_8($sp)
sw      $s1, 0x28+var_C($sp)
sw      $s0, 0x28+var_10($sp)
sw      $gp, 0x28+var_18($sp)
beqz    $a0, loc_40BE08
lui     $v0, 0x4009
lui     $s0, 0x42
lw      $v0, dword_426870
li      $s1, 1
bne     $v0, $s1, loc_40BDB4
lui     $v0, 0x4009
b       loc_40BE08
li      $v0, 0x4009000D

loc_40BDB4:
la      $t9, strdup
nop
jalr    $t9 ; strdup
addiu   $s2, $s0, (dword_426870 - 0x420000)
lw      $gp, 0x28+var_18($sp)
bnez    $v0, loc_40BDDC
sw      $v0, (dword_426874 - 0x426870)($s2)
lui     $v0, 0x4009
b       loc_40BE08
li      $v0, 0x40090002

loc_40BDDC:
la      $t9, ATP_UTIL_TimerAdd
lui     $a2, 0x41
sw      $s1, (dword_426870 - 0x420000)($s0)
la      $a2, sub_40C35C
li      $a0, 0x9C40
li      $a1, 1
jalr    $t9 ; ATP_UTIL_TimerAdd
move    $a3, $zero
lw      $gp, 0x28+var_18($sp)
sw      $v0, (dword_426878 - 0x426870)($s2)
move    $v0, $zero

loc_40BE08:
lw      $ra, 0x28+var_4($sp)
lw      $s2, 0x28+var_8($sp)
lw      $s1, 0x28+var_C($sp)
lw      $s0, 0x28+var_10($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function ATP_UPNP_LockTr064Device




sub_40BE20:

var_2B8= -0x2B8
var_2B0= -0x2B0
var_2A8= -0x2A8
var_2A4= -0x2A4
var_2A0= -0x2A0
var_29C= -0x29C
var_298= -0x298
var_294= -0x294
var_27C= -0x27C
var_264= -0x264
var_244= -0x244
var_144= -0x144
var_40= -0x40
var_3C= -0x3C
var_38= -0x38
var_34= -0x34
var_30= -0x30
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x2C8
li      $gp, 0x42E470
sw      $ra, 0x2C8+var_4($sp)
sw      $fp, 0x2C8+var_8($sp)
sw      $s7, 0x2C8+var_C($sp)
sw      $s6, 0x2C8+var_10($sp)
sw      $s5, 0x2C8+var_14($sp)
sw      $s4, 0x2C8+var_18($sp)
sw      $s3, 0x2C8+var_1C($sp)
sw      $s2, 0x2C8+var_20($sp)
sw      $s1, 0x2C8+var_24($sp)
sw      $s0, 0x2C8+var_28($sp)
sw      $gp, 0x2C8+var_2B0($sp)
la      $t9, memcpy
la      $a1, dword_415860
li      $a2, 0x18
move    $s1, $a0
sw      $zero, 0x2C8+var_2A8($sp)
addiu   $a0, $sp, 0x2C8+var_294
sw      $zero, 0x2C8+var_2A4($sp)
sw      $zero, 0x2C8+var_2A0($sp)
jalr    $t9 ; memcpy
sw      $zero, 0x2C8+var_29C($sp)
lw      $gp, 0x2C8+var_2B0($sp)
lui     $a1, 0x41
sw      $zero, 0x2C8+var_298($sp)
la      $t9, memcpy
la      $a1, dword_415848
addiu   $a0, $sp, 0x2C8+var_27C
jalr    $t9 ; memcpy
li      $a2, 0x18
lw      $gp, 0x2C8+var_2B0($sp)
beqz    $s1, loc_40C1FC
nop
lw      $s0, 0x14($s1)
nop
beqz    $s0, loc_40C1FC
nop
lw      $s1, 4($s1)
lw      $s5, 0x2C($s0)
b       loc_40BEEC
nop

loc_40BED0:
lw      $a0, 4($s5)
jalr    $t9 ; strcmp
nop
lw      $gp, 0x2C8+var_2B0($sp)
beqz    $v0, loc_40BF00
addiu   $s4, $sp, 0x2C8+var_244
lw      $s5, 0x18($s5)

loc_40BEEC:
la      $t9, strcmp
bnez    $s5, loc_40BED0
move    $a1, $s1
b       loc_40C1FC
nop

loc_40BF00:
la      $t9, ATP_TR064_GetDomainNameOfService
move    $a0, $s0
move    $a1, $s4
li      $a2, 0x100
jalr    $t9 ; ATP_TR064_GetDomainNameOfService
move    $a3, $zero
lw      $gp, 0x2C8+var_2B0($sp)
bnez    $v0, loc_40C1FC
addiu   $s3, $sp, 0x2C8+var_2A0
la      $t9, ATP_CFM_CfgMsgHeadBuilder
lui     $s2, 1
move    $a0, $s3
ori     $a1, $s2, 2
move    $a2, $zero
jalr    $t9 ; ATP_CFM_CfgMsgHeadBuilder
move    $a3, $zero
lw      $gp, 0x2C8+var_2B0($sp)
bnez    $v0, loc_40C1FC
addiu   $v0, $sp, 0x2C8+var_298
addiu   $v1, $sp, 0x2C8+var_27C
addiu   $a0, $sp, 0x2C8+var_2A8
lw      $s1, 0x28($s0)
sw      $s4, 0x2C8+var_40($sp)
sw      $s3, 0x2C8+var_34($sp)
addiu   $s7, $sp, 0x2C8+var_144
addiu   $s6, $sp, 0x2C8+var_294
sw      $v0, 0x2C8+var_3C($sp)
sw      $v1, 0x2C8+var_38($sp)
b       loc_40C1C8
sw      $a0, 0x2C8+var_30($sp)

loc_40BF78:
move    $s3, $zero

loc_40BF7C:
lw      $v0, 0xC($s0)
nop
beqz    $v0, loc_40C074
nop
lw      $v0, 8($s0)
nop
bnez    $v0, loc_40C074
nop
lw      $v0, 4($s0)
la      $t9, snprintf
beqz    $v0, loc_40BFB8
move    $a0, $s7
sw      $v0, 0x2C8+var_2B8($sp)
b       loc_40BFC4
li      $a1, 0x100

loc_40BFB8:
lw      $v0, 0($s0)
li      $a1, 0x100
sw      $v0, 0x2C8+var_2B8($sp)

loc_40BFC4:
lw      $a3, 0x2C8+var_40($sp)
lui     $a2, 0x41
jalr    $t9 ; snprintf
la      $a2, (aNotifySHttp11H+0x8C)  # "%s%s"
lw      $gp, 0x2C8+var_2B0($sp)
lw      $a2, 0x2C8+var_3C($sp)
move    $a0, $s7
la      $t9, ATP_DBDomainToKeyList
nop
jalr    $t9 ; ATP_DBDomainToKeyList
move    $a1, $s6
lw      $gp, 0x2C8+var_2B0($sp)
bnez    $s3, loc_40C018
move    $s4, $v0
la      $t9, memcpy
lw      $a0, 0x2C8+var_38($sp)
move    $a1, $s6
lw      $s3, 0x2C8+var_298($sp)
jalr    $t9 ; memcpy
li      $a2, 0x18
lw      $gp, 0x2C8+var_2B0($sp)

loc_40C018:
lw      $s2, 0x2C8+var_298($sp)
li      $v0, 0x1FF00
and     $v1, $s3, $v0
and     $v0, $s2, $v0
bne     $v0, $v1, loc_40C084
move    $a1, $s6
la      $t9, memcmp
lw      $a0, 0x2C8+var_38($sp)
jalr    $t9 ; memcmp
li      $a2, 0x18
lw      $gp, 0x2C8+var_2B0($sp)
bnez    $v0, loc_40C084
move    $a2, $s2
la      $t9, ATP_CFM_CfgMsgAppendPara
lw      $a0, 0x2C8+var_34($sp)
move    $a1, $s6
jalr    $t9 ; ATP_CFM_CfgMsgAppendPara
move    $a3, $zero
addu    $v0, $s4
lw      $gp, 0x2C8+var_2B0($sp)
bnez    $v0, loc_40C0A8
nop

loc_40C074:
lw      $s0, 0x10($s0)
nop
bnez    $s0, loc_40BF7C
nop

loc_40C084:
beqz    $s3, loc_40C0C0
addiu   $a1, $sp, 0x2C8+var_29C
la      $t9, ATP_CFMA_GetPara
lw      $a0, 0x2C8+var_2A0($sp)
jalr    $t9 ; ATP_CFMA_GetPara
li      $a2, 0x2710
lw      $gp, 0x2C8+var_2B0($sp)
beqz    $v0, loc_40C0C0
nop

loc_40C0A8:
la      $t9, ATP_CFM_MsgFree
lw      $a0, 0x2C8+var_2A0($sp)
jalr    $t9 ; ATP_CFM_MsgFree
nop
b       loc_40C1F8
nop

loc_40C0C0:
la      $t9, ATP_CFM_MsgFree
lw      $a0, 0x2C8+var_2A0($sp)
move    $s2, $zero
jalr    $t9 ; ATP_CFM_MsgFree
lui     $fp, 0x80
lw      $gp, 0x2C8+var_2B0($sp)
addiu   $s4, $sp, 0x2C8+var_2A4
b       loc_40C1B8
addiu   $s3, $sp, 0x2C8+var_264

loc_40C0E4:
lw      $v0, 0xC($s1)
nop
beqz    $v0, loc_40C1B4
nop
lw      $v0, 8($s1)
nop
beqz    $v0, loc_40C110
move    $a2, $v0
lw      $a1, 0($s1)
b       loc_40C1A8
sw      $v0, 0x2C8+var_2A8($sp)

loc_40C110:
lw      $v0, 0x2C8+var_30($sp)
la      $t9, ATP_CFM_GetParaOfMsgBySeqNum
lw      $a0, 0x2C8+var_29C($sp)
lw      $a3, 0x2C8+var_3C($sp)
move    $a2, $s2
move    $a1, $zero
jalr    $t9 ; ATP_CFM_GetParaOfMsgBySeqNum
sw      $v0, 0x2C8+var_2B8($sp)
lw      $gp, 0x2C8+var_2B0($sp)
lui     $a2, 0x41
addiu   $s2, 1
la      $t9, snprintf
move    $a0, $s3
li      $a1, 0x20
beqz    $v0, loc_40C16C
la      $a2, (aMaxAgeD+8)  # "%d"
la      $t9, ATP_CFM_MsgFree
lw      $a0, 0x2C8+var_29C($sp)
jalr    $t9 ; ATP_CFM_MsgFree
move    $s1, $s0
lw      $gp, 0x2C8+var_2B0($sp)
b       loc_40C1C8
nop

loc_40C16C:
lw      $v0, 0x2C8+var_298($sp)
lui     $v1, 0x380
and     $v0, $v1
beq     $v0, $fp, loc_40C194
nop
lw      $a3, 0x2C8+var_2A8($sp)
jalr    $t9 ; snprintf
nop
lw      $gp, 0x2C8+var_2B0($sp)
sw      $s3, 0x2C8+var_2A8($sp)

loc_40C194:
lw      $a1, 0($s1)
la      $t9, ATP_UPNP_AddEvent
lw      $a2, 0x2C8+var_2A8($sp)
move    $a0, $s4
move    $a3, $zero

loc_40C1A8:
jalr    $t9 ; ATP_UPNP_AddEvent
nop
lw      $gp, 0x2C8+var_2B0($sp)

loc_40C1B4:
lw      $s1, 0x10($s1)

loc_40C1B8:
la      $t9, ATP_UPNP_AddEvent
move    $a0, $s4
bne     $s1, $s0, loc_40C0E4
move    $a3, $zero

loc_40C1C8:
bnez    $s1, loc_40BF78
move    $s0, $s1
lw      $a2, 0x2C8+var_2A4($sp)
move    $a0, $zero
jal     sub_408C80
move    $a1, $s5
lw      $gp, 0x2C8+var_2B0($sp)
lw      $a0, 0x2C8+var_2A4($sp)
la      $t9, ATP_UPNP_FreeEvent
nop
jalr    $t9 ; ATP_UPNP_FreeEvent
nop

loc_40C1F8:
lw      $gp, 0x2C8+var_2B0($sp)

loc_40C1FC:
lw      $ra, 0x2C8+var_4($sp)
lw      $fp, 0x2C8+var_8($sp)
lw      $s7, 0x2C8+var_C($sp)
lw      $s6, 0x2C8+var_10($sp)
lw      $s5, 0x2C8+var_14($sp)
lw      $s4, 0x2C8+var_18($sp)
lw      $s3, 0x2C8+var_1C($sp)
lw      $s2, 0x2C8+var_20($sp)
lw      $s1, 0x2C8+var_24($sp)
lw      $s0, 0x2C8+var_28($sp)
jr      $ra
addiu   $sp, 0x2C8
 # End of function sub_40BE20




sub_40C22C:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
lui     $s1, 0x42
lw      $v0, dword_426870
nop
beqz    $v0, loc_40C28C
addiu   $s0, $s1, (dword_426870 - 0x420000)
la      $t9, ATP_UTIL_TimerDel
lw      $a0, (dword_426878 - 0x426870)($s0)
jalr    $t9 ; ATP_UTIL_TimerDel
nop
lw      $gp, 0x28+var_18($sp)
sw      $zero, (dword_426878 - 0x426870)($s0)
sw      $zero, dword_426870
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
j       sub_40880C
addiu   $sp, 0x28

loc_40C28C:
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_40C22C




.globl ATP_UPNP_UnLockTr064Device
ATP_UPNP_UnLockTr064Device:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
beqz    $a0, loc_40C348
lui     $v0, 0x4009
lw      $a1, 0x38($a0)
nop
beqz    $a1, loc_40C348
lui     $v1, 0x42
lw      $v0, dword_426870
nop
bnez    $v0, loc_40C2F0
addiu   $s1, $v1, (dword_426870 - 0x420000)
lui     $v0, 0x4009
b       loc_40C348
li      $v0, 0x4009000E

loc_40C2F0:
lw      $s0, (dword_426874 - 0x426870)($s1)
nop
beqz    $s0, loc_40C344
lui     $v0, 0x4009
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a0, $s0
lw      $gp, 0x28+var_18($sp)
bnez    $v0, loc_40C340
nop
la      $t9, free
nop
jalr    $t9 ; free
move    $a0, $s0
jal     sub_40C22C
sw      $zero, (dword_426874 - 0x426870)($s1)
lw      $gp, 0x28+var_18($sp)
b       loc_40C348
move    $v0, $zero

loc_40C340:
lui     $v0, 0x4009

loc_40C344:
ori     $v0, 0xC

loc_40C348:
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function ATP_UPNP_UnLockTr064Device




sub_40C35C:
j       sub_40C22C
nop
 # End of function sub_40C35C




.globl ATP_UPNP_BroadcastSSDP
ATP_UPNP_BroadcastSSDP:

var_4C8= -0x4C8
var_4C4= -0x4C4
var_4C0= -0x4C0
var_4B8= -0x4B8
var_4B4= -0x4B4
var_4B0= -0x4B0
var_470= -0x470
var_430= -0x430
var_330= -0x330
var_30= -0x30
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4
arg_0=  0

lui     $gp, 0x43
addiu   $sp, -0x4D8
li      $gp, 0x42E470
sw      $ra, 0x4D8+var_4($sp)
sw      $fp, 0x4D8+var_8($sp)
sw      $s7, 0x4D8+var_C($sp)
sw      $s6, 0x4D8+var_10($sp)
sw      $s5, 0x4D8+var_14($sp)
sw      $s4, 0x4D8+var_18($sp)
sw      $s3, 0x4D8+var_1C($sp)
sw      $s2, 0x4D8+var_20($sp)
sw      $s1, 0x4D8+var_24($sp)
sw      $s0, 0x4D8+var_28($sp)
sw      $gp, 0x4D8+var_4C0($sp)
lw      $v0, g_pstUPnPStack
sw      $a0, 0x4D8+arg_0($sp)
move    $s5, $a1
lw      $s1, 0xC($v0)
move    $s7, $a3
andi    $s4, $a2, 0xFFFF
addiu   $s3, $s1, 0x40
beqz    $s3, loc_40C504
move    $s2, $a0
la      $t9, strdup
li      $s0, 2
la      $a0, asc_4157F4  # "*"
jalr    $t9 ; strdup
sh      $s0, 0x42($s1)
lw      $gp, 0x4D8+var_4C0($sp)
lui     $a3, 0x41
sh      $s0, 0x40($s1)
la      $t9, ATP_HTTP_PacketSetHeader
sw      $v0, 0x48($s1)
la      $a3, a23925525525019  # "239.255.255.250:1900"
move    $a0, $s3
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0xB
li      $v0, 1
lw      $gp, 0x4D8+var_4C0($sp)
bne     $s5, $v0, loc_40C4C8
move    $a0, $s3
la      $t9, snprintf
addiu   $s0, $sp, 0x4D8+var_330
lui     $a2, 0x41
lui     $a3, 1
la      $a2, aMaxAgeD    # "max-age=%d"
li      $a3, 0x151E4
move    $a0, $s0
jalr    $t9 ; snprintf
li      $a1, 0x100
lw      $gp, 0x4D8+var_4C0($sp)
move    $a0, $s3
li      $a1, 1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a2, 0x11
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a3, $s0
lw      $gp, 0x4D8+var_4C0($sp)
move    $a3, $s2
move    $a0, $zero
la      $t9, upnpGetLocationUrl
move    $a1, $s0
li      $a2, 0x100
sw      $s4, 0x4D8+var_4C8($sp)
jalr    $t9 ; upnpGetLocationUrl
sw      $s7, 0x4D8+var_4C4($sp)
lw      $gp, 0x4D8+var_4C0($sp)
move    $a3, $s0
move    $a0, $s3
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0xA
lw      $gp, 0x4D8+var_4C0($sp)
la      $a3, aLinuxUpnp10Hua  # "Linux UPnP/1.0 Huawei-ATP-IGD"
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s3
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x10
lw      $gp, 0x4D8+var_4C0($sp)
lui     $a3, 0x41
la      $t9, ATP_HTTP_PacketSetHeader
b       loc_40C4F0
la      $a3, aSsdpAlive  # "ssdp:alive"

loc_40C4C8:
la      $t9, ATP_HTTP_PacketSetHeader
la      $a3, aUpnpRootdevice  # "upnp:rootdevice"
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x12
lw      $gp, 0x4D8+var_4C0($sp)
la      $a3, aSsdpByebye  # "ssdp:byebye"
la      $t9, ATP_HTTP_PacketSetHeader

loc_40C4F0:
move    $a0, $s3
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x13
lw      $gp, 0x4D8+var_4C0($sp)

loc_40C504:
lui     $s2, 0x42
lw      $v0, g_pstUpnpGvarHead
sb      $zero, 0x4D8+var_430($sp)
lw      $v0, 0($v0)
nop
bnez    $v0, loc_40C53C
addiu   $s0, $sp, 0x4D8+var_430
la      $t9, ATP_HTTP_PacketDestroy
nop
jalr    $t9 ; ATP_HTTP_PacketDestroy
move    $a0, $s3
lw      $gp, 0x4D8+var_4C0($sp)
b       loc_40C624
lui     $v0, 0x4009

loc_40C53C:
la      $t9, UpnpGetDeviceUuid
lw      $a0, 0xC($v0)
li      $a2, 0x100
move    $a3, $s7
jalr    $t9 ; UpnpGetDeviceUuid
move    $a1, $s0
lw      $gp, 0x4D8+var_4C0($sp)
lui     $a1, 0x41
move    $a0, $s0
la      $t9, strcat
la      $a1, asc_415828  # "::"
jalr    $t9 ; strcat
lui     $s1, 0x41
lw      $gp, 0x4D8+var_4C0($sp)
move    $a0, $s0
la      $t9, strcat
nop
jalr    $t9 ; strcat
addiu   $a1, $s1, (aUpnpRootdevice - 0x410000)  # "upnp:rootdevice"
lw      $gp, 0x4D8+var_4C0($sp)
move    $a3, $s0
move    $a0, $s3
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a2, 0x14
lw      $gp, 0x4D8+var_4C0($sp)
addiu   $a3, $s1, (aUpnpRootdevice - 0x410000)  # "upnp:rootdevice"
li      $a1, 1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a2, 0x12
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a0, $s3
lw      $gp, 0x4D8+var_4C0($sp)
lui     $s1, 0x42
lw      $v0, g_pstUPnPStack
la      $t9, inet_addr
lui     $a0, 0x41
lw      $s0, 0xC($v0)
jalr    $t9 ; inet_addr
la      $a0, a239255255250  # "239.255.255.250"
lw      $v1, g_pstUPnPStack
lw      $gp, 0x4D8+var_4C0($sp)
sw      $v0, 0x24($s0)
lw      $v1, 0xC($v1)
la      $t9, socket
li      $v0, 0x76C
li      $a0, 2
sw      $v0, 0x28($v1)
li      $a1, 1
jalr    $t9 ; socket
move    $a2, $zero
move    $s4, $v0
li      $v0, 0xFFFFFFFF
lw      $gp, 0x4D8+var_4C0($sp)
bne     $s4, $v0, loc_40C62C
li      $s0, 4
lui     $v0, 0x4009

loc_40C624:
b       loc_40CA1C
ori     $v0, 0xB

loc_40C62C:
la      $t9, setsockopt
move    $a0, $s4
move    $a1, $zero
li      $a2, 0x20
addiu   $a3, $sp, 0x4D8+arg_0
jalr    $t9 ; setsockopt
sw      $s0, 0x4D8+var_4C8($sp)
lw      $gp, 0x4D8+var_4C0($sp)
move    $a0, $s4
move    $a1, $zero
la      $t9, setsockopt
li      $a2, 0x21
addiu   $a3, $sp, 0x4D8+var_4B4
sw      $s0, 0x4D8+var_4C8($sp)
jalr    $t9 ; setsockopt
sw      $s0, 0x4D8+var_4B4($sp)
lw      $gp, 0x4D8+var_4C0($sp)
li      $v0, 1
move    $a0, $s4
la      $t9, setsockopt
move    $a1, $zero
li      $a2, 0x22
addiu   $a3, $sp, 0x4D8+var_4B8
sw      $v0, 0x4D8+var_4C8($sp)
jalr    $t9 ; setsockopt
sb      $zero, 0x4D8+var_4B8($sp)
lw      $v0, (g_pstUPnPStack - 0x420000)($s1)
lw      $gp, 0x4D8+var_4C0($sp)
li      $a1, 3
lw      $v0, 0xC($v0)
la      $t9, ATP_HTTP_ClientSendEx
addiu   $s5, $sp, 0x4D8+var_4B0
lw      $v1, 0($v0)
move    $a0, $v0
addiu   $s6, $sp, 0x4D8+var_470
sw      $v1, 0x4D8+var_4B4($sp)
jalr    $t9 ; ATP_HTTP_ClientSendEx
sw      $s4, 0($v0)
lw      $v1, 0x6840($s2)
lw      $gp, 0x4D8+var_4C0($sp)
lw      $s2, 0($v1)
b       loc_40C848
addiu   $fp, $sp, 0x2A8

loc_40C6D8:
jalr    $t9 ; UpnpIsDeviceValid
nop
li      $v1, 1
lw      $gp, 0x4D8+var_4C0($sp)
bne     $v0, $v1, loc_40C818
lui     $v1, 0x42
lw      $v0, g_pstUPnPStack
la      $t9, UpnpGetDeviceUuid
move    $a1, $s5
lw      $s1, 0xC($v0)
sb      $zero, 0x4D8+var_470($sp)
lw      $a0, 0xC($s2)
li      $a2, 0x40
jalr    $t9 ; UpnpGetDeviceUuid
move    $a3, $s7
lw      $gp, 0x4D8+var_4C0($sp)
addiu   $s0, $s1, 0x40
move    $a0, $s0
la      $t9, ATP_HTTP_PacketSetHeader
li      $a1, 1
li      $a2, 0x12
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a3, $s5
lw      $gp, 0x4D8+var_4C0($sp)
li      $a2, 0x14
move    $a3, $s5
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s0
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a1, 1
lw      $gp, 0x4D8+var_4C0($sp)
li      $a1, 1
la      $t9, ATP_HTTP_ClientSendEx
nop
jalr    $t9 ; ATP_HTTP_ClientSendEx
move    $a0, $s1
lw      $gp, 0x4D8+var_4C0($sp)
nop
la      $t9, usleep
nop
jalr    $t9 ; usleep
li      $a0, 0x4E20
lw      $gp, 0x4D8+var_4C0($sp)
move    $a0, $s2
move    $a1, $s6
la      $t9, UpnpGetDeviceType
li      $a2, 0x40
jalr    $t9 ; UpnpGetDeviceType
move    $a3, $s7
lw      $gp, 0x4D8+var_4C0($sp)
move    $a0, $s0
li      $a1, 1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a2, 0x12
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a3, $s6
lw      $gp, 0x4D8+var_4C0($sp)
lui     $a2, 0x41
move    $a0, $fp
la      $t9, snprintf
li      $a1, 0x200
la      $a2, aSS         # "%s::%s"
move    $a3, $s5
jalr    $t9 ; snprintf
sw      $s6, 0x4D8+var_4C8($sp)
lw      $gp, 0x4D8+var_4C0($sp)
move    $a0, $s0
li      $a2, 0x14
la      $t9, ATP_HTTP_PacketSetHeader
move    $a3, $fp
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a1, 1
lw      $gp, 0x4D8+var_4C0($sp)
move    $a0, $s1
la      $t9, ATP_HTTP_ClientSendEx
nop
jalr    $t9 ; ATP_HTTP_ClientSendEx
li      $a1, 1
lw      $gp, 0x4D8+var_4C0($sp)
nop

loc_40C818:
la      $t9, usleep
nop
jalr    $t9 ; usleep
li      $a0, 0x4E20
lw      $gp, 0x4D8+var_4C0($sp)
nop
la      $t9, device_iterator
nop
jalr    $t9 ; device_iterator
move    $a0, $s2
lw      $gp, 0x4D8+var_4C0($sp)
move    $s2, $v0

loc_40C848:
la      $t9, UpnpIsDeviceValid
move    $a0, $s2
bnez    $s2, loc_40C6D8
move    $a1, $s7
lui     $v0, 0x42
lw      $v1, g_pstUpnpGvarHead
addiu   $v0, $sp, 0x4D8+var_4B0
sw      $v0, 0x4D8+var_30($sp)
lw      $s1, 0($v1)
addiu   $s6, $sp, 0x4D8+var_470
b       loc_40C9D4
addiu   $fp, $sp, 0x2A8

loc_40C878:
la      $t9, UpnpIsDeviceValid
nop
jalr    $t9 ; UpnpIsDeviceValid
move    $a1, $s7
li      $v1, 1
lw      $gp, 0x4D8+var_4C0($sp)
bne     $v0, $v1, loc_40C9A4
lui     $v1, 0x42
lw      $v0, g_pstUPnPStack
la      $t9, UpnpGetDeviceUuid
lw      $a1, 0x4D8+var_30($sp)
lw      $s5, 0xC($v0)
sb      $zero, 0x4D8+var_4B0($sp)
lw      $a0, 0xC($s1)
li      $a2, 0x40
jalr    $t9 ; UpnpGetDeviceUuid
move    $a3, $s7
lw      $gp, 0x4D8+var_4C0($sp)
lw      $s0, 0x1C($s1)
b       loc_40C994
addiu   $s2, $s5, 0x40

loc_40C8CC:
jalr    $t9 ; UpnpIsServiceValid
nop
lw      $gp, 0x4D8+var_4C0($sp)
li      $v1, 1
move    $a0, $s0
la      $t9, UpnpGetServiceType
move    $a1, $s6
li      $a2, 0x40
bne     $v0, $v1, loc_40C97C
move    $a3, $s7
jalr    $t9 ; UpnpGetServiceType
nop
lw      $gp, 0x4D8+var_4C0($sp)
move    $a0, $s2
li      $a1, 1
la      $t9, ATP_HTTP_PacketSetHeader
li      $a2, 0x12
jalr    $t9 ; ATP_HTTP_PacketSetHeader
move    $a3, $s6
lw      $gp, 0x4D8+var_4C0($sp)
lw      $a3, 0x4D8+var_30($sp)
lui     $a2, 0x41
la      $t9, snprintf
move    $a0, $fp
li      $a1, 0x200
la      $a2, aSS         # "%s::%s"
jalr    $t9 ; snprintf
sw      $s6, 0x4D8+var_4C8($sp)
lw      $gp, 0x4D8+var_4C0($sp)
li      $a2, 0x14
move    $a3, $fp
la      $t9, ATP_HTTP_PacketSetHeader
move    $a0, $s2
jalr    $t9 ; ATP_HTTP_PacketSetHeader
li      $a1, 1
lw      $gp, 0x4D8+var_4C0($sp)
move    $a0, $s5
la      $t9, ATP_HTTP_ClientSendEx
nop
jalr    $t9 ; ATP_HTTP_ClientSendEx
li      $a1, 1
lw      $gp, 0x4D8+var_4C0($sp)
bnez    $v0, loc_40C9A4
nop

loc_40C97C:
la      $t9, usleep
nop
jalr    $t9 ; usleep
li      $a0, 0x4E20
lw      $gp, 0x4D8+var_4C0($sp)
lw      $s0, 0x38($s0)

loc_40C994:
la      $t9, UpnpIsServiceValid
move    $a0, $s0
bnez    $s0, loc_40C8CC
move    $a1, $s7

loc_40C9A4:
la      $t9, usleep
nop
jalr    $t9 ; usleep
li      $a0, 0x4E20
lw      $gp, 0x4D8+var_4C0($sp)
nop
la      $t9, device_iterator
nop
jalr    $t9 ; device_iterator
move    $a0, $s1
lw      $gp, 0x4D8+var_4C0($sp)
move    $s1, $v0

loc_40C9D4:
bnez    $s1, loc_40C878
move    $a0, $s1
la      $t9, ATP_HTTP_PacketDestroy
nop
jalr    $t9 ; ATP_HTTP_PacketDestroy
move    $a0, $s3
lw      $v0, g_pstUPnPStack
lw      $gp, 0x4D8+var_4C0($sp)
move    $a0, $s4
lw      $v1, 0xC($v0)
lw      $v0, 0x4D8+var_4B4($sp)
la      $t9, ATP_UTIL_SocketClose
nop
jalr    $t9 ; ATP_UTIL_SocketClose
sw      $v0, 0($v1)
lw      $gp, 0x4D8+var_4C0($sp)
move    $v0, $zero

loc_40CA1C:
lw      $ra, 0x4D8+var_4($sp)
lw      $fp, 0x4D8+var_8($sp)
lw      $s7, 0x4D8+var_C($sp)
lw      $s6, 0x4D8+var_10($sp)
lw      $s5, 0x4D8+var_14($sp)
lw      $s4, 0x4D8+var_18($sp)
lw      $s3, 0x4D8+var_1C($sp)
lw      $s2, 0x4D8+var_20($sp)
lw      $s1, 0x4D8+var_24($sp)
lw      $s0, 0x4D8+var_28($sp)
jr      $ra
addiu   $sp, 0x4D8
 # End of function ATP_UPNP_BroadcastSSDP

lui     $gp, 0x43
addiu   $sp, -0x20
li      $gp, 0x42E470
sw      $ra, 0x1C($sp)
sw      $s0, 0x18($sp)
sw      $gp, 0x10($sp)
andi    $v0, $a0, 2
move    $s0, $a0
beqz    $v0, loc_40CA98
lui     $v1, 0x42
lw      $v1, g_pstUPnPStack
li      $a1, 1
li      $a2, 0x915F
lw      $v0, 0($v1)
lw      $a0, 4($v1)
li      $a3, 1
ori     $v0, 2
b       loc_40CABC
sw      $v0, 0($v1)

loc_40CA98:
lw      $a3, (g_pstUPnPStack - 0x420000)($v1)
li      $v0, 0xFFFFFFFD
move    $a1, $zero
lw      $v1, 0($a3)
lw      $a0, 4($a3)
li      $a2, 0x915F
and     $v1, $v0
sw      $v1, 0($a3)
li      $a3, 1

loc_40CABC:
jal     ATP_UPNP_BroadcastSSDP
nop
lw      $gp, 0x10($sp)
lui     $a0, 3
la      $t9, usleep
nop
jalr    $t9 ; usleep
li      $a0, 0x30D40
andi    $v0, $s0, 4
beqz    $v0, loc_40CB0C
lui     $v1, 0x42
lw      $v1, g_pstUPnPStack
li      $a1, 1
li      $a2, 0x915F
lw      $v0, 0($v1)
lw      $a0, 4($v1)
move    $a3, $zero
ori     $v0, 4
b       loc_40CB30
sw      $v0, 0($v1)

loc_40CB0C:
lw      $a3, (g_pstUPnPStack - 0x420000)($v1)
li      $v0, 0xFFFFFFFB
move    $a1, $zero
lw      $v1, 0($a3)
lw      $a0, 4($a3)
li      $a2, 0x915F
and     $v1, $v0
sw      $v1, 0($a3)
move    $a3, $zero

loc_40CB30:
jal     ATP_UPNP_BroadcastSSDP
nop
lw      $ra, 0x1C($sp)
lw      $gp, 0x10($sp)
move    $v0, $zero
lw      $s0, 0x18($sp)
jr      $ra
addiu   $sp, 0x20



.globl ATP_UPNP_ForceBroadcast
ATP_UPNP_ForceBroadcast:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
sltiu   $v0, $a0, 2
move    $s0, $a0
beqz    $v0, loc_40CC04
lui     $v1, 0x4009
lui     $v0, 0x42
lw      $v1, g_pstUPnPStack
nop
lw      $v0, 0($v1)
nop
andi    $v0, 4
beqz    $v0, loc_40CBB8
lui     $s1, 0x42
lw      $a0, 4($v1)
move    $a1, $s0
li      $a2, 0x915F
jal     ATP_UPNP_BroadcastSSDP
move    $a3, $zero
lw      $gp, 0x28+var_18($sp)
lui     $s1, 0x42

loc_40CBB8:
lw      $v0, (g_pstUPnPStack - 0x420000)($s1)
nop
lw      $v0, 0($v0)
nop
andi    $v0, 2
beqz    $v0, loc_40CC04
move    $v1, $zero
la      $t9, usleep
lui     $a0, 7
jalr    $t9 ; usleep
li      $a0, 0x7A120
lw      $v0, (g_pstUPnPStack - 0x420000)($s1)
move    $a1, $s0
li      $a2, 0x915F
lw      $a0, 4($v0)
jal     ATP_UPNP_BroadcastSSDP
li      $a3, 1
lw      $gp, 0x28+var_18($sp)
move    $v1, $zero

loc_40CC04:
lw      $ra, 0x28+var_4($sp)
move    $v0, $v1
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function ATP_UPNP_ForceBroadcast

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x24($sp)
sw      $s1, 0x20($sp)
sw      $s0, 0x1C($sp)
sw      $gp, 0x10($sp)
lui     $s0, 0x42
lw      $v0, g_pstUPnPStack
nop
lw      $v0, 4($v0)
nop
beq     $v0, $a0, loc_40CCB4
move    $s1, $a0
jal     ATP_UPNP_ForceBroadcast
move    $a0, $zero
lw      $gp, 0x10($sp)
lw      $v0, g_pstUPnPStack
lui     $a0, 1
la      $t9, usleep
li      $a0, 0x186A0
jalr    $t9 ; usleep
sw      $s1, 4($v0)
lw      $gp, 0x10($sp)
nop
la      $t9, ATP_UPNP_RefreshDeivce
nop
jalr    $t9 ; ATP_UPNP_RefreshDeivce
li      $a0, 1
lw      $gp, 0x10($sp)
nop
la      $t9, ATP_UPNP_RefreshDeivce
nop
jalr    $t9 ; ATP_UPNP_RefreshDeivce
move    $a0, $zero
jal     ATP_UPNP_ForceBroadcast
li      $a0, 1
lw      $gp, 0x10($sp)

loc_40CCB4:
lw      $ra, 0x24($sp)
move    $v0, $zero
lw      $s1, 0x20($sp)
lw      $s0, 0x1C($sp)
jr      $ra
addiu   $sp, 0x28
.align 4
beqz    $a0, locret_40CD00
li      $v1, 1

loc_40CCD8:
lw      $v0, 0xC($a0)
nop
bne     $v0, $v1, loc_40CCF0
li      $v0, 1
jr      $ra
nop

loc_40CCF0:
lw      $a0, 0x10($a0)
nop
bnez    $a0, loc_40CCD8
nop

locret_40CD00:
jr      $ra
move    $v0, $zero



.globl device_iterator
device_iterator:
lui     $gp, 0x43
bnez    $a0, loc_40CD30
li      $gp, 0x42E470
la      $v0, g_pstUpnpGvarHead
nop
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $v0, 0($v0)
jr      $ra
nop

loc_40CD30:
lw      $v0, 0x28($a0)
nop
bnez    $v0, locret_40CD60
nop

loc_40CD40:
lw      $v0, 0x24($a0)
nop
bnez    $v0, locret_40CD60
nop
lw      $v0, 0x2C($a0)
nop
bnez    $v0, loc_40CD40
move    $a0, $v0

locret_40CD60:
jr      $ra
nop
 # End of function device_iterator




.globl UpnpIsServiceValid
UpnpIsServiceValid:
beqz    $a0, locret_40CD88
move    $v0, $zero
xori    $v0, $a1, 1
lw      $v1, 0x14($a0)
sltu    $v0, $zero, $v0
addiu   $v0, 1
and     $v0, $v1
sltu    $v0, $zero, $v0

locret_40CD88:
jr      $ra
nop
 # End of function UpnpIsServiceValid




.globl UpnpIsDeviceValid
UpnpIsDeviceValid:
beqz    $a0, locret_40CDB0
move    $v0, $zero
xori    $v0, $a1, 1
lw      $v1, 0x18($a0)
sltu    $v0, $zero, $v0
addiu   $v0, 1
and     $v0, $v1
sltu    $v0, $zero, $v0

locret_40CDB0:
jr      $ra
nop
 # End of function UpnpIsDeviceValid




.globl UpnpFreeGlobalVar
UpnpFreeGlobalVar:
li      $gp, 0x42E470
la      $v0, g_pstUpnpGvarHead
nop
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
jr      $ra
sw      $zero, 0($v0)
 # End of function UpnpFreeGlobalVar




.globl ATP_UPNP_NeedToEvent
ATP_UPNP_NeedToEvent:
beqz    $a0, locret_40CDE8
move    $v0, $zero
lw      $v0, 0x2C($a0)
nop
sltu    $v0, $zero, $v0

locret_40CDE8:
jr      $ra
nop
 # End of function ATP_UPNP_NeedToEvent

beqz    $a0, locret_40CDFC
move    $v0, $zero
lw      $v0, 0x30($a0)

locret_40CDFC:
jr      $ra
nop



sub_40CE04:

var_28= -0x28
var_20= -0x20
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x38
li      $gp, 0x42E470
sw      $ra, 0x38+var_4($sp)
sw      $s3, 0x38+var_8($sp)
sw      $s2, 0x38+var_C($sp)
sw      $s1, 0x38+var_10($sp)
sw      $s0, 0x38+var_14($sp)
sw      $gp, 0x38+var_20($sp)
move    $s0, $a0
move    $s2, $a1
move    $s3, $a2
move    $s1, $a3
beqz    $a0, loc_40CEEC
lui     $v1, 0x4009
lw      $a0, 0x2C($a0)
nop
beqz    $a0, loc_40CE68
nop
lw      $a1, 0($a3)
jal     sub_40CE04
addu    $a1, $s2, $a1
lw      $gp, 0x38+var_20($sp)
bnez    $v0, loc_40CEEC
move    $v1, $v0

loc_40CE68:
lw      $v0, 0($s1)
lw      $v1, 0x10($s0)
lw      $a3, 0x14($s0)
addu    $a0, $s2, $v0
la      $t9, snprintf
beqz    $v1, loc_40CEA0
subu    $s0, $s3, $v0
lui     $a2, 0x41
sw      $v1, 0x38+var_28($sp)
la      $a2, aSD         # "%s.%d."
jalr    $t9 ; snprintf
move    $a1, $s0
b       loc_40CEB0
nop

loc_40CEA0:
la      $a2, aS_0        # "%s."
jalr    $t9 ; snprintf
move    $a1, $s0

loc_40CEB0:
lw      $gp, 0x38+var_20($sp)
bgez    $v0, loc_40CEC8
move    $a0, $v0
lui     $v0, 0x4009
b       loc_40CEEC
ori     $v1, $v0, 0xB

loc_40CEC8:
sltu    $v0, $s0
bnez    $v0, loc_40CEDC
lui     $v0, 0x4009
b       loc_40CEEC
ori     $v1, $v0, 2

loc_40CEDC:
lw      $v0, 0($s1)
move    $v1, $zero
addu    $v0, $a0
sw      $v0, 0($s1)

loc_40CEEC:
lw      $ra, 0x38+var_4($sp)
move    $v0, $v1
lw      $s3, 0x38+var_8($sp)
lw      $s2, 0x38+var_C($sp)
lw      $s1, 0x38+var_10($sp)
lw      $s0, 0x38+var_14($sp)
jr      $ra
addiu   $sp, 0x38
 # End of function sub_40CE04




sub_40CF0C:

var_18= -0x18
var_10= -0x10
var_8= -8
var_4= -4

addiu   $sp, -0x28
sw      $ra, 0x28+var_4($sp)
sw      $s0, 0x28+var_8($sp)
sw      $gp, 0x28+var_18($sp)
move    $s0, $a3
beqz    $a0, loc_40CF54
lui     $v1, 0x4009
addiu   $a3, $sp, 0x28+var_10
jal     sub_40CE04
sw      $zero, 0x28+var_10($sp)
lw      $gp, 0x28+var_18($sp)
bnez    $v0, loc_40CF54
move    $v1, $v0
beqz    $s0, loc_40CF54
nop
lw      $v0, 0x28+var_10($sp)
nop
sw      $v0, 0($s0)

loc_40CF54:
lw      $ra, 0x28+var_4($sp)
move    $v0, $v1
lw      $s0, 0x28+var_8($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_40CF0C




.globl ATP_TR064_GetDomainNameOfService
ATP_TR064_GetDomainNameOfService:

var_30= -0x30
var_28= -0x28
var_20= -0x20
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x40
li      $gp, 0x42E470
sw      $ra, 0x40+var_4($sp)
sw      $s4, 0x40+var_8($sp)
sw      $s3, 0x40+var_C($sp)
sw      $s2, 0x40+var_10($sp)
sw      $s1, 0x40+var_14($sp)
sw      $s0, 0x40+var_18($sp)
sw      $gp, 0x40+var_28($sp)
move    $s1, $a0
move    $s4, $a3
move    $s3, $a1
beqz    $a0, loc_40D070
move    $s0, $a2
lw      $a0, 0x30($a0)
nop
beqz    $a0, loc_40D070
addiu   $a3, $sp, 0x40+var_20
jal     sub_40CF0C
sw      $zero, 0x40+var_20($sp)
lw      $gp, 0x40+var_28($sp)
bnez    $v0, loc_40D074
move    $s2, $v0
lw      $a0, 0x40+var_20($sp)
lw      $v0, 0x18($s1)
lw      $a3, 0x1C($s1)
beqz    $v0, loc_40D008
subu    $s0, $a0
addu    $a0, $s3, $a0
la      $t9, snprintf
bnez    $a3, loc_40CFF0
lui     $a2, 0x41
lw      $a3, 8($s1)

loc_40CFF0:
sw      $v0, 0x40+var_30($sp)
addiu   $a2, (aSD - 0x410000)  # "%s.%d."
jalr    $t9 ; snprintf
move    $a1, $s0
b       loc_40D028
nop

loc_40D008:
addu    $a0, $s3, $a0
la      $t9, snprintf
bnez    $a3, loc_40D01C
lui     $a2, 0x41
lw      $a3, 8($s1)

loc_40D01C:
addiu   $a2, (aS_0 - 0x410000)  # "%s."
jalr    $t9 ; snprintf
move    $a1, $s0

loc_40D028:
lw      $gp, 0x40+var_28($sp)
bgez    $v0, loc_40D040
move    $v1, $v0
lui     $v0, 0x4009
b       loc_40D074
ori     $s2, $v0, 0xB

loc_40D040:
sltu    $v0, $s0
bnez    $v0, loc_40D054
lui     $v0, 0x4009
b       loc_40D074
ori     $s2, $v0, 2

loc_40D054:
beqz    $s4, loc_40D074
nop
lw      $v0, 0x40+var_20($sp)
nop
addu    $v0, $v1, $v0
b       loc_40D074
sw      $v0, 0($s4)

loc_40D070:
lui     $s2, 0x4009

loc_40D074:
lw      $ra, 0x40+var_4($sp)
move    $v0, $s2
lw      $s4, 0x40+var_8($sp)
lw      $s3, 0x40+var_C($sp)
lw      $s2, 0x40+var_10($sp)
lw      $s1, 0x40+var_14($sp)
lw      $s0, 0x40+var_18($sp)
jr      $ra
addiu   $sp, 0x40
 # End of function ATP_TR064_GetDomainNameOfService




sub_40D098:

var_18= -0x18
var_14= -0x14
var_10= -0x10
var_4= -4
arg_10=  0x10

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $gp, 0x28+var_10($sp)
beqz    $a1, loc_40D164
lui     $v0, 0x4009
beqz    $a0, loc_40D160
li      $v0, 1
beq     $a3, $v0, loc_40D0DC
sb      $zero, 0($a1)
li      $v0, 2
bne     $a3, $v0, loc_40D0F8
nop
lui     $v0, 0x41
b       loc_40D128
addiu   $a3, $v0, (aEvt - 0x410000)  # "/evt/"

loc_40D0DC:
lw      $v0, 0x28+arg_10($sp)
nop
bnez    $v0, loc_40D120
nop
lui     $v0, 0x41
b       loc_40D128
addiu   $a3, $v0, (aCtrlt - 0x410000)  # "/ctrlt/"

loc_40D0F8:
lw      $v0, 0x10($a0)
lui     $a3, 0x41
move    $a0, $a1
move    $a1, $a2
lui     $a2, 0x41
la      $t9, snprintf
sw      $v0, 0x28+var_18($sp)
la      $a2, (aNotifySHttp11H+0x8C)  # "%s%s"
b       loc_40D14C
la      $a3, aDesc       # "/desc/"

loc_40D120:
lui     $v0, 0x41
addiu   $a3, $v0, (aCtrlu - 0x410000)  # "/ctrlu/"

loc_40D128:
lw      $v1, 0xC($a0)
lw      $v0, 8($a0)
la      $t9, snprintf
move    $a0, $a1
move    $a1, $a2
lui     $a2, 0x41
sw      $v0, 0x28+var_18($sp)
sw      $v1, 0x28+var_14($sp)
la      $a2, aSSD        # "%s%s_%d"

loc_40D14C:
jalr    $t9 ; snprintf
nop
lw      $gp, 0x28+var_10($sp)
b       loc_40D164
move    $v0, $zero

loc_40D160:
lui     $v0, 0x4009

loc_40D164:
lw      $ra, 0x28+var_4($sp)
nop
jr      $ra
addiu   $sp, 0x28
 # End of function sub_40D098




.globl UpnpGetServiceType
UpnpGetServiceType:

var_18= -0x18
var_14= -0x14
var_10= -0x10
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $gp, 0x28+var_10($sp)
beqz    $a1, loc_40D204
move    $v1, $a3
beqz    $a0, loc_40D208
lui     $v0, 0x4009
sb      $zero, 0($a1)
lw      $a3, 0($a0)
nop
bnez    $a3, loc_40D1CC
nop
li      $v0, 1
beq     $v1, $v0, loc_40D1C4
nop
lui     $v0, 0x41
b       loc_40D1CC
addiu   $a3, $v0, (aDslforumOrg - 0x410000)  # "dslforum-org"

loc_40D1C4:
lui     $v0, 0x41
addiu   $a3, $v0, (aSchemasUpnpOrg - 0x410000)  # "schemas-upnp-org"

loc_40D1CC:
lw      $v1, 4($a0)
la      $t9, snprintf
la      $v0, aService    # "service"
move    $a0, $a1
move    $a1, $a2
lui     $a2, 0x41
sw      $v0, 0x28+var_18($sp)
sw      $v1, 0x28+var_14($sp)
jalr    $t9 ; snprintf
la      $a2, aUrnSSS     # "urn:%s:%s:%s"
lw      $gp, 0x28+var_10($sp)
b       loc_40D208
move    $v0, $zero

loc_40D204:
lui     $v0, 0x4009

loc_40D208:
lw      $ra, 0x28+var_4($sp)
nop
jr      $ra
addiu   $sp, 0x28
 # End of function UpnpGetServiceType




.globl UpnpGetDeviceType
UpnpGetDeviceType:

var_18= -0x18
var_14= -0x14
var_10= -0x10
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $gp, 0x28+var_10($sp)
beqz    $a1, loc_40D2A8
move    $v1, $a3
beqz    $a0, loc_40D2AC
lui     $v0, 0x4009
sb      $zero, 0($a1)
lw      $a3, 0($a0)
nop
bnez    $a3, loc_40D270
nop
li      $v0, 1
beq     $v1, $v0, loc_40D268
nop
lui     $v0, 0x41
b       loc_40D270
addiu   $a3, $v0, (aDslforumOrg - 0x410000)  # "dslforum-org"

loc_40D268:
lui     $v0, 0x41
addiu   $a3, $v0, (aSchemasUpnpOrg - 0x410000)  # "schemas-upnp-org"

loc_40D270:
lw      $v1, 4($a0)
la      $t9, snprintf
la      $v0, aDevice     # "device"
move    $a0, $a1
move    $a1, $a2
lui     $a2, 0x41
sw      $v0, 0x28+var_18($sp)
sw      $v1, 0x28+var_14($sp)
jalr    $t9 ; snprintf
la      $a2, aUrnSSS     # "urn:%s:%s:%s"
lw      $gp, 0x28+var_10($sp)
b       loc_40D2AC
move    $v0, $zero

loc_40D2A8:
lui     $v0, 0x4009

loc_40D2AC:
lw      $ra, 0x28+var_4($sp)
nop
jr      $ra
addiu   $sp, 0x28
 # End of function UpnpGetDeviceType




.globl UpnpGetDeviceUuid
UpnpGetDeviceUuid:

var_30= -0x30
var_2C= -0x2C
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_10= -0x10
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x40
li      $gp, 0x42E470
sw      $ra, 0x40+var_4($sp)
sw      $s0, 0x40+var_8($sp)
sw      $gp, 0x40+var_10($sp)
move    $t1, $a1
move    $s0, $a2
beqz    $a1, loc_40D3B8
lui     $v1, 0x4009
li      $v0, 1
andi    $t0, $a0, 0xFF
la      $a2, g_aucMacAddr
la      $t9, snprintf
bne     $a3, $v0, loc_40D344
lui     $t2, 0x41
lbu     $a3, (byte_426805 - 0x426800)($a2)
lbu     $a0, (byte_426802 - 0x426800)($a2)
lbu     $v0, (g_aucMacAddr - 0x426800)($a2)
lbu     $v1, (byte_426801 - 0x426800)($a2)
lbu     $a1, (byte_426803 - 0x426800)($a2)
lbu     $a2, (byte_426804 - 0x426800)($a2)
sw      $a3, 0x40+var_18($sp)
lui     $a3, 0x41
sw      $a0, 0x40+var_24($sp)
sw      $a2, 0x40+var_1C($sp)
sw      $t0, 0x40+var_30($sp)
sw      $v0, 0x40+var_2C($sp)
sw      $v1, 0x40+var_28($sp)
sw      $a1, 0x40+var_20($sp)
move    $a0, $t1
addiu   $a2, $t2, (aUuidS22x22x22x - 0x410000)  # "uuid:%s%2.2x-%2.2x%2.2x%2.2x%2.2x%2.2x%"...
b       loc_40D388
la      $a3, a00e0fc37252528  # "00e0fc37-2525-2828-25"

loc_40D344:
lbu     $a3, (byte_426805 - 0x426800)($a2)
lbu     $a0, (byte_426802 - 0x426800)($a2)
lbu     $v0, (g_aucMacAddr - 0x426800)($a2)
lbu     $v1, (byte_426801 - 0x426800)($a2)
lbu     $a1, (byte_426803 - 0x426800)($a2)
lbu     $a2, (byte_426804 - 0x426800)($a2)
sw      $a3, 0x40+var_18($sp)
lui     $a3, 0x41
sw      $a0, 0x40+var_24($sp)
sw      $a2, 0x40+var_1C($sp)
sw      $t0, 0x40+var_30($sp)
sw      $v0, 0x40+var_2C($sp)
sw      $v1, 0x40+var_28($sp)
sw      $a1, 0x40+var_20($sp)
move    $a0, $t1
addiu   $a2, $t2, (aUuidS22x22x22x - 0x410000)  # "uuid:%s%2.2x-%2.2x%2.2x%2.2x%2.2x%2.2x%"...
la      $a3, a00e0fc37262628  # "00e0fc37-2626-2828-26"

loc_40D388:
jalr    $t9 ; snprintf
move    $a1, $s0
lw      $gp, 0x40+var_10($sp)
bgez    $v0, loc_40D3A8
sltu    $v0, $s0
lui     $v0, 0x4009
b       loc_40D3B8
ori     $v1, $v0, 0xB

loc_40D3A8:
bnez    $v0, loc_40D3B8
move    $v1, $zero
lui     $v0, 0x4009
ori     $v1, $v0, 2

loc_40D3B8:
lw      $ra, 0x40+var_4($sp)
move    $v0, $v1
lw      $s0, 0x40+var_8($sp)
jr      $ra
addiu   $sp, 0x40
 # End of function UpnpGetDeviceUuid




sub_40D3CC:

var_40= -0x40
var_38= -0x38
var_34= -0x34
var_30= -0x30
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x50
li      $gp, 0x42E470
sw      $ra, 0x50+var_4($sp)
sw      $s4, 0x50+var_8($sp)
sw      $s3, 0x50+var_C($sp)
sw      $s2, 0x50+var_10($sp)
sw      $s1, 0x50+var_14($sp)
sw      $s0, 0x50+var_18($sp)
sw      $gp, 0x50+var_40($sp)
la      $t9, memcpy
addiu   $s2, $sp, 0x50+var_30
move    $s4, $a1
lui     $a1, 0x41
move    $s0, $a0
move    $s3, $a2
la      $a1, dword_415D70
move    $a0, $s2
li      $a2, 0x18
jalr    $t9 ; memcpy
move    $s1, $a3
lw      $gp, 0x50+var_40($sp)
beqz    $s0, loc_40D50C
nop
beqz    $s4, loc_40D50C
nop
beqz    $s1, loc_40D50C
move    $a0, $s0
la      $t9, ATP_DBDomainToKeyList
move    $a1, $s2
jalr    $t9 ; ATP_DBDomainToKeyList
addiu   $a2, $sp, 0x50+var_38
lw      $gp, 0x50+var_40($sp)
beqz    $v0, loc_40D468
move    $s0, $v0
li      $v0, 0xFFFFFFFE
sw      $v0, 0($s1)
b       loc_40D510
move    $s0, $zero

loc_40D468:
lw      $a1, 0x50+var_38($sp)
nop
bltz    $a1, loc_40D480
li      $v0, 0xFFFFFFFF
b       loc_40D510
sw      $v0, 0($s1)

loc_40D480:
la      $t9, ATP_CFMA_GetObjInstNum
move    $a0, $s2
addiu   $a2, $sp, 0x50+var_34
jalr    $t9 ; ATP_CFMA_GetObjInstNum
move    $a3, $s1
lw      $gp, 0x50+var_40($sp)
bnez    $v0, loc_40D510
move    $s0, $v0
lw      $v0, 0($s1)
nop
sltu    $v0, $s3, $v0
beqz    $v0, loc_40D4B8
nop
sw      $s3, 0($s1)

loc_40D4B8:
lw      $a0, 0x50+var_34($sp)
move    $a1, $s4
move    $a2, $zero
b       loc_40D4DC
move    $v1, $a0

loc_40D4CC:
lw      $v0, 0($v1)
addiu   $v1, 4
sw      $v0, 0($a1)
addiu   $a1, 4

loc_40D4DC:
lw      $v0, 0($s1)
nop
sltu    $v0, $a2, $v0
bnez    $v0, loc_40D4CC
addiu   $a2, 1
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x50+var_40($sp)
b       loc_40D510
nop

loc_40D50C:
lui     $s0, 0x4009

loc_40D510:
lw      $ra, 0x50+var_4($sp)
move    $v0, $s0
lw      $s4, 0x50+var_8($sp)
lw      $s3, 0x50+var_C($sp)
lw      $s2, 0x50+var_10($sp)
lw      $s1, 0x50+var_14($sp)
lw      $s0, 0x50+var_18($sp)
jr      $ra
addiu   $sp, 0x50
 # End of function sub_40D3CC




sub_40D534:

var_18= -0x18
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s2, 0x28+var_8($sp)
sw      $s1, 0x28+var_C($sp)
sw      $s0, 0x28+var_10($sp)
sw      $gp, 0x28+var_18($sp)
la      $s2, g_pstUpnpGvarHead
move    $s1, $a0
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($s2)
nop
lw      $s0, 8($v0)
beqz    $s1, loc_40D5D4
lui     $a0, 0x4009
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 8
lw      $gp, 0x28+var_18($sp)
bnez    $v0, loc_40D598
move    $v1, $v0
lui     $v0, 0x4009
b       loc_40D5D4
ori     $a0, $v0, 2

loc_40D598:
sw      $zero, 0($v0)
bnez    $s0, loc_40D5B8
sw      $zero, 4($v0)
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($s2)
sw      $s1, 0($v1)
move    $a0, $zero
b       loc_40D5D4
sw      $v1, 8($v0)

loc_40D5B8:
move    $v0, $s0
lw      $s0, 4($s0)
nop
bnez    $s0, loc_40D5B8
move    $a0, $zero
sw      $s1, 0($v1)
sw      $v1, 4($v0)

loc_40D5D4:
lw      $ra, 0x28+var_4($sp)
move    $v0, $a0
lw      $s2, 0x28+var_8($sp)
lw      $s1, 0x28+var_C($sp)
lw      $s0, 0x28+var_10($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_40D534




sub_40D5F0:

var_18= -0x18
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s2, 0x28+var_8($sp)
sw      $s1, 0x28+var_C($sp)
sw      $s0, 0x28+var_10($sp)
sw      $gp, 0x28+var_18($sp)
la      $s2, g_pstUpnpGvarHead
move    $s1, $a0
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($s2)
nop
lw      $s0, 4($v0)
beqz    $s1, loc_40D690
lui     $a0, 0x4009
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 8
lw      $gp, 0x28+var_18($sp)
bnez    $v0, loc_40D654
move    $v1, $v0
lui     $v0, 0x4009
b       loc_40D690
ori     $a0, $v0, 2

loc_40D654:
sw      $zero, 0($v0)
bnez    $s0, loc_40D674
sw      $zero, 4($v0)
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($s2)
sw      $s1, 0($v1)
move    $a0, $zero
b       loc_40D690
sw      $v1, 4($v0)

loc_40D674:
move    $v0, $s0
lw      $s0, 4($s0)
nop
bnez    $s0, loc_40D674
move    $a0, $zero
sw      $s1, 0($v1)
sw      $v1, 4($v0)

loc_40D690:
lw      $ra, 0x28+var_4($sp)
move    $v0, $a0
lw      $s2, 0x28+var_8($sp)
lw      $s1, 0x28+var_C($sp)
lw      $s0, 0x28+var_10($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_40D5F0




.globl upnpIsRootDevice
upnpIsRootDevice:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
la      $t9, strcmp
move    $s1, $a0
lui     $a0, 0x41
move    $s0, $a1
la      $a0, aUpnpRootdevice  # "upnp:rootdevice"
jalr    $t9 ; strcmp
move    $a1, $s1
lw      $gp, 0x28+var_18($sp)
beqz    $v0, loc_40D70C
lui     $a0, 0x41
la      $t9, strcmp
la      $a0, aUpnpAll    # "upnp:all"
jalr    $t9 ; strcmp
move    $a1, $s1
lw      $gp, 0x28+var_18($sp)
bnez    $v0, loc_40D730
nop

loc_40D70C:
beqz    $s0, loc_40D740
li      $v1, 1
la      $v0, g_pstUpnpGvarHead
li      $v1, 1
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $v0, 0($v0)
b       loc_40D740
sw      $v0, 0($s0)

loc_40D730:
beqz    $s0, loc_40D740
move    $v1, $zero
sw      $zero, 0($s0)
move    $v1, $zero

loc_40D740:
lw      $ra, 0x28+var_4($sp)
move    $v0, $v1
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function upnpIsRootDevice




.globl upnpIsSsdpAll
upnpIsSsdpAll:

var_10= -0x10
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x20
li      $gp, 0x42E470
sw      $ra, 0x20+var_4($sp)
sw      $gp, 0x20+var_10($sp)
la      $t9, strcmp
move    $a1, $a0
lui     $a0, 0x41
jalr    $t9 ; strcmp
la      $a0, aSsdpAll    # "ssdp:all"
lw      $ra, 0x20+var_4($sp)
lw      $gp, 0x20+var_10($sp)
sltiu   $v0, 1
jr      $ra
addiu   $sp, 0x20
 # End of function upnpIsSsdpAll




.globl UPnPGetActionByName
UPnPGetActionByName:

var_30= -0x30
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x40
li      $gp, 0x42E470
sw      $ra, 0x40+var_4($sp)
sw      $s7, 0x40+var_8($sp)
sw      $s6, 0x40+var_C($sp)
sw      $s5, 0x40+var_10($sp)
sw      $s4, 0x40+var_14($sp)
sw      $s3, 0x40+var_18($sp)
sw      $s2, 0x40+var_1C($sp)
sw      $s1, 0x40+var_20($sp)
sw      $s0, 0x40+var_24($sp)
sw      $gp, 0x40+var_30($sp)
move    $s4, $a1
move    $s7, $a2
beqz    $a0, loc_40D8D8
move    $s3, $a3
beqz    $a1, loc_40D8DC
move    $v0, $zero
beqz    $a3, loc_40D7EC
nop
sw      $zero, 0($a3)

loc_40D7EC:
lw      $s0, 0x24($a0)
la      $s5, g_astActionArray
b       loc_40D8D0
lui     $s6, 0x4000

loc_40D7FC:
lw      $s1, 4($s0)
la      $t9, strcmp
and     $v0, $s1, $s6
bnez    $v0, loc_40D8A0
nop
lw      $s2, 0($s0)
nop
sll     $v0, $s2, 4
addu    $s1, $s5, $v0
lw      $a0, 0($s1)
jalr    $t9 ; strcmp
nop
lw      $gp, 0x40+var_30($sp)
nop
la      $t9, strcmp
bnez    $v0, loc_40D8C8
move    $a1, $s7
lw      $v0, 4($s1)
nop
beqz    $v0, loc_40D864
move    $a0, $v0
jalr    $t9 ; strcmp
nop
lw      $gp, 0x40+var_30($sp)
bnez    $v0, loc_40D8C8
nop

loc_40D864:
beqz    $s3, loc_40D884
nop
la      $v1, g_astActionArray
sll     $v0, $s2, 4
addu    $v1, $v0
lw      $v0, 0xC($v1)
nop
sw      $v0, 0($s3)

loc_40D884:
lw      $v1, 0($s0)
la      $v0, g_astActionArray
sll     $v1, 4
addu    $v0, $v1
lw      $v0, 8($v0)
b       loc_40D8DC
nop

loc_40D8A0:
lw      $a0, 0($s0)
jalr    $t9 ; strcmp
move    $a1, $s4
lw      $gp, 0x40+var_30($sp)
bnez    $v0, loc_40D8C8
nop
beqz    $s3, loc_40D8D8
nop
b       loc_40D8DC
sw      $s1, 0($s3)

loc_40D8C8:
lw      $s0, 0x10($s0)
nop

loc_40D8D0:
bnez    $s0, loc_40D7FC
move    $a1, $s4

loc_40D8D8:
move    $v0, $zero

loc_40D8DC:
lw      $ra, 0x40+var_4($sp)
lw      $s7, 0x40+var_8($sp)
lw      $s6, 0x40+var_C($sp)
lw      $s5, 0x40+var_10($sp)
lw      $s4, 0x40+var_14($sp)
lw      $s3, 0x40+var_18($sp)
lw      $s2, 0x40+var_1C($sp)
lw      $s1, 0x40+var_20($sp)
lw      $s0, 0x40+var_24($sp)
jr      $ra
addiu   $sp, 0x40
 # End of function UPnPGetActionByName




.globl UpnpGetActListByActName
UpnpGetActListByActName:

var_20= -0x20
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x30+var_4($sp)
sw      $s3, 0x30+var_8($sp)
sw      $s2, 0x30+var_C($sp)
sw      $s1, 0x30+var_10($sp)
sw      $s0, 0x30+var_14($sp)
sw      $gp, 0x30+var_20($sp)
beqz    $a0, loc_40D9B4
move    $s1, $a1
beqz    $a1, loc_40D9B4
lui     $s3, 0x4000
lw      $s0, 0x24($a0)
la      $s2, g_astActionArray
b       loc_40D9A4
move    $a1, $s1

loc_40D94C:
lw      $v0, 4($s0)
la      $t9, strcmp
and     $v0, $s3
beqz    $v0, loc_40D974
nop
lw      $a0, 0($s0)
jalr    $t9 ; strcmp
nop
b       loc_40D990
nop

loc_40D974:
lw      $v0, 0($s0)
nop
sll     $v0, 4
addu    $v0, $s2, $v0
lw      $a1, 0($v0)
jalr    $t9 ; strcmp
nop

loc_40D990:
lw      $gp, 0x30+var_20($sp)
beqz    $v0, loc_40D9B8
move    $a1, $s1
lw      $s0, 0x10($s0)
nop

loc_40D9A4:
bnez    $s0, loc_40D94C
move    $a0, $s1
b       loc_40D9B8
nop

loc_40D9B4:
move    $s0, $zero

loc_40D9B8:
lw      $ra, 0x30+var_4($sp)
move    $v0, $s0
lw      $s3, 0x30+var_8($sp)
lw      $s2, 0x30+var_C($sp)
lw      $s1, 0x30+var_10($sp)
lw      $s0, 0x30+var_14($sp)
jr      $ra
addiu   $sp, 0x30
 # End of function UpnpGetActListByActName




sub_40D9D8:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
beqz    $a0, loc_40DA48
move    $s1, $a1
beqz    $a1, loc_40DA4C
move    $s0, $zero
move    $s0, $a0

loc_40DA08:
lw      $v0, 0($s0)
la      $t9, strcmp
move    $a1, $s1
beqz    $v0, loc_40DA30
move    $a0, $v0
jalr    $t9 ; strcmp
nop
lw      $gp, 0x28+var_18($sp)
beqz    $v0, loc_40DA4C
nop

loc_40DA30:
lw      $s0, 0x10($s0)
nop
bnez    $s0, loc_40DA08
nop
b       loc_40DA4C
nop

loc_40DA48:
move    $s0, $zero

loc_40DA4C:
lw      $ra, 0x28+var_4($sp)
move    $v0, $s0
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_40D9D8




sub_40DA64:

var_330= -0x330
var_328= -0x328
var_320= -0x320
var_31C= -0x31C
var_318= -0x318
var_218= -0x218
var_118= -0x118
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x340
li      $gp, 0x42E470
sw      $ra, 0x340+var_4($sp)
sw      $s3, 0x340+var_8($sp)
sw      $s2, 0x340+var_C($sp)
sw      $s1, 0x340+var_10($sp)
sw      $s0, 0x340+var_14($sp)
sw      $gp, 0x340+var_328($sp)
la      $t9, memset
addiu   $s2, $sp, 0x340+var_318
move    $s0, $a0
move    $a1, $zero
move    $a0, $s2
li      $a2, 0x100
sw      $zero, 0x340+var_320($sp)
jalr    $t9 ; memset
sw      $zero, 0x340+var_31C($sp)
lw      $gp, 0x340+var_328($sp)
addiu   $s3, $sp, 0x340+var_218
move    $a0, $s3
la      $t9, memset
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x100
lw      $gp, 0x340+var_328($sp)
addiu   $s1, $sp, 0x340+var_118
move    $a0, $s1
la      $t9, memset
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x100
move    $a0, $s0
move    $a1, $s2
li      $a2, 0x100
jal     ATP_TR064_GetDomainNameOfService
move    $a3, $zero
lw      $gp, 0x340+var_328($sp)
bnez    $v0, loc_40DBC0
move    $v0, $zero
la      $t9, snprintf
la      $v0, aEnable     # "Enable"
lui     $s0, 0x41
move    $a0, $s1
li      $a1, 0x100
addiu   $a2, $s0, (aNotifySHttp11H+0x8C - 0x410000)  # "%s%s"
move    $a3, $s2
jalr    $t9 ; snprintf
sw      $v0, 0x340+var_330($sp)
lw      $gp, 0x340+var_328($sp)
move    $a0, $s1
addiu   $a1, $sp, 0x340+var_320
la      $t9, ATP_DBGetParaByName
nop
jalr    $t9 ; ATP_DBGetParaByName
li      $a2, 4
lw      $gp, 0x340+var_328($sp)
bnez    $v0, loc_40DBC0
move    $v0, $zero
lw      $v0, 0x340+var_320($sp)
nop
beqz    $v0, loc_40DBC0
move    $v0, $zero
la      $t9, snprintf
la      $v0, aNatenabled  # "NATEnabled"
addiu   $a2, $s0, (aNotifySHttp11H+0x8C - 0x410000)  # "%s%s"
move    $a3, $s2
move    $a0, $s3
li      $a1, 0x100
jalr    $t9 ; snprintf
sw      $v0, 0x340+var_330($sp)
lw      $gp, 0x340+var_328($sp)
move    $a0, $s3
addiu   $a1, $sp, 0x340+var_31C
la      $t9, ATP_DBGetParaByName
nop
jalr    $t9 ; ATP_DBGetParaByName
li      $a2, 4
lw      $gp, 0x340+var_328($sp)
bnez    $v0, loc_40DBBC
nop
lw      $v0, 0x340+var_31C($sp)
b       loc_40DBC0
sltu    $v0, $zero, $v0

loc_40DBBC:
move    $v0, $zero

loc_40DBC0:
lw      $ra, 0x340+var_4($sp)
lw      $s3, 0x340+var_8($sp)
lw      $s2, 0x340+var_C($sp)
lw      $s1, 0x340+var_10($sp)
lw      $s0, 0x340+var_14($sp)
jr      $ra
addiu   $sp, 0x340
 # End of function sub_40DA64




.globl UpnpGetServiceByUrl
UpnpGetServiceByUrl:

var_68= -0x68
var_60= -0x60
var_58= -0x58
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x78
li      $gp, 0x42E470
sw      $ra, 0x78+var_4($sp)
sw      $s4, 0x78+var_8($sp)
sw      $s3, 0x78+var_C($sp)
sw      $s2, 0x78+var_10($sp)
sw      $s1, 0x78+var_14($sp)
sw      $s0, 0x78+var_18($sp)
sw      $gp, 0x78+var_60($sp)
move    $s0, $a0
beqz    $a0, loc_40DD60
move    $s1, $a1
la      $t9, strncmp
la      $a1, aCtrlt      # "/ctrlt/"
jalr    $t9 ; strncmp
li      $a2, 7
lw      $gp, 0x78+var_60($sp)
bnez    $v0, loc_40DC40
lui     $a1, 0x41
beqz    $s1, loc_40DC94
addiu   $s2, $s0, 7
b       loc_40DC94
sw      $zero, 0($s1)

loc_40DC40:
la      $t9, strncmp
addiu   $a1, (aCtrlu - 0x410000)  # "/ctrlu/"
move    $a0, $s0
jalr    $t9 ; strncmp
li      $a2, 7
lw      $gp, 0x78+var_60($sp)
bnez    $v0, loc_40DC74
lui     $a1, 0x41
beqz    $s1, loc_40DC94
addiu   $s2, $s0, 7
li      $v0, 1
b       loc_40DC94
sw      $v0, 0($s1)

loc_40DC74:
la      $t9, strncmp
addiu   $a1, (aEvt - 0x410000)  # "/evt/"
move    $a0, $s0
jalr    $t9 ; strncmp
li      $a2, 5
lw      $gp, 0x78+var_60($sp)
bnez    $v0, loc_40DD60
addiu   $s2, $s0, 5

loc_40DC94:
beqz    $s2, loc_40DD64
move    $s0, $zero
lui     $v0, 0x41
addiu   $s4, $v0, (aSD_1 - 0x410000)  # "%s_%d"
la      $v0, g_pstUpnpGvarHead
nop
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $s1, 0($v0)
b       loc_40DD58
addiu   $s3, $sp, 0x78+var_58

loc_40DCC0:
lw      $s0, 0x1C($s1)
b       loc_40DD10
nop

loc_40DCCC:
lw      $v0, 8($s0)
nop
beqz    $v0, loc_40DD0C
move    $a3, $v0
lw      $v0, 0xC($s0)
jalr    $t9 ; snprintf
sw      $v0, 0x78+var_68($sp)
lw      $gp, 0x78+var_60($sp)
move    $a0, $s3
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a1, $s2
lw      $gp, 0x78+var_60($sp)
beqz    $v0, loc_40DD64
nop

loc_40DD0C:
lw      $s0, 0x38($s0)

loc_40DD10:
la      $t9, snprintf
move    $a0, $s3
li      $a1, 0x40
bnez    $s0, loc_40DCCC
move    $a2, $s4
lw      $v0, 0x28($s1)
nop
bnez    $v0, loc_40DD54
nop

loc_40DD34:
lw      $v0, 0x24($s1)
nop
bnez    $v0, loc_40DD54
nop
lw      $v0, 0x2C($s1)
nop
bnez    $v0, loc_40DD34
move    $s1, $v0

loc_40DD54:
move    $s1, $v0

loc_40DD58:
bnez    $s1, loc_40DCC0
nop

loc_40DD60:
move    $s0, $zero

loc_40DD64:
lw      $ra, 0x78+var_4($sp)
move    $v0, $s0
lw      $s4, 0x78+var_8($sp)
lw      $s3, 0x78+var_C($sp)
lw      $s2, 0x78+var_10($sp)
lw      $s1, 0x78+var_14($sp)
lw      $s0, 0x78+var_18($sp)
jr      $ra
addiu   $sp, 0x78
 # End of function UpnpGetServiceByUrl




sub_40DD88:

var_340= -0x340
var_338= -0x338
var_330= -0x330
var_32C= -0x32C
var_328= -0x328
var_228= -0x228
var_128= -0x128
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x350
li      $gp, 0x42E470
sw      $ra, 0x350+var_4($sp)
sw      $fp, 0x350+var_8($sp)
sw      $s7, 0x350+var_C($sp)
sw      $s6, 0x350+var_10($sp)
sw      $s5, 0x350+var_14($sp)
sw      $s4, 0x350+var_18($sp)
sw      $s3, 0x350+var_1C($sp)
sw      $s2, 0x350+var_20($sp)
sw      $s1, 0x350+var_24($sp)
sw      $s0, 0x350+var_28($sp)
sw      $gp, 0x350+var_338($sp)
la      $v0, g_pstUpnpGvarHead
addiu   $s3, $sp, 0x350+var_328
addiu   $s5, $sp, 0x350+var_228
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
addiu   $s4, $sp, 0x350+var_128
lw      $s0, 0($v0)
lui     $v0, 0x41
b       loc_40E0DC
addiu   $s6, $v0, (aNotifySHttp11H+0x8C - 0x410000)  # "%s%s"

loc_40DDE4:
la      $t9, strcmp
lw      $a1, 4($s0)
jalr    $t9 ; strcmp
addiu   $a0, (aWanconnectiond - 0x410000)  # "WANConnectionDevice:1"
lw      $gp, 0x350+var_338($sp)
beqz    $v0, loc_40DE38
addiu   $fp, $sp, 0x20
lw      $v0, 0x28($s0)
nop
bnez    $v0, loc_40E0D8
nop

loc_40DE10:
lw      $v0, 0x24($s0)
nop
bnez    $v0, loc_40E0D8
nop
lw      $s0, 0x2C($s0)
nop
bnez    $s0, loc_40DE10
move    $v0, $s0
b       loc_40E0DC
move    $s0, $v0

loc_40DE38:
lw      $s1, 0x1C($s0)
b       loc_40E040
addiu   $s7, $sp, 0x350+var_32C

loc_40DE44:
lw      $s2, 4($s1)
la      $t9, strcmp
addiu   $a0, (aWanpppconnecti - 0x410000)  # "WANPPPConnection:1"
jalr    $t9 ; strcmp
move    $a1, $s2
lw      $gp, 0x350+var_338($sp)
beqz    $v0, loc_40DE80
lui     $a0, 0x41
la      $t9, strcmp
move    $a1, $s2
jalr    $t9 ; strcmp
la      $a0, aWanipconnectio  # "WANIPConnection:1"
lw      $gp, 0x350+var_338($sp)
bnez    $v0, loc_40DFB8
nop

loc_40DE80:
la      $t9, memset
move    $a0, $s3
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x100
lw      $gp, 0x350+var_338($sp)
move    $a0, $s5
move    $a1, $zero
la      $t9, memset
nop
jalr    $t9 ; memset
li      $a2, 0x100
lw      $gp, 0x350+var_338($sp)
move    $a0, $s4
move    $a1, $zero
la      $t9, memset
nop
jalr    $t9 ; memset
li      $a2, 0x100
move    $a0, $s1
move    $a1, $s3
li      $a2, 0x100
jal     ATP_TR064_GetDomainNameOfService
move    $a3, $zero
lw      $gp, 0x350+var_338($sp)
bnez    $v0, loc_40DFB8
nop
la      $t9, snprintf
la      $v0, aEnable     # "Enable"
move    $a0, $s4
li      $a1, 0x100
move    $a2, $s6
move    $a3, $s3
jalr    $t9 ; snprintf
sw      $v0, 0x350+var_340($sp)
lw      $gp, 0x350+var_338($sp)
sw      $zero, 0x350+var_330($sp)
move    $a0, $s4
la      $t9, ATP_DBGetParaByName
move    $a1, $fp
jalr    $t9 ; ATP_DBGetParaByName
li      $a2, 4
lw      $gp, 0x350+var_338($sp)
bnez    $v0, loc_40DFB8
nop
lw      $a1, 0x350+var_330($sp)
nop
beqz    $a1, loc_40DFB8
nop
la      $t9, printf
lui     $a0, 0x41
jalr    $t9 ; printf
la      $a0, aEnableGotValue  # "Enable Got value: %d\n"
lw      $gp, 0x350+var_338($sp)
la      $v0, aNatenabled  # "NATEnabled"
la      $t9, snprintf
move    $a0, $s5
li      $a1, 0x100
move    $a2, $s6
move    $a3, $s3
jalr    $t9 ; snprintf
sw      $v0, 0x350+var_340($sp)
lw      $gp, 0x350+var_338($sp)
sw      $zero, 0x350+var_32C($sp)
move    $a0, $s5
la      $t9, ATP_DBGetParaByName
move    $a1, $s7
jalr    $t9 ; ATP_DBGetParaByName
li      $a2, 4
lw      $gp, 0x350+var_338($sp)
bnez    $v0, loc_40DFB8
nop
lw      $a1, 0x350+var_32C($sp)
nop
bnez    $a1, loc_40DFC4
lui     $a0, 0x41

loc_40DFB8:
lw      $s1, 0x38($s1)
b       loc_40E040
nop

loc_40DFC4:
la      $t9, printf
nop
jalr    $t9 ; printf
addiu   $a0, (aNatenabledGotV - 0x410000)  # "NATEnabled Got value: %d\n\n"
lw      $v1, 0x38($s1)
lw      $gp, 0x350+var_338($sp)
beqz    $v1, loc_40E050
nop
lw      $v0, 0x34($s1)
nop
sw      $v0, 0x34($v1)
lw      $v0, 0x34($s1)
nop
bnez    $v0, loc_40E008
nop
b       loc_40E00C
sw      $v1, 0x1C($s0)

loc_40E008:
sw      $v1, 0x38($v0)

loc_40E00C:
sw      $zero, 0x38($s1)
lw      $v0, 0x1C($s0)
nop
beqz    $v0, loc_40E15C
lui     $a0, 0x41

loc_40E020:
move    $v1, $v0
lw      $v0, 0x38($v0)
nop
bnez    $v0, loc_40E020
nop
sw      $v1, 0x34($s1)
b       loc_40E050
sw      $s1, 0x38($v1)

loc_40E040:
bnez    $s1, loc_40DE44
lui     $a0, 0x41
b       loc_40E178
nop

loc_40E050:
lw      $v1, 0x20($s0)
nop
bnez    $v1, loc_40E090
nop
b       loc_40E0EC
nop

loc_40E068:
lw      $v0, 0x24($s0)
nop
bnez    $v0, loc_40E0D8
nop
lw      $s0, 0x2C($s0)
nop
bnez    $s0, loc_40E068
move    $v0, $s0
b       loc_40E0DC
move    $s0, $v0

loc_40E090:
lw      $v0, 0x24($s0)
nop
sw      $v0, 0x24($v1)
lw      $v0, 0x24($s0)
nop
beqz    $v0, loc_40E0B0
nop
sw      $v1, 0x20($v0)

loc_40E0B0:
lw      $v0, 0x2C($s0)
sw      $zero, 0x20($s0)
lw      $v0, 0x28($v0)
nop
beqz    $v0, loc_40E0CC
sw      $v0, 0x24($s0)
sw      $s0, 0x20($v0)

loc_40E0CC:
lw      $v0, 0x2C($s0)
b       loc_40E0EC
sw      $s0, 0x28($v0)

loc_40E0D8:
move    $s0, $v0

loc_40E0DC:
bnez    $s0, loc_40DDE4
lui     $a0, 0x41
b       loc_40E190
nop

loc_40E0EC:
lw      $v1, 0x2C($s0)
nop
beqz    $v1, loc_40E190
nop
lw      $v0, 0x2C($v1)
nop
beqz    $v0, loc_40E190
nop
lw      $a0, 0x20($v1)
nop
beqz    $a0, loc_40E190
nop
lw      $v0, 0x24($v1)
nop
sw      $v0, 0x24($a0)
lw      $v0, 0x24($v1)
nop
beqz    $v0, loc_40E13C
nop
sw      $a0, 0x20($v0)

loc_40E13C:
lw      $v0, 0x2C($s0)
nop
lw      $v1, 0x2C($v0)
sw      $zero, 0x20($v0)
lw      $a0, 0x28($v1)
sw      $v0, 0x28($v1)
b       loc_40E190
sw      $a0, 0x24($v0)

loc_40E15C:
la      $t9, puts
nop
jalr    $t9 ; puts
addiu   $a0, (aPstlastIsNull - 0x410000)  # "pstLast is null"
lw      $gp, 0x350+var_338($sp)
b       loc_40E050
nop

loc_40E178:
lw      $v0, 0x28($s0)
nop
bnez    $v0, loc_40E0D8
nop
b       loc_40E068
nop

loc_40E190:
lw      $ra, 0x350+var_4($sp)
lw      $fp, 0x350+var_8($sp)
lw      $s7, 0x350+var_C($sp)
lw      $s6, 0x350+var_10($sp)
lw      $s5, 0x350+var_14($sp)
lw      $s4, 0x350+var_18($sp)
lw      $s3, 0x350+var_1C($sp)
lw      $s2, 0x350+var_20($sp)
lw      $s1, 0x350+var_24($sp)
lw      $s0, 0x350+var_28($sp)
jr      $ra
addiu   $sp, 0x350
 # End of function sub_40DD88




.globl ATP_UPNP_AddEvent
ATP_UPNP_AddEvent:

var_20= -0x20
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x30+var_4($sp)
sw      $s4, 0x30+var_8($sp)
sw      $s3, 0x30+var_C($sp)
sw      $s2, 0x30+var_10($sp)
sw      $s1, 0x30+var_14($sp)
sw      $s0, 0x30+var_18($sp)
sw      $gp, 0x30+var_20($sp)
move    $s2, $a1
move    $s1, $a0
move    $s3, $a2
move    $s4, $a3
beqz    $a1, loc_40E2D0
lui     $v0, 0x4009
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0xC
lw      $gp, 0x30+var_20($sp)
beqz    $v0, loc_40E290
move    $s0, $v0
la      $t9, ATP_UPNP_StrDup
sw      $zero, 0($v0)
sw      $zero, 4($v0)
sw      $zero, 8($v0)
jalr    $t9 ; ATP_UPNP_StrDup
move    $a0, $s2
lw      $gp, 0x30+var_20($sp)
beqz    $v0, loc_40E27C
sw      $v0, 0($s0)
beqz    $s3, loc_40E29C
nop
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
move    $a0, $s3
lw      $gp, 0x30+var_20($sp)
bnez    $v0, loc_40E29C
sw      $v0, 4($s0)
la      $t9, ATP_UPNP_Free
lw      $a0, 0($s0)
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x30+var_20($sp)
nop

loc_40E27C:
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
move    $a0, $s0
lw      $gp, 0x30+var_20($sp)

loc_40E290:
lui     $v0, 0x4009
b       loc_40E2D0
li      $v0, 0x40090002

loc_40E29C:
beqz    $s4, loc_40E2A8
nop
sw      $s0, 0($s4)

loc_40E2A8:
bnez    $s1, loc_40E2BC
move    $v0, $zero
b       loc_40E2D0
nop

loc_40E2B8:
addiu   $s1, $v0, 8

loc_40E2BC:
lw      $v0, 0($s1)
nop
bnez    $v0, loc_40E2B8
nop
sw      $s0, 0($s1)

loc_40E2D0:
lw      $ra, 0x30+var_4($sp)
lw      $s4, 0x30+var_8($sp)
lw      $s3, 0x30+var_C($sp)
lw      $s2, 0x30+var_10($sp)
lw      $s1, 0x30+var_14($sp)
lw      $s0, 0x30+var_18($sp)
jr      $ra
addiu   $sp, 0x30
 # End of function ATP_UPNP_AddEvent




.globl ATP_UPNP_FreeEvent
ATP_UPNP_FreeEvent:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
move    $s0, $a0

loc_40E310:
beqz    $s0, loc_40E374
nop
lw      $v0, 0($s0)
la      $t9, ATP_UPNP_Free
lw      $s1, 8($s0)
beqz    $v0, loc_40E338
move    $a0, $v0
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)

loc_40E338:
lw      $v0, 4($s0)
la      $t9, ATP_UPNP_Free
beqz    $v0, loc_40E35C
move    $a0, $v0
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)
nop
la      $t9, ATP_UPNP_Free

loc_40E35C:
move    $a0, $s0
jalr    $t9 ; ATP_UPNP_Free
move    $s0, $s1
lw      $gp, 0x28+var_18($sp)
b       loc_40E310
nop

loc_40E374:
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function ATP_UPNP_FreeEvent




.globl ATP_UPNP_RegAction
ATP_UPNP_RegAction:

var_20= -0x20
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x30+var_4($sp)
sw      $s4, 0x30+var_8($sp)
sw      $s3, 0x30+var_C($sp)
sw      $s2, 0x30+var_10($sp)
sw      $s1, 0x30+var_14($sp)
sw      $s0, 0x30+var_18($sp)
sw      $gp, 0x30+var_20($sp)
beqz    $a0, loc_40E468
move    $s4, $a1
lw      $v0, 0x30($a0)
nop
beqz    $v0, loc_40E46C
lui     $v0, 0x4009
lw      $s0, 0x24($a0)
nop
beqz    $s0, loc_40E46C
sll     $v1, $a1, 4
la      $v0, g_astActionArray
lui     $s3, 0x4000
addu    $v0, $v1
lw      $s2, 0($v0)

loc_40E3E8:
lw      $v0, 4($s0)
nop
and     $v0, $s3
beqz    $v0, loc_40E41C
move    $a1, $s2
lw      $s1, 0($s0)
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a0, $s1
lw      $gp, 0x30+var_20($sp)
beqz    $v0, loc_40E434
nop

loc_40E41C:
lw      $s0, 0x10($s0)
nop
bnez    $s0, loc_40E3E8
lui     $v0, 0x4009
b       loc_40E46C
nop

loc_40E434:
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
move    $a0, $s1
lw      $v1, 4($s0)
li      $v0, 0xBFFFFFFF
and     $v1, $v0
lw      $gp, 0x30+var_20($sp)
sw      $v1, 4($s0)
sw      $s4, 0($s0)
b       loc_40E46C
move    $v0, $zero

loc_40E468:
lui     $v0, 0x4009

loc_40E46C:
lw      $ra, 0x30+var_4($sp)
lw      $s4, 0x30+var_8($sp)
lw      $s3, 0x30+var_C($sp)
lw      $s2, 0x30+var_10($sp)
lw      $s1, 0x30+var_14($sp)
lw      $s0, 0x30+var_18($sp)
jr      $ra
addiu   $sp, 0x30
 # End of function ATP_UPNP_RegAction




sub_40E48C:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
b       loc_40E520
move    $s0, $a0

loc_40E4B0:
lw      $v0, 0($s0)
lw      $s1, 0x10($s0)
beqz    $v0, loc_40E4CC
move    $a0, $v0
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)

loc_40E4CC:
lw      $v0, 4($s0)
la      $t9, ATP_UPNP_Free
beqz    $v0, loc_40E4E8
move    $a0, $v0
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)

loc_40E4E8:
lw      $v0, 8($s0)
la      $t9, ATP_UPNP_Free
beqz    $v0, loc_40E50C
move    $a0, $v0
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)
nop
la      $t9, ATP_UPNP_Free

loc_40E50C:
move    $a0, $s0
jalr    $t9 ; ATP_UPNP_Free
move    $s0, $s1
lw      $gp, 0x28+var_18($sp)
nop

loc_40E520:
la      $t9, ATP_UPNP_Free
bnez    $s0, loc_40E4B0
nop
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_40E48C




.globl UpnpDestroyAllStatVar
UpnpDestroyAllStatVar:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
la      $v0, g_pstUpnpGvarHead
nop
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $s1, 8($v0)
b       loc_40E5A4
nop

loc_40E578:
lw      $a0, 0($s1)
lw      $s0, 4($s1)
jal     sub_40E48C
nop
lw      $gp, 0x28+var_18($sp)
move    $a0, $s1
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
move    $s1, $s0
lw      $gp, 0x28+var_18($sp)

loc_40E5A4:
bnez    $s1, loc_40E578
nop
la      $v0, g_pstUpnpGvarHead
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
lw      $s0, 0x28+var_C($sp)
addiu   $sp, 0x28
jr      $ra
sw      $zero, 8($v0)
 # End of function UpnpDestroyAllStatVar




sub_40E5CC:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
b       loc_40E628
move    $s0, $a0

loc_40E5F0:
lw      $v0, 0($s0)
lw      $s1, 8($s0)
beqz    $v0, loc_40E610
move    $a0, $v0
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)
nop

loc_40E610:
la      $t9, ATP_UPNP_Free
move    $a0, $s0
jalr    $t9 ; ATP_UPNP_Free
move    $s0, $s1
lw      $gp, 0x28+var_18($sp)
nop

loc_40E628:
la      $t9, ATP_UPNP_Free
bnez    $s0, loc_40E5F0
nop
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_40E5CC




sub_40E648:

var_18= -0x18
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s2, 0x28+var_8($sp)
sw      $s1, 0x28+var_C($sp)
sw      $s0, 0x28+var_10($sp)
sw      $gp, 0x28+var_18($sp)
move    $s0, $a0
b       loc_40E6F4
lui     $s2, 0x4000

loc_40E674:
lw      $v0, 4($s0)
lw      $s1, 0x10($s0)
and     $v0, $s2
beqz    $v0, loc_40E6A4
nop
lw      $v0, 0($s0)
la      $t9, ATP_UPNP_Free
beqz    $v0, loc_40E6A4
move    $a0, $v0
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)

loc_40E6A4:
lw      $v0, 8($s0)
nop
beqz    $v0, loc_40E6C0
move    $a0, $v0
jal     sub_40E5CC
nop
lw      $gp, 0x28+var_18($sp)

loc_40E6C0:
lw      $v0, 0xC($s0)
nop
beqz    $v0, loc_40E6E0
move    $a0, $v0
jal     sub_40E5CC
nop
lw      $gp, 0x28+var_18($sp)
nop

loc_40E6E0:
la      $t9, ATP_UPNP_Free
move    $a0, $s0
jalr    $t9 ; ATP_UPNP_Free
move    $s0, $s1
lw      $gp, 0x28+var_18($sp)

loc_40E6F4:
bnez    $s0, loc_40E674
nop
lw      $ra, 0x28+var_4($sp)
lw      $s2, 0x28+var_8($sp)
lw      $s1, 0x28+var_C($sp)
lw      $s0, 0x28+var_10($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_40E648




.globl UpnpDestroyAllActions
UpnpDestroyAllActions:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
la      $v0, g_pstUpnpGvarHead
nop
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $s1, 4($v0)
b       loc_40E778
nop

loc_40E74C:
lw      $a0, 0($s1)
lw      $s0, 4($s1)
jal     sub_40E648
nop
lw      $gp, 0x28+var_18($sp)
move    $a0, $s1
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
move    $s1, $s0
lw      $gp, 0x28+var_18($sp)

loc_40E778:
bnez    $s1, loc_40E74C
nop
la      $v0, g_pstUpnpGvarHead
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
lw      $s0, 0x28+var_C($sp)
addiu   $sp, 0x28
jr      $ra
sw      $zero, 4($v0)
 # End of function UpnpDestroyAllActions




sub_40E7A0:

var_10= -0x10
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x20
li      $gp, 0x42E470
sw      $ra, 0x20+var_4($sp)
sw      $s0, 0x20+var_8($sp)
sw      $gp, 0x20+var_10($sp)
beqz    $a0, loc_40E86C
move    $s0, $a0
lw      $a0, 0($a0)
nop
beqz    $a0, loc_40E7E4
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x20+var_10($sp)

loc_40E7E4:
lw      $a0, 4($s0)
nop
beqz    $a0, loc_40E808
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x20+var_10($sp)

loc_40E808:
lw      $a0, 8($s0)
nop
beqz    $a0, loc_40E82C
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x20+var_10($sp)

loc_40E82C:
lw      $a0, 0x14($s0)
nop
beqz    $a0, loc_40E854
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x20+var_10($sp)
nop

loc_40E854:
la      $t9, ATP_UPNP_Free
move    $a0, $s0
lw      $ra, 0x20+var_4($sp)
lw      $s0, 0x20+var_8($sp)
jr      $t9 ; ATP_UPNP_Free
addiu   $sp, 0x20

loc_40E86C:
lw      $ra, 0x20+var_4($sp)
lw      $s0, 0x20+var_8($sp)
jr      $ra
addiu   $sp, 0x20
 # End of function sub_40E7A0




sub_40E87C:

var_10= -0x10
var_4= -4

addiu   $sp, -0x20
sw      $ra, 0x20+var_4($sp)
sw      $gp, 0x20+var_10($sp)
beqz    $a0, loc_40E8E8
lui     $v0, 0x4009
lw      $a1, 0x2C($a0)
nop
beqz    $a1, loc_40E8E8
nop
lw      $v0, 0x20($a0)
lw      $v1, 0x24($a0)
bnez    $v0, loc_40E8B8
nop
b       loc_40E8BC
sw      $v1, 0x28($a1)

loc_40E8B8:
sw      $v1, 0x24($v0)

loc_40E8BC:
lw      $v1, 0x24($a0)
nop
beqz    $v1, loc_40E8D8
nop
lw      $v0, 0x20($a0)
nop
sw      $v0, 0x20($v1)

loc_40E8D8:
jal     sub_40E7A0
nop
lw      $gp, 0x20+var_10($sp)
move    $v0, $zero

loc_40E8E8:
lw      $ra, 0x20+var_4($sp)
nop
jr      $ra
addiu   $sp, 0x20
 # End of function sub_40E87C




sub_40E8F8:

var_18= -0x18
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x28
li      $gp, 0x42E470
sw      $ra, 0x28+var_4($sp)
sw      $s2, 0x28+var_8($sp)
sw      $s1, 0x28+var_C($sp)
sw      $s0, 0x28+var_10($sp)
sw      $gp, 0x28+var_18($sp)
beqz    $a0, loc_40EA5C
move    $s1, $a0
lw      $a0, 0($a0)
nop
beqz    $a0, loc_40E944
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)

loc_40E944:
lw      $a0, 0x10($s1)
nop
beqz    $a0, loc_40E968
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)

loc_40E968:
lw      $a0, 8($s1)
nop
beqz    $a0, loc_40E98C
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)

loc_40E98C:
lw      $a0, 4($s1)
nop
beqz    $a0, loc_40E9B0
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)

loc_40E9B0:
lw      $a0, 0x1C($s1)
nop
beqz    $a0, loc_40E9D4
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)

loc_40E9D4:
lw      $s0, 0x2C($s1)
b       loc_40EA34
nop

loc_40E9E0:
lw      $v0, 0($s0)
lw      $s2, 0x18($s0)
beqz    $v0, loc_40E9FC
move    $a0, $v0
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)

loc_40E9FC:
lw      $v0, 4($s0)
la      $t9, ATP_UPNP_Free
beqz    $v0, loc_40EA20
move    $a0, $v0
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x28+var_18($sp)
nop
la      $t9, ATP_UPNP_Free

loc_40EA20:
move    $a0, $s0
jalr    $t9 ; ATP_UPNP_Free
move    $s0, $s2
lw      $gp, 0x28+var_18($sp)
nop

loc_40EA34:
la      $t9, ATP_UPNP_Free
bnez    $s0, loc_40E9E0
nop
move    $a0, $s1
lw      $ra, 0x28+var_4($sp)
lw      $s2, 0x28+var_8($sp)
lw      $s1, 0x28+var_C($sp)
lw      $s0, 0x28+var_10($sp)
jr      $t9 ; ATP_UPNP_Free
addiu   $sp, 0x28

loc_40EA5C:
lw      $ra, 0x28+var_4($sp)
lw      $s2, 0x28+var_8($sp)
lw      $s1, 0x28+var_C($sp)
lw      $s0, 0x28+var_10($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_40E8F8




sub_40EA74:

var_10= -0x10
var_4= -4

addiu   $sp, -0x20
sw      $ra, 0x20+var_4($sp)
sw      $gp, 0x20+var_10($sp)
beqz    $a0, loc_40EAE0
lui     $v0, 0x4009
lw      $a1, 0x30($a0)
nop
beqz    $a1, loc_40EAE0
nop
lw      $v0, 0x34($a0)
lw      $v1, 0x38($a0)
bnez    $v0, loc_40EAB0
nop
b       loc_40EAB4
sw      $v1, 0x1C($a1)

loc_40EAB0:
sw      $v1, 0x38($v0)

loc_40EAB4:
lw      $v1, 0x38($a0)
nop
beqz    $v1, loc_40EAD0
nop
lw      $v0, 0x34($a0)
nop
sw      $v0, 0x34($v1)

loc_40EAD0:
jal     sub_40E8F8
nop
lw      $gp, 0x20+var_10($sp)
move    $v0, $zero

loc_40EAE0:
lw      $ra, 0x20+var_4($sp)
nop
jr      $ra
addiu   $sp, 0x20
 # End of function sub_40EA74




sub_40EAF0:

var_430= -0x430
var_428= -0x428
var_328= -0x328
var_228= -0x228
var_128= -0x128
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x440
li      $gp, 0x42E470
sw      $ra, 0x440+var_4($sp)
sw      $fp, 0x440+var_8($sp)
sw      $s7, 0x440+var_C($sp)
sw      $s6, 0x440+var_10($sp)
sw      $s5, 0x440+var_14($sp)
sw      $s4, 0x440+var_18($sp)
sw      $s3, 0x440+var_1C($sp)
sw      $s2, 0x440+var_20($sp)
sw      $s1, 0x440+var_24($sp)
sw      $s0, 0x440+var_28($sp)
sw      $gp, 0x440+var_430($sp)
la      $v0, g_pstUpnpGvarHead
addiu   $s5, $sp, 0x440+var_328
addiu   $s4, $sp, 0x440+var_228
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
addiu   $s3, $sp, 0x440+var_428
addiu   $s2, $sp, 0x440+var_128
lw      $s1, 0($v0)
lui     $v0, 0x41
addiu   $fp, $v0, (aEthernet - 0x410000)  # "Ethernet"
lui     $v0, 0x41
addiu   $s7, $v0, (aWandsllinkconf - 0x410000)  # "WANDSLLinkConfig:1"
lui     $v0, 0x41
b       loc_40ED50
addiu   $s6, $v0, (aWanethernetlin - 0x410000)  # "WANEthernetLinkConfig:1"

loc_40EB60:
lw      $a1, 4($s1)
nop
beqz    $a1, loc_40EB8C
nop
la      $t9, strcmp
lui     $a0, 0x41
jalr    $t9 ; strcmp
la      $a0, aWanconnectiond  # "WANConnectionDevice:1"
lw      $gp, 0x440+var_430($sp)
beqz    $v0, loc_40EBC4
move    $a1, $s5

loc_40EB8C:
lw      $v0, 0x28($s1)
nop
bnez    $v0, loc_40ED4C
nop

loc_40EB9C:
lw      $v0, 0x24($s1)
nop
bnez    $v0, loc_40ED4C
nop
lw      $s1, 0x2C($s1)
nop
bnez    $s1, loc_40EB9C
move    $v0, $s1
b       loc_40ED50
move    $s1, $v0

loc_40EBC4:
sb      $zero, 0x440+var_328($sp)
lw      $a0, 0x2C($s1)
li      $a2, 0x100
jal     sub_40CF0C
move    $a3, $zero
lw      $gp, 0x440+var_430($sp)
bnez    $v0, loc_40ED58
lui     $a2, 0x41
la      $t9, snprintf
move    $a3, $s5
move    $a0, $s4
li      $a1, 0x100
jalr    $t9 ; snprintf
la      $a2, aSwancommoninte  # "%sWANCommonInterfaceConfig.WANAccessTyp"...
lw      $gp, 0x440+var_430($sp)
move    $a0, $s4
move    $a1, $s3
la      $t9, ATP_DBGetParaByName
li      $a2, 0x100
jalr    $t9 ; ATP_DBGetParaByName
sb      $zero, 0x440+var_428($sp)
lw      $gp, 0x440+var_430($sp)
lui     $a1, 0x41
sb      $zero, 0x440+var_128($sp)
la      $t9, strncmp
move    $a0, $s3
la      $a1, aDsl        # "DSL"
jalr    $t9 ; strncmp
li      $a2, 0x100
lw      $gp, 0x440+var_430($sp)
bnez    $v0, loc_40EC50
move    $a0, $s2
la      $t9, strcpy
b       loc_40EC78
move    $a1, $s6

loc_40EC50:
la      $t9, strncmp
move    $a0, $s3
move    $a1, $fp
jalr    $t9 ; strncmp
li      $a2, 0x100
lw      $gp, 0x440+var_430($sp)
bnez    $v0, loc_40EC90
move    $a0, $s2
la      $t9, strcpy
move    $a1, $s7

loc_40EC78:
jalr    $t9 ; strcpy
nop
lw      $gp, 0x440+var_430($sp)
lw      $s0, 0x1C($s1)
b       loc_40ED10
nop

loc_40EC90:
lw      $s0, 0x28($s1)
nop
bnez    $s0, loc_40ECC4
nop
move    $v0, $s1

loc_40ECA4:
lw      $s0, 0x24($v0)
nop
bnez    $s0, loc_40ECC4
nop
lw      $v0, 0x2C($v0)
nop
bnez    $v0, loc_40ECA4
nop

loc_40ECC4:
lw      $a0, 0x2C($s1)
jal     sub_40E87C
nop
lw      $gp, 0x440+var_430($sp)
b       loc_40ED4C
move    $v0, $s0

loc_40ECDC:
lw      $a1, 4($s0)
jalr    $t9 ; strcmp
nop
lw      $gp, 0x440+var_430($sp)
lw      $v1, 0x38($s0)
beqz    $v0, loc_40ED00
move    $a0, $s0
b       loc_40ED10
move    $s0, $v1

loc_40ED00:
jal     sub_40EA74
move    $s0, $v1
lw      $gp, 0x440+var_430($sp)
nop

loc_40ED10:
la      $t9, strcmp
bnez    $s0, loc_40ECDC
move    $a0, $s2
lw      $v0, 0x28($s1)
nop
bnez    $v0, loc_40ED4C
nop

loc_40ED2C:
lw      $v0, 0x24($s1)
nop
bnez    $v0, loc_40ED4C
nop
lw      $s1, 0x2C($s1)
nop
bnez    $s1, loc_40ED2C
move    $v0, $s1

loc_40ED4C:
move    $s1, $v0

loc_40ED50:
bnez    $s1, loc_40EB60
nop

loc_40ED58:
lw      $ra, 0x440+var_4($sp)
lw      $fp, 0x440+var_8($sp)
lw      $s7, 0x440+var_C($sp)
lw      $s6, 0x440+var_10($sp)
lw      $s5, 0x440+var_14($sp)
lw      $s4, 0x440+var_18($sp)
lw      $s3, 0x440+var_1C($sp)
lw      $s2, 0x440+var_20($sp)
lw      $s1, 0x440+var_24($sp)
lw      $s0, 0x440+var_28($sp)
jr      $ra
addiu   $sp, 0x440
 # End of function sub_40EAF0




.globl UpnpDestoryDevice
UpnpDestoryDevice:

var_18= -0x18
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

addiu   $sp, -0x28
sw      $ra, 0x28+var_4($sp)
sw      $s2, 0x28+var_8($sp)
sw      $s1, 0x28+var_C($sp)
sw      $s0, 0x28+var_10($sp)
sw      $gp, 0x28+var_18($sp)
b       loc_40EDEC
move    $s1, $a0

loc_40EDA8:
lw      $s2, 0x24($s1)
lw      $s0, 0x1C($s1)
sw      $zero, 0x24($s1)
b       loc_40EDC8
sw      $zero, 0x1C($s1)

loc_40EDBC:
lw      $s0, 0x38($s0)
jal     sub_40E8F8
nop

loc_40EDC8:
bnez    $s0, loc_40EDBC
move    $a0, $s0
lw      $a0, 0x28($s1)
jal     UpnpDestoryDevice
nop
jal     sub_40E7A0
move    $a0, $s1
lw      $gp, 0x28+var_18($sp)
move    $s1, $s2

loc_40EDEC:
bnez    $s1, loc_40EDA8
nop
lw      $ra, 0x28+var_4($sp)
lw      $s2, 0x28+var_8($sp)
lw      $s1, 0x28+var_C($sp)
lw      $s0, 0x28+var_10($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function UpnpDestoryDevice




sub_40EE0C:

var_28= -0x28
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x38
li      $gp, 0x42E470
sw      $ra, 0x38+var_4($sp)
sw      $s6, 0x38+var_8($sp)
sw      $s5, 0x38+var_C($sp)
sw      $s4, 0x38+var_10($sp)
sw      $s3, 0x38+var_14($sp)
sw      $s2, 0x38+var_18($sp)
sw      $s1, 0x38+var_1C($sp)
sw      $s0, 0x38+var_20($sp)
sw      $gp, 0x38+var_28($sp)
move    $s0, $a0
move    $s3, $a1
move    $s4, $a2
move    $s6, $a3
beqz    $a0, loc_40F050
lui     $v0, 0x4009
la      $t9, strncmp
la      $a1, aUrn        # "urn:"
jalr    $t9 ; strncmp
li      $a2, 4
lw      $gp, 0x38+var_28($sp)
beqz    $v0, loc_40EEB8
nop
beqz    $s3, loc_40EE80
nop
sw      $zero, 0($s3)

loc_40EE80:
beqz    $s4, loc_40EE8C
nop
sw      $zero, 0($s4)

loc_40EE8C:
beqz    $s6, loc_40F050
move    $v0, $zero
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
move    $a0, $s0
lw      $gp, 0x38+var_28($sp)
bnez    $v0, loc_40F040
sw      $v0, 0($s6)
b       loc_40F038
lui     $v0, 0x4009

loc_40EEB8:
la      $t9, strchr
addiu   $s1, $s0, 4
move    $a0, $s1
jalr    $t9 ; strchr
li      $a1, 0x3A
lw      $gp, 0x38+var_28($sp)
beqz    $v0, loc_40F048
addiu   $s2, $v0, 1
la      $t9, strchr
move    $a0, $s2
jalr    $t9 ; strchr
li      $a1, 0x3A
lw      $gp, 0x38+var_28($sp)
beqz    $v0, loc_40F048
move    $s5, $v0
beqz    $s3, loc_40EF4C
nop
la      $t9, ATP_UPNP_Malloc
subu    $s0, $s2, $s1
jalr    $t9 ; ATP_UPNP_Malloc
move    $a0, $s0
lw      $gp, 0x38+var_28($sp)
beqz    $v0, loc_40F034
sw      $v0, 0($s3)
la      $t9, memset
move    $a0, $v0
move    $a1, $zero
jalr    $t9 ; memset
move    $a2, $s0
lw      $gp, 0x38+var_28($sp)
lw      $a0, 0($s3)
move    $a1, $s1
la      $t9, strncpy
nop
jalr    $t9 ; strncpy
addiu   $a2, $s0, -1
lw      $gp, 0x38+var_28($sp)

loc_40EF4C:
beqz    $s4, loc_40EFB8
addiu   $s1, $s5, 1
la      $t9, ATP_UPNP_Malloc
subu    $s0, $s1, $s2
jalr    $t9 ; ATP_UPNP_Malloc
move    $a0, $s0
lw      $gp, 0x38+var_28($sp)
bnez    $v0, loc_40EF84
sw      $v0, 0($s4)
beqz    $s3, loc_40F034
nop
lw      $a0, 0($s3)
b       loc_40F018
nop

loc_40EF84:
la      $t9, memset
move    $a0, $v0
move    $a1, $zero
jalr    $t9 ; memset
move    $a2, $s0
lw      $gp, 0x38+var_28($sp)
lw      $a0, 0($s4)
move    $a1, $s2
la      $t9, strncpy
nop
jalr    $t9 ; strncpy
addiu   $a2, $s0, -1
lw      $gp, 0x38+var_28($sp)

loc_40EFB8:
beqz    $s6, loc_40F050
move    $v0, $zero
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
move    $a0, $s1
lw      $gp, 0x38+var_28($sp)
bnez    $v0, loc_40F040
sw      $v0, 0($s6)
beqz    $s3, loc_40F008
nop
lw      $a0, 0($s3)
nop
beqz    $a0, loc_40F008
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x38+var_28($sp)

loc_40F008:
beqz    $s4, loc_40F038
lui     $v0, 0x4009
lw      $a0, 0($s4)
nop

loc_40F018:
beqz    $a0, loc_40F034
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x38+var_28($sp)

loc_40F034:
lui     $v0, 0x4009

loc_40F038:
b       loc_40F050
ori     $v0, 2

loc_40F040:
b       loc_40F050
move    $v0, $zero

loc_40F048:
li      $v0, 0x40090005

loc_40F050:
lw      $ra, 0x38+var_4($sp)
lw      $s6, 0x38+var_8($sp)
lw      $s5, 0x38+var_C($sp)
lw      $s4, 0x38+var_10($sp)
lw      $s3, 0x38+var_14($sp)
lw      $s2, 0x38+var_18($sp)
lw      $s1, 0x38+var_1C($sp)
lw      $s0, 0x38+var_20($sp)
jr      $ra
addiu   $sp, 0x38
 # End of function sub_40EE0C




sub_40F078:

var_48= -0x48
var_40= -0x40
var_38= -0x38
var_34= -0x34
var_30= -0x30
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4
arg_4=  4

lui     $gp, 0x43
addiu   $sp, -0x58
li      $gp, 0x42E470
sw      $ra, 0x58+var_4($sp)
sw      $fp, 0x58+var_8($sp)
sw      $s7, 0x58+var_C($sp)
sw      $s6, 0x58+var_10($sp)
sw      $s5, 0x58+var_14($sp)
sw      $s4, 0x58+var_18($sp)
sw      $s3, 0x58+var_1C($sp)
sw      $s2, 0x58+var_20($sp)
sw      $s1, 0x58+var_24($sp)
sw      $s0, 0x58+var_28($sp)
sw      $gp, 0x58+var_40($sp)
sw      $a1, 0x58+arg_4($sp)
beqz    $a0, loc_40F410
move    $s5, $a2
beqz    $a1, loc_40F414
move    $s1, $zero
la      $t9, TSP_XML_GetNodeByUrl
lui     $a1, 0x41
sw      $zero, 0x58+var_30($sp)
sw      $zero, 0x58+var_34($sp)
sw      $zero, 0x58+var_38($sp)
la      $a1, aActionArgument  # "action.argumentList.argument"
jalr    $t9 ; TSP_XML_GetNodeByUrl
addiu   $a2, $sp, 0x58+var_34
lw      $gp, 0x58+var_40($sp)
beqz    $v0, loc_40F1A8
lui     $v0, 0x41
b       loc_40F414
move    $s1, $zero

loc_40F0F8:
jalr    $t9 ; TSP_XML_GetNodeByUrl
nop
lw      $gp, 0x58+var_40($sp)
move    $a2, $zero
move    $a3, $zero
la      $t9, TSP_XML_GetNodeValue
bnez    $v0, loc_40F410
move    $a1, $zero
lw      $a0, 0x58+var_38($sp)
jalr    $t9 ; TSP_XML_GetNodeValue
sw      $s2, 0x58+var_48($sp)
lw      $gp, 0x58+var_40($sp)
nop
la      $t9, strcmp
bnez    $v0, loc_40F410
move    $a1, $s6
lw      $s0, 0x58+var_30($sp)
nop
beqz    $s0, loc_40F410
move    $a0, $s0
jalr    $t9 ; strcmp
nop
lw      $gp, 0x58+var_40($sp)
move    $a0, $s0
la      $t9, strcmp
bnez    $v0, loc_40F16C
move    $a1, $s4
beq     $s5, $s1, loc_40F1E0
nop

loc_40F16C:
jalr    $t9 ; strcmp
nop
lw      $gp, 0x58+var_40($sp)
nop
la      $t9, TSP_XML_GetNodeNextSibling
bnez    $v0, loc_40F190
nop
beqz    $s5, loc_40F1E0
nop

loc_40F190:
lw      $a0, 0x58+var_34($sp)
jalr    $t9 ; TSP_XML_GetNodeNextSibling
nop
lw      $gp, 0x58+var_40($sp)
b       loc_40F1C8
sw      $v0, 0x58+var_34($sp)

loc_40F1A8:
addiu   $s7, $v0, (aArgumentDirect - 0x410000)  # "argument.direction"
lui     $v0, 0x41
addiu   $s6, $v0, (aIn - 0x410000)  # "in"
lui     $v0, 0x41
addiu   $s4, $v0, (aOut - 0x410000)  # "out"
addiu   $s3, $sp, 0x58+var_38
addiu   $s2, $sp, 0x58+var_30
li      $s1, 1

loc_40F1C8:
lw      $v0, 0x58+var_34($sp)
la      $t9, TSP_XML_GetNodeByUrl
move    $a1, $s7
move    $a2, $s3
bnez    $v0, loc_40F0F8
move    $a0, $v0

loc_40F1E0:
lw      $v0, 0x58+var_34($sp)
nop
beqz    $v0, loc_40F414
move    $s1, $zero
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0xC
lw      $gp, 0x58+var_40($sp)
beqz    $v0, loc_40F414
move    $s1, $v0
sw      $zero, 0($v0)
sw      $zero, 4($v0)
sw      $zero, 8($v0)
lui     $v0, 0x41
addiu   $fp, $v0, (aIn - 0x410000)  # "in"
lui     $v0, 0x41
addiu   $s7, $v0, (aOut - 0x410000)  # "out"
move    $s2, $s1
addiu   $s4, $sp, 0x58+var_38
addiu   $s3, $sp, 0x58+var_30
b       loc_40F3F8
li      $s6, 1

loc_40F23C:
la      $t9, TSP_XML_GetNodeByUrl
addiu   $a1, (aArgumentName - 0x410000)  # "argument.name"
jalr    $t9 ; TSP_XML_GetNodeByUrl
move    $a2, $s4
lw      $gp, 0x58+var_40($sp)
bnez    $v0, loc_40F3D0
move    $a1, $zero
la      $t9, TSP_XML_GetNodeValue
lw      $a0, 0x58+var_38($sp)
sw      $s3, 0x58+var_48($sp)
move    $a2, $zero
jalr    $t9 ; TSP_XML_GetNodeValue
move    $a3, $zero
lw      $gp, 0x58+var_40($sp)
bnez    $v0, loc_40F3D0
nop
la      $t9, ATP_UPNP_StrDup
lw      $a0, 0x58+var_30($sp)
jalr    $t9 ; ATP_UPNP_StrDup
nop
lw      $gp, 0x58+var_40($sp)
beqz    $v0, loc_40F3D0
sw      $v0, 0($s2)
la      $t9, TSP_XML_GetNodeByUrl
lw      $a0, 0x58+var_34($sp)
la      $a1, aArgumentRelate  # "argument.relatedStateVariable"
jalr    $t9 ; TSP_XML_GetNodeByUrl
move    $a2, $s4
lw      $gp, 0x58+var_40($sp)
bnez    $v0, loc_40F3D0
move    $a1, $zero
la      $t9, TSP_XML_GetNodeValue
lw      $a0, 0x58+var_38($sp)
sw      $s3, 0x58+var_48($sp)
move    $a2, $zero
jalr    $t9 ; TSP_XML_GetNodeValue
move    $a3, $zero
bnez    $v0, loc_40F3D0
nop
lw      $a1, 0x58+var_30($sp)
lw      $a0, 0x58+arg_4($sp)
jal     sub_40D9D8
nop
lw      $gp, 0x58+var_40($sp)
beqz    $v0, loc_40F3D0
sw      $v0, 4($s2)
la      $t9, TSP_XML_GetNodeNextSibling
lw      $a0, 0x58+var_34($sp)
jalr    $t9 ; TSP_XML_GetNodeNextSibling
nop
lw      $gp, 0x58+var_40($sp)
beqz    $v0, loc_40F3F8
sw      $v0, 0x58+var_34($sp)
la      $t9, TSP_XML_GetNodeByUrl
lui     $a1, 0x41
move    $a0, $v0
la      $a1, aArgumentDirect  # "argument.direction"
jalr    $t9 ; TSP_XML_GetNodeByUrl
move    $a2, $s4
lw      $gp, 0x58+var_40($sp)
bnez    $v0, loc_40F3D0
move    $a1, $zero
la      $t9, TSP_XML_GetNodeValue
lw      $a0, 0x58+var_38($sp)
sw      $s3, 0x58+var_48($sp)
move    $a2, $zero
jalr    $t9 ; TSP_XML_GetNodeValue
move    $a3, $zero
lw      $gp, 0x58+var_40($sp)
bnez    $v0, loc_40F3D0
nop
lw      $s0, 0x58+var_30($sp)
nop
beqz    $s0, loc_40F3D0
nop
la      $t9, strcmp
move    $a0, $s0
jalr    $t9 ; strcmp
move    $a1, $fp
lw      $gp, 0x58+var_40($sp)
bnez    $v0, loc_40F390
nop
beqz    $s5, loc_40F3D0
nop

loc_40F390:
la      $t9, strcmp
move    $a0, $s0
jalr    $t9 ; strcmp
move    $a1, $s7
lw      $gp, 0x58+var_40($sp)
bnez    $v0, loc_40F3B4
nop
beq     $s5, $s6, loc_40F414
nop

loc_40F3B4:
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0xC
lw      $gp, 0x58+var_40($sp)
bnez    $v0, loc_40F3E4
nop

loc_40F3D0:
jal     sub_40E5CC
move    $a0, $s1
lw      $gp, 0x58+var_40($sp)
b       loc_40F414
move    $s1, $zero

loc_40F3E4:
sw      $zero, 0($v0)
sw      $zero, 4($v0)
sw      $zero, 8($v0)
sw      $v0, 8($s2)
move    $s2, $v0

loc_40F3F8:
lw      $a0, 0x58+var_34($sp)
nop
bnez    $a0, loc_40F23C
lui     $a1, 0x41
b       loc_40F414
nop

loc_40F410:
move    $s1, $zero

loc_40F414:
lw      $ra, 0x58+var_4($sp)
move    $v0, $s1
lw      $fp, 0x58+var_8($sp)
lw      $s7, 0x58+var_C($sp)
lw      $s6, 0x58+var_10($sp)
lw      $s5, 0x58+var_14($sp)
lw      $s4, 0x58+var_18($sp)
lw      $s3, 0x58+var_1C($sp)
lw      $s2, 0x58+var_20($sp)
lw      $s1, 0x58+var_24($sp)
lw      $s0, 0x58+var_28($sp)
jr      $ra
addiu   $sp, 0x58
 # End of function sub_40F078

lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x2C($sp)
sw      $s4, 0x28($sp)
sw      $s3, 0x24($sp)
sw      $s2, 0x20($sp)
sw      $s1, 0x1C($sp)
sw      $s0, 0x18($sp)
sw      $gp, 0x10($sp)
move    $s1, $a0
move    $s4, $a1
move    $s2, $a2
beqz    $a0, loc_40F548
move    $s3, $a3
beqz    $a1, loc_40F54C
lui     $v0, 0x4009
la      $t9, malloc
nop
jalr    $t9 ; malloc
li      $a0, 0x18
lw      $gp, 0x10($sp)
beqz    $v0, loc_40F524
move    $s0, $v0
lw      $v0, 0x40($sp)
la      $t9, strdup
sw      $s2, 8($s0)
sw      $v0, 0x10($s0)
sw      $s3, 0xC($s0)
sw      $zero, 0($s0)
sw      $zero, 4($s0)
sw      $zero, 0x14($s0)
jalr    $t9 ; strdup
move    $a0, $s1
lw      $gp, 0x10($sp)
beqz    $v0, loc_40F510
sw      $v0, 4($s0)
la      $t9, strdup
nop
jalr    $t9 ; strdup
move    $a0, $s4
lw      $gp, 0x10($sp)
bnez    $v0, loc_40F530
sw      $v0, 0($s0)
la      $t9, free
lw      $a0, 4($s0)
jalr    $t9 ; free
nop
lw      $gp, 0x10($sp)
nop

loc_40F510:
la      $t9, free
nop
jalr    $t9 ; free
move    $a0, $s0
lw      $gp, 0x10($sp)

loc_40F524:
lui     $v0, 0x4009
b       loc_40F54C
li      $v0, 0x40090002

loc_40F530:
lui     $v0, 0x42
lw      $v1, dword_426884
sw      $s0, dword_426884
move    $v0, $zero
b       loc_40F54C
sw      $v1, 0x14($s0)

loc_40F548:
lui     $v0, 0x4009

loc_40F54C:
lw      $ra, 0x2C($sp)
lw      $s4, 0x28($sp)
lw      $s3, 0x24($sp)
lw      $s2, 0x20($sp)
lw      $s1, 0x1C($sp)
lw      $s0, 0x18($sp)
jr      $ra
addiu   $sp, 0x30



sub_40F56C:

var_20= -0x20
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x30
li      $gp, 0x42E470
sw      $ra, 0x30+var_4($sp)
sw      $s3, 0x30+var_8($sp)
sw      $s2, 0x30+var_C($sp)
sw      $s1, 0x30+var_10($sp)
sw      $s0, 0x30+var_14($sp)
sw      $gp, 0x30+var_20($sp)
move    $s1, $a0
move    $s2, $a1
beqz    $a0, loc_40F628
move    $s3, $a2
beqz    $a1, loc_40F62C
lui     $v0, 0x4009
la      $t9, strchr
nop
jalr    $t9 ; strchr
li      $a1, 0x3A
lw      $gp, 0x30+var_20($sp)
bnez    $v0, loc_40F5EC
subu    $s0, $v0, $s1
la      $t9, snprintf
lui     $a2, 0x41
move    $a0, $s2
move    $a1, $s3
la      $a2, (aSS+4)     # "%s"
jalr    $t9 ; snprintf
move    $a3, $s1
lw      $gp, 0x30+var_20($sp)
b       loc_40F62C
move    $v0, $zero

loc_40F5EC:
sltu    $v0, $s0, $s3
bnez    $v0, loc_40F604
move    $a1, $s1
lui     $v0, 0x4009
b       loc_40F62C
li      $v0, 0x40090002

loc_40F604:
la      $t9, memcpy
move    $a0, $s2
jalr    $t9 ; memcpy
move    $a2, $s0
addu    $v0, $s2, $s0
lw      $gp, 0x30+var_20($sp)
sb      $zero, 0($v0)
b       loc_40F62C
move    $v0, $zero

loc_40F628:
lui     $v0, 0x4009

loc_40F62C:
lw      $ra, 0x30+var_4($sp)
lw      $s3, 0x30+var_8($sp)
lw      $s2, 0x30+var_C($sp)
lw      $s1, 0x30+var_10($sp)
lw      $s0, 0x30+var_14($sp)
jr      $ra
addiu   $sp, 0x30
 # End of function sub_40F56C




sub_40F648:

var_170= -0x170
var_168= -0x168
var_128= -0x128
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x180
li      $gp, 0x42E470
sw      $ra, 0x180+var_4($sp)
sw      $fp, 0x180+var_8($sp)
sw      $s7, 0x180+var_C($sp)
sw      $s6, 0x180+var_10($sp)
sw      $s5, 0x180+var_14($sp)
sw      $s4, 0x180+var_18($sp)
sw      $s3, 0x180+var_1C($sp)
sw      $s2, 0x180+var_20($sp)
sw      $s1, 0x180+var_24($sp)
sw      $s0, 0x180+var_28($sp)
sw      $gp, 0x180+var_170($sp)
move    $s6, $a0
move    $s4, $a1
move    $s7, $a2
beqz    $a0, loc_40F9BC
move    $fp, $a3
beqz    $a1, loc_40F9BC
addiu   $s3, $sp, 0x180+var_128
la      $t9, memset
move    $a0, $s3
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x100
lw      $gp, 0x180+var_170($sp)
move    $a0, $s4
la      $t9, strchr
nop
jalr    $t9 ; strchr
li      $a1, 0x2E
lw      $gp, 0x180+var_170($sp)
beqz    $v0, loc_40F734
move    $s1, $v0
la      $t9, strchr
addiu   $s2, $v0, 1
move    $a0, $s2
jalr    $t9 ; strchr
li      $a1, 0x2E
lw      $gp, 0x180+var_170($sp)
nop
la      $t9, atoi
beqz    $v0, loc_40F718
nop
jalr    $t9 ; atoi
move    $a0, $s2
lw      $gp, 0x180+var_170($sp)
bnez    $v0, loc_40F8EC
nop
b       loc_40F874
nop

loc_40F718:
jalr    $t9 ; atoi
move    $a0, $s2
lw      $gp, 0x180+var_170($sp)
bnez    $v0, loc_40F7CC
nop
b       loc_40F874
nop

loc_40F734:
la      $t9, atoi
nop
jalr    $t9 ; atoi
move    $a0, $s4
lw      $gp, 0x180+var_170($sp)
bnez    $v0, loc_40F9CC
lui     $v0, 0x4009
b       loc_40F9FC
li      $s2, 1

loc_40F758:
bne     $fp, $s2, loc_40F77C
nop
lw      $a1, 0x14($s0)
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a0, $s4
b       loc_40F7A0
nop

loc_40F77C:
lw      $a0, 4($s0)
jal     sub_40F56C
nop
lw      $gp, 0x180+var_170($sp)
move    $a0, $s4
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a1, $s1

loc_40F7A0:
lw      $gp, 0x180+var_170($sp)
bnez    $v0, loc_40F7B4
nop
b       loc_40F9CC
sw      $s0, 0($s7)

loc_40F7B4:
lw      $s0, 0x24($s0)

loc_40F7B8:
move    $a1, $s1
bnez    $s0, loc_40F758
li      $a2, 0x40
b       loc_40F9CC
lui     $v0, 0x4009

loc_40F7CC:
la      $t9, atoi
lw      $s0, 0x28($s6)
jalr    $t9 ; atoi
move    $a0, $s2
lw      $gp, 0x180+var_170($sp)
beqz    $v0, loc_40F9C4
move    $s2, $v0
la      $t9, memset
move    $a0, $s3
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x100
lw      $gp, 0x180+var_170($sp)
subu    $a2, $s1, $s4
move    $a1, $s4
la      $t9, strncpy
move    $a0, $s3
jalr    $t9 ; strncpy
li      $s1, 1
lw      $gp, 0x180+var_170($sp)
b       loc_40F860
nop

loc_40F824:
bne     $fp, $s1, loc_40F9C8
lui     $v0, 0x4009
lw      $a1, 0x14($s0)
jalr    $t9 ; strcmp
nop
lw      $gp, 0x180+var_170($sp)
bnez    $v0, loc_40F85C
nop
lw      $v0, 0x10($s0)
nop
bne     $v0, $s2, loc_40F85C
move    $v0, $zero
b       loc_40F9CC
sw      $s0, 0($s7)

loc_40F85C:
lw      $s0, 0x24($s0)

loc_40F860:
la      $t9, strcmp
bnez    $s0, loc_40F824
move    $a0, $s3
b       loc_40F9CC
lui     $v0, 0x4009

loc_40F874:
la      $t9, memset
addiu   $s0, $sp, 0x180+var_128
move    $a0, $s0
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x100
lw      $gp, 0x180+var_170($sp)
subu    $a2, $s1, $s4
move    $a1, $s4
la      $t9, strncpy
move    $a0, $s0
jalr    $t9 ; strncpy
move    $s1, $s6
lw      $gp, 0x180+var_170($sp)
move    $s3, $s0

loc_40F8B0:
la      $t9, strcmp
lw      $a1, 0x14($s1)
jalr    $t9 ; strcmp
move    $a0, $s3
lw      $gp, 0x180+var_170($sp)
bnez    $v0, loc_40F8D4
move    $a0, $s1
b       loc_40F994
move    $a1, $s2

loc_40F8D4:
lw      $s1, 0x24($s1)
nop
bnez    $s1, loc_40F8B0
lui     $v0, 0x4009
b       loc_40F9CC
nop

loc_40F8EC:
la      $t9, atoi
nop
jalr    $t9 ; atoi
move    $a0, $s2
lw      $gp, 0x180+var_170($sp)
beqz    $v0, loc_40F9C4
move    $s5, $v0
la      $t9, memset
move    $a0, $s3
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x100
lw      $gp, 0x180+var_170($sp)
subu    $a2, $s1, $s4
move    $a1, $s4
la      $t9, strncpy
nop
jalr    $t9 ; strncpy
move    $a0, $s3
lw      $gp, 0x180+var_170($sp)
move    $a0, $s2
la      $t9, strchr
nop
jalr    $t9 ; strchr
li      $a1, 0x2E
lw      $gp, 0x180+var_170($sp)
beqz    $v0, loc_40F9C4
move    $s1, $v0
move    $s0, $s6
move    $s2, $s3

loc_40F964:
la      $t9, strcmp
lw      $a1, 0x14($s0)
jalr    $t9 ; strcmp
move    $a0, $s2
lw      $gp, 0x180+var_170($sp)
bnez    $v0, loc_40F9AC
nop
lw      $v0, 0x10($s0)
nop
bne     $v0, $s5, loc_40F9AC
move    $a0, $s0
addiu   $a1, $s1, 1

loc_40F994:
move    $a2, $s7
jal     sub_40F648
move    $a3, $fp
lw      $gp, 0x180+var_170($sp)
b       loc_40F9CC
nop

loc_40F9AC:
lw      $s0, 0x24($s0)
nop
bnez    $s0, loc_40F964
nop

loc_40F9BC:
b       loc_40F9CC
lui     $v0, 0x4009

loc_40F9C4:
lui     $v0, 0x4009

loc_40F9C8:
ori     $v0, 0xB

loc_40F9CC:
lw      $ra, 0x180+var_4($sp)
lw      $fp, 0x180+var_8($sp)
lw      $s7, 0x180+var_C($sp)
lw      $s6, 0x180+var_10($sp)
lw      $s5, 0x180+var_14($sp)
lw      $s4, 0x180+var_18($sp)
lw      $s3, 0x180+var_1C($sp)
lw      $s2, 0x180+var_20($sp)
lw      $s1, 0x180+var_24($sp)
lw      $s0, 0x180+var_28($sp)
jr      $ra
addiu   $sp, 0x180

loc_40F9FC:
lw      $s0, 0x28($s6)
b       loc_40F7B8
addiu   $s1, $sp, 0x180+var_168
 # End of function sub_40F648




sub_40FA08:

var_388= -0x388
var_378= -0x378
var_370= -0x370
var_36C= -0x36C
var_32C= -0x32C
var_22C= -0x22C
var_12C= -0x12C
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4
arg_10=  0x10

lui     $gp, 0x43
addiu   $sp, -0x388
li      $gp, 0x42E470
sw      $ra, 0x388+var_4($sp)
sw      $fp, 0x388+var_8($sp)
sw      $s7, 0x388+var_C($sp)
sw      $s6, 0x388+var_10($sp)
sw      $s5, 0x388+var_14($sp)
sw      $s4, 0x388+var_18($sp)
sw      $s3, 0x388+var_1C($sp)
sw      $s2, 0x388+var_20($sp)
sw      $s1, 0x388+var_24($sp)
sw      $s0, 0x388+var_28($sp)
sw      $gp, 0x388+var_378($sp)
la      $t9, strncpy
addiu   $s2, $sp, 0x388+var_32C
move    $s7, $a1
move    $fp, $a2
move    $a1, $a0
li      $a2, 0x100
move    $a0, $s2
sw      $zero, 0x388+var_370($sp)
lw      $s5, 0x388+arg_10($sp)
jalr    $t9 ; strncpy
move    $s6, $a3
lw      $gp, 0x388+var_378($sp)
move    $a0, $s2
la      $t9, strrchr
nop
jalr    $t9 ; strrchr
li      $a1, 0x2E
lw      $gp, 0x388+var_378($sp)
beqz    $v0, loc_40FD5C
move    $s0, $v0
lb      $v0, 0($v0)
nop
beqz    $v0, loc_40FD6C
lui     $v0, 0x4009
sltu    $v0, $s2, $s0
beqz    $v0, loc_40FD6C
lui     $v0, 0x4009
la      $t9, strncpy
addiu   $a1, $s0, 1
addiu   $a0, $sp, 0x388+var_12C
jalr    $t9 ; strncpy
li      $a2, 0x100
lw      $gp, 0x388+var_378($sp)
move    $a0, $s2
sb      $zero, 0($s0)
la      $t9, strrchr
nop
jalr    $t9 ; strrchr
li      $a1, 0x2E
lw      $gp, 0x388+var_378($sp)
beqz    $v0, loc_40FD5C
move    $s0, $v0
lb      $v0, 0($v0)
nop
beqz    $v0, loc_40FD6C
lui     $v0, 0x4009
sltu    $v0, $s2, $s0
beqz    $v0, loc_40FD6C
lui     $v0, 0x4009
la      $t9, atoi
addiu   $s1, $s0, 1
jalr    $t9 ; atoi
move    $a0, $s1
lw      $gp, 0x388+var_378($sp)
bnez    $v0, loc_40FB40
move    $s3, $v0
la      $t9, strncpy
move    $a1, $s1
addiu   $a0, $sp, 0x388+var_22C
jalr    $t9 ; strncpy
li      $a2, 0x100
lw      $gp, 0x388+var_378($sp)
b       loc_40FB98
move    $s1, $zero

loc_40FB40:
la      $t9, strrchr
sb      $zero, 0($s0)
move    $a0, $s2
jalr    $t9 ; strrchr
li      $a1, 0x2E
lw      $gp, 0x388+var_378($sp)
beqz    $v0, loc_40FD5C
move    $s0, $v0
lb      $v0, 0($v0)
nop
beqz    $v0, loc_40FD6C
lui     $v0, 0x4009
sltu    $v0, $s2, $s0
beqz    $v0, loc_40FD6C
lui     $v0, 0x4009
la      $t9, strncpy
addiu   $a0, $sp, 0x388+var_22C
addiu   $a1, $s0, 1
jalr    $t9 ; strncpy
li      $a2, 0x100
lw      $gp, 0x388+var_378($sp)
move    $s1, $s3

loc_40FB98:
la      $v0, g_pstUpnpGvarHead
sb      $zero, 0($s0)
addiu   $a1, $sp, 0x388+var_32C
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
addiu   $a2, $sp, 0x388+var_370
lw      $a0, 0($v0)
jal     sub_40F648
move    $a3, $s5
lw      $gp, 0x388+var_378($sp)
bnez    $v0, loc_40FD5C
li      $s4, 1
lw      $v0, 0x388+var_370($sp)
addiu   $s0, $sp, 0x388+var_36C
lw      $s2, 0x1C($v0)
b       loc_40FC80
addiu   $s3, $sp, 0x388+var_22C

loc_40FBD8:
bne     $s5, $s4, loc_40FC4C
nop
lw      $v0, 0x1C($s2)
move    $a1, $s3
beqz    $v0, loc_40FC00
move    $a0, $v0
jalr    $t9 ; strcmp
nop
b       loc_40FC28
nop

loc_40FC00:
lw      $a0, 4($s2)
move    $a1, $s0
jal     sub_40F56C
li      $a2, 0x40
lw      $gp, 0x388+var_378($sp)
move    $a0, $s0
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a1, $s3

loc_40FC28:
lw      $gp, 0x388+var_378($sp)
bnez    $v0, loc_40FC7C
nop
lw      $v0, 0x18($s2)
nop
bne     $v0, $s1, loc_40FC7C
nop
b       loc_40FC98
nop

loc_40FC4C:
lw      $a0, 4($s2)
jal     sub_40F56C
nop
lw      $gp, 0x388+var_378($sp)
move    $a0, $s0
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a1, $s3
lw      $gp, 0x388+var_378($sp)
beqz    $v0, loc_40FC98
nop

loc_40FC7C:
lw      $s2, 0x38($s2)

loc_40FC80:
move    $a1, $s0
la      $t9, strcmp
bnez    $s2, loc_40FBD8
li      $a2, 0x40
b       loc_40FD68
lui     $v0, 0x4009

loc_40FC98:
lw      $s0, 0x28($s2)
li      $s4, 1
b       loc_40FD10
addiu   $s3, $sp, 0x388+var_12C

loc_40FCA8:
bne     $s5, $s4, loc_40FCF4
nop
lw      $v0, 4($s0)
move    $a1, $s3
la      $t9, strcmp
beqz    $v0, loc_40FCD4
move    $a0, $v0
jalr    $t9 ; strcmp
nop
b       loc_40FCE0
nop

loc_40FCD4:
lw      $a0, 0($s0)
jalr    $t9 ; strcmp
move    $a1, $s3

loc_40FCE0:
lw      $gp, 0x388+var_378($sp)
bnez    $v0, loc_40FD0C
nop
b       loc_40FD24
nop

loc_40FCF4:
lw      $s1, 0($s0)
jalr    $t9 ; strcmp
move    $a0, $s1
lw      $gp, 0x388+var_378($sp)
beqz    $v0, loc_40FD38
move    $a1, $s1

loc_40FD0C:
lw      $s0, 0x10($s0)

loc_40FD10:
la      $t9, strcmp
bnez    $s0, loc_40FCA8
move    $a1, $s3
b       loc_40FD68
lui     $v0, 0x4009

loc_40FD24:
lw      $a1, 4($s0)
nop
bnez    $a1, loc_40FD3C
move    $a2, $s7
lw      $a1, 0($s0)

loc_40FD38:
move    $a2, $s7

loc_40FD3C:
move    $a3, $s6
jal     ATP_UPNP_AddEvent
move    $a0, $zero
lw      $gp, 0x388+var_378($sp)
bnez    $v0, loc_40FD64
move    $v0, $zero
b       loc_40FD6C
sw      $s2, 0x388+var_388($fp)

loc_40FD5C:
b       loc_40FD6C
lui     $v0, 0x4009

loc_40FD64:
lui     $v0, 0x4009

loc_40FD68:
ori     $v0, 0xB

loc_40FD6C:
lw      $ra, 0x388+var_4($sp)
lw      $fp, 0x388+var_8($sp)
lw      $s7, 0x388+var_C($sp)
lw      $s6, 0x388+var_10($sp)
lw      $s5, 0x388+var_14($sp)
lw      $s4, 0x388+var_18($sp)
lw      $s3, 0x388+var_1C($sp)
lw      $s2, 0x388+var_20($sp)
lw      $s1, 0x388+var_24($sp)
lw      $s0, 0x388+var_28($sp)
jr      $ra
addiu   $sp, 0x388
 # End of function sub_40FA08




.globl ATP_UPNP_GetServiceByDomain
ATP_UPNP_GetServiceByDomain:

var_18= -0x18
var_10= -0x10
var_4= -4

addiu   $sp, -0x28
sw      $ra, 0x28+var_4($sp)
sw      $gp, 0x28+var_10($sp)
beqz    $a0, loc_40FDE0
lui     $v0, 0x4009
beqz    $a1, loc_40FDE0
nop
beqz    $a2, loc_40FDE0
nop
beqz    $a3, loc_40FDDC
li      $v0, 1
jal     sub_40FA08
sw      $v0, 0x28+var_18($sp)
lw      $gp, 0x28+var_10($sp)
b       loc_40FDE0
nop

loc_40FDDC:
lui     $v0, 0x4009

loc_40FDE0:
lw      $ra, 0x28+var_4($sp)
nop
jr      $ra
addiu   $sp, 0x28
 # End of function ATP_UPNP_GetServiceByDomain




.globl ATP_UPnP_RegService
ATP_UPnP_RegService:

var_D8= -0xD8
var_D0= -0xD0
var_C8= -0xC8
var_C4= -0xC4
var_C0= -0xC0
var_BC= -0xBC
var_B8= -0xB8
var_B4= -0xB4
var_B0= -0xB0
var_AC= -0xAC
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4
arg_18=  0x18

lui     $gp, 0x43
addiu   $sp, -0xE8
li      $gp, 0x42E470
sw      $ra, 0xE8+var_4($sp)
sw      $fp, 0xE8+var_8($sp)
sw      $s7, 0xE8+var_C($sp)
sw      $s6, 0xE8+var_10($sp)
sw      $s5, 0xE8+var_14($sp)
sw      $s4, 0xE8+var_18($sp)
sw      $s3, 0xE8+var_1C($sp)
sw      $s2, 0xE8+var_20($sp)
sw      $s1, 0xE8+var_24($sp)
sw      $s0, 0xE8+var_28($sp)
sw      $gp, 0xE8+var_D0($sp)
move    $s7, $a0
move    $s5, $a1
move    $s6, $a2
beqz    $a0, loc_4108DC
move    $fp, $a3
beqz    $a1, loc_4108F4
lui     $v0, 0x4009
beqz    $a2, loc_4108F4
nop
addiu   $v0, $a3, -1
sltiu   $v0, 3
beqz    $v0, loc_4108F4
lui     $v0, 0x4009
move    $a0, $a1
move    $a2, $zero
move    $a1, $zero
jal     sub_40EE0C
addiu   $a3, $sp, 0xE8+var_C8
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_4108DC
nop
lw      $s3, 0xE8+var_C8($sp)
nop
beqz    $s3, loc_4108E4
move    $s2, $zero
la      $v0, g_pstUpnpGvarHead
nop
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $s1, 0($v0)
b       loc_40FF68
move    $s4, $zero

loc_40FEA8:
lw      $a0, 4($s1)
nop
beqz    $a0, loc_40FF34
nop
lw      $a1, 4($s7)
nop
beqz    $a1, loc_40FF34
nop
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
nop
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_40FF34
nop
lw      $s0, 0x1C($s1)
b       loc_40FF28
nop

loc_40FEF0:
lw      $a0, 4($s0)
jalr    $t9 ; strcmp
nop
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_40FF20
move    $v1, $s4
lw      $v1, 0xC($s0)
nop
sltu    $v0, $s4, $v1
bnez    $v0, loc_40FF20
move    $s2, $s0
move    $v1, $s4

loc_40FF20:
lw      $s0, 0x38($s0)
move    $s4, $v1

loc_40FF28:
la      $t9, strcmp
bnez    $s0, loc_40FEF0
move    $a1, $s3

loc_40FF34:
lw      $v0, 0x28($s1)
nop
bnez    $v0, loc_40FF64
nop

loc_40FF44:
lw      $v0, 0x24($s1)
nop
bnez    $v0, loc_40FF64
nop
lw      $s1, 0x2C($s1)
nop
bnez    $s1, loc_40FF44
nop

loc_40FF64:
move    $s1, $v0

loc_40FF68:
bnez    $s1, loc_40FEA8
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
move    $a0, $s3
lw      $gp, 0xE8+var_D0($sp)
beqz    $s4, loc_41014C
sw      $zero, 0xE8+var_C8($sp)
beqz    $s2, loc_410134
move    $s0, $zero
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0x3C
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_410134
move    $s0, $v0
la      $t9, memset
move    $a0, $v0
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x3C
lw      $a0, 0($s2)
lw      $gp, 0xE8+var_D0($sp)
beqz    $a0, loc_40FFF0
nop
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
nop
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_41011C
sw      $v0, 0($s0)

loc_40FFF0:
lw      $a0, 4($s2)
nop
beqz    $a0, loc_410024
nop

loc_410000:
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
nop
sw      $v0, 4($s0)
lw      $v0, 4($s2)
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_41011C
nop

loc_410024:
lw      $a0, 8($s2)
nop
beqz    $a0, loc_410058
nop
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
nop
sw      $v0, 8($s0)
lw      $v0, 8($s2)
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_41011C
nop

loc_410058:
lw      $a0, 0x10($s2)
nop
beqz    $a0, loc_41008C
nop
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
nop
sw      $v0, 0x10($s0)
lw      $v0, 0x10($s2)
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_41011C
nop

loc_41008C:
lw      $v1, 0x14($s2)
lw      $a0, 0x20($s2)
lw      $a1, 0x24($s2)
lw      $a2, 0x28($s2)
lw      $a3, 0x1C($s7)
addiu   $v0, $s4, 1
sw      $v0, 0xC($s0)
sw      $v1, 0x14($s0)
sw      $a0, 0x20($s0)
sw      $a1, 0x24($s0)
sw      $a2, 0x28($s0)
sw      $zero, 0x2C($s0)
bnez    $a3, loc_4100CC
sw      $s7, 0x30($s0)
b       loc_4100E8
sw      $s0, 0x1C($s7)

loc_4100CC:
move    $v0, $a3
lw      $a3, 0x38($a3)
nop
bnez    $a3, loc_4100CC
nop
sw      $v0, 0x34($s0)
sw      $s0, 0x38($v0)

loc_4100E8:
lw      $a0, 0x1C($s2)
nop
beqz    $a0, loc_410130
li      $v0, 0xFFFFFFFF
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
nop
sw      $v0, 0x1C($s0)
lw      $v0, 0x1C($s2)
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_410130
li      $v0, 0xFFFFFFFF

loc_41011C:
jal     sub_40E8F8
move    $a0, $s0
lw      $gp, 0xE8+var_D0($sp)
b       loc_410134
move    $s0, $zero

loc_410130:
sw      $v0, 0x18($s0)

loc_410134:
lw      $v0, 0xE8+arg_18($sp)
bnez    $s0, loc_4108F0
sw      $s0, 0($v0)
lui     $v0, 0x4009
b       loc_4108F4
li      $v0, 0x40090002

loc_41014C:
la      $t9, ATP_UPNP_Malloc
sw      $zero, 0xE8+var_C4($sp)
sw      $zero, 0xE8+var_C0($sp)
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0x3C
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_4108C8
move    $s2, $v0
la      $t9, memset
move    $a0, $v0
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x3C
move    $a0, $s5
addiu   $a1, $sp, 0xE8+var_C4
move    $a2, $zero
jal     sub_40EE0C
addiu   $a3, $sp, 0xE8+var_C0
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_410848
nop
lw      $v0, 0xE8+var_C0($sp)
lw      $s0, 0xE8+var_C4($sp)
sw      $s7, 0x30($s2)
sw      $v0, 4($s2)
li      $v0, 0xFFFFFFFF
beqz    $s0, loc_410208
sw      $v0, 0x18($s2)
la      $t9, strncmp
la      $a1, aSchemasUpnpOrg  # "schemas-upnp-org"
move    $a0, $s0
jalr    $t9 ; strncmp
li      $a2, 0x10
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_410208
lui     $a1, 0x41
la      $t9, strncmp
la      $a1, aDslforumOrg  # "dslforum-org"
move    $a0, $s0
jalr    $t9 ; strncmp
li      $a2, 0xC
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_410208
nop
b       loc_410218
sw      $s0, 0($s2)

loc_410208:
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
move    $a0, $s0

loc_410218:
lw      $a0, 4($s2)
addiu   $s0, $sp, 0xE8+var_AC
move    $a1, $s0
jal     sub_40F56C
li      $a2, 0x80
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_410848
nop
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
move    $a0, $s0
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_410848
sw      $v0, 8($s2)
andi    $v0, $fp, 3
sw      $v0, 0x14($s2)
la      $v0, g_pcDescPath
nop
lw      $a3, (g_pcDescPath - 0x426848)($v0)
nop
beqz    $a3, loc_410848
nop
la      $t9, snprintf
la      $a2, aSS_0       # "%s/%s"
move    $a0, $s0
li      $a1, 0x80
jalr    $t9 ; snprintf
sw      $s6, 0xE8+var_D8($sp)
lw      $gp, 0xE8+var_D0($sp)
move    $a0, $s0
la      $t9, TSP_XML_ParseFile
nop
jalr    $t9 ; TSP_XML_ParseFile
addiu   $a1, $sp, 0xE8+var_BC
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_410848
nop
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
move    $a0, $s6
lw      $gp, 0xE8+var_D0($sp)
sw      $v0, 0x10($s2)
lw      $a0, 0xE8+var_BC($sp)
bnez    $v0, loc_4102F0
lui     $a1, 0x41
la      $t9, TSP_XML_FreeNode
nop
jalr    $t9 ; TSP_XML_FreeNode
nop
b       loc_410848
nop

loc_4102F0:
la      $t9, TSP_XML_GetNodeByUrl
sw      $zero, 0xE8+var_B4($sp)
sw      $zero, 0xE8+var_B0($sp)
addiu   $a1, (aScpdActionlist_0 - 0x410000)  # "scpd.actionList"
jalr    $t9 ; TSP_XML_GetNodeByUrl
addiu   $a2, $sp, 0xE8+var_B4
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_410364
lui     $a2, 0x41
la      $t9, TSP_XML_GetAttr
lw      $a0, 0xE8+var_B4($sp)
la      $a2, aCfmnodename  # "cfmNodeName"
move    $a1, $zero
jalr    $t9 ; TSP_XML_GetAttr
addiu   $a3, $sp, 0xE8+var_B0
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_410364
nop
lw      $a0, 0xE8+var_B0($sp)
nop
beqz    $a0, loc_410364
nop
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
nop
lw      $gp, 0xE8+var_D0($sp)
b       loc_410368
sw      $v0, 0x1C($s2)

loc_410364:
sw      $zero, 0x1C($s2)

loc_410368:
lw      $a0, 0xE8+var_BC($sp)
li      $v0, 1
sw      $v0, 0xC($s2)
sw      $zero, 0xE8+var_B4($sp)
sw      $zero, 0xE8+var_B8($sp)
beqz    $a0, loc_4105D8
sw      $zero, 0xE8+var_B0($sp)
la      $t9, TSP_XML_GetNodeByUrl
la      $a1, aScpdServicesta  # "scpd.serviceStateTable.stateVariable"
jalr    $t9 ; TSP_XML_GetNodeByUrl
addiu   $a2, $sp, 0xE8+var_B4
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_4105E4
move    $s1, $zero
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0x14
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_4105E0
move    $s0, $v0
sw      $zero, 0($v0)
sw      $zero, 4($v0)
sw      $zero, 8($v0)
sw      $zero, 0xC($v0)
sw      $zero, 0x10($v0)
lui     $v0, 0x1F00
ori     $s5, $v0, 0x703
move    $s3, $s0
addiu   $s4, $sp, 0xE8+var_B0
li      $fp, 1
b       loc_4105C0
addiu   $s6, $sp, 0xE8+var_B8

loc_4103F0:
la      $t9, TSP_XML_GetAttr
move    $a1, $zero
addiu   $a2, (aSendevents - 0x410000)  # "sendEvents"
jalr    $t9 ; TSP_XML_GetAttr
move    $a3, $s4
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_410544
nop
lw      $a0, 0xE8+var_B0($sp)
nop
beqz    $a0, loc_410544
lui     $a1, 0x41
la      $t9, strcasecmp
nop
jalr    $t9 ; strcasecmp
la      $a1, aYes        # "yes"
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_410444
nop
b       loc_410448
sw      $fp, 0xC($s3)

loc_410444:
sw      $zero, 0xC($s3)

loc_410448:
la      $t9, TSP_XML_GetNodeByUrl
lw      $a0, 0xE8+var_B4($sp)
la      $a1, aStatevariableN  # "stateVariable.name"
jalr    $t9 ; TSP_XML_GetNodeByUrl
move    $a2, $s6
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_410544
move    $a1, $zero
la      $t9, TSP_XML_GetNodeValue
lw      $a0, 0xE8+var_B8($sp)
sw      $s4, 0xE8+var_D8($sp)
move    $a2, $zero
jalr    $t9 ; TSP_XML_GetNodeValue
move    $a3, $zero
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_410544
nop
la      $t9, ATP_UPNP_StrDup
lw      $a0, 0xE8+var_B0($sp)
jalr    $t9 ; ATP_UPNP_StrDup
nop
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_410544
sw      $v0, 0($s3)
la      $t9, TSP_XML_GetAttr
lw      $a0, 0xE8+var_B8($sp)
lui     $a2, 0x41
move    $a1, $zero
la      $a2, aCfmnodename  # "cfmNodeName"
jalr    $t9 ; TSP_XML_GetAttr
move    $a3, $s4
lw      $gp, 0xE8+var_D0($sp)
beq     $v0, $s5, loc_4104F8
nop
bnez    $v0, loc_410544
nop
la      $t9, ATP_UPNP_StrDup
lw      $a0, 0xE8+var_B0($sp)
jalr    $t9 ; ATP_UPNP_StrDup
nop
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_410544
sw      $v0, 4($s3)

loc_4104F8:
la      $t9, TSP_XML_GetAttr
lw      $a0, 0xE8+var_B8($sp)
lui     $a2, 0x41
move    $a1, $zero
la      $a2, aDftvalue   # "dftValue"
jalr    $t9 ; TSP_XML_GetAttr
move    $a3, $s4
lw      $gp, 0xE8+var_D0($sp)
beq     $v0, $s5, loc_410558
nop
bnez    $v0, loc_410544
nop
la      $t9, ATP_UPNP_StrDup
lw      $a0, 0xE8+var_B0($sp)
jalr    $t9 ; ATP_UPNP_StrDup
nop
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_410558
sw      $v0, 8($s3)

loc_410544:
jal     sub_40E48C
move    $a0, $s0
lw      $gp, 0xE8+var_D0($sp)
b       loc_4105E4
move    $s1, $zero

loc_410558:
la      $t9, TSP_XML_GetNodeNextSibling
lw      $a0, 0xE8+var_B4($sp)
jalr    $t9 ; TSP_XML_GetNodeNextSibling
nop
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_4105C0
sw      $v0, 0xE8+var_B4($sp)
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0x14
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_4105A4
move    $s1, $v0
jal     sub_40E48C
move    $a0, $s0
lw      $gp, 0xE8+var_D0($sp)
b       loc_4105E4
nop

loc_4105A4:
sw      $zero, 0($v0)
sw      $zero, 4($v0)
sw      $zero, 8($v0)
sw      $zero, 0xC($v0)
sw      $zero, 0x10($v0)
sw      $v0, 0x10($s3)
move    $s3, $v0

loc_4105C0:
lw      $a0, 0xE8+var_B4($sp)
nop
bnez    $a0, loc_4103F0
lui     $a2, 0x41
b       loc_4105E4
move    $s1, $s0

loc_4105D8:
b       loc_4105E4
move    $s1, $zero

loc_4105E0:
move    $s1, $s0

loc_4105E4:
lw      $a0, 0xE8+var_BC($sp)
sw      $s1, 0x28($s2)
sw      $zero, 0xE8+var_B8($sp)
sw      $zero, 0xE8+var_B4($sp)
beqz    $a0, loc_41080C
sw      $zero, 0xE8+var_B0($sp)
beqz    $s1, loc_41080C
lui     $a1, 0x41
la      $t9, TSP_XML_GetNodeByUrl
la      $a1, aScpdActionlist  # "scpd.actionList.action"
jalr    $t9 ; TSP_XML_GetNodeByUrl
addiu   $a2, $sp, 0xE8+var_B8
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_410630
move    $v1, $v0
li      $v0, 0x1F000703
bne     $v1, $v0, loc_410818
move    $s0, $zero

loc_410630:
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0x14
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_410814
move    $s3, $v0
sw      $zero, 0($v0)
sw      $zero, 4($v0)
sw      $zero, 8($v0)
sw      $zero, 0xC($v0)
sw      $zero, 0x10($v0)
move    $s4, $v0
lui     $fp, 0x4000
addiu   $s5, $sp, 0xE8+var_B0
b       loc_4107E4
addiu   $s6, $sp, 0xE8+var_B4

loc_410674:
lw      $v0, 4($s4)
nop
or      $v0, $fp
jalr    $t9 ; TSP_XML_GetAttr
sw      $v0, 4($s4)
lw      $gp, 0xE8+var_D0($sp)
li      $v1, 0x1F000703
la      $t9, strtoul
move    $a1, $zero
beq     $v0, $v1, loc_4106D4
li      $a2, 0x10
bnez    $v0, loc_410740
nop
lw      $v0, 0xE8+var_B0($sp)
nop
beqz    $v0, loc_410740
move    $a0, $v0
lw      $s0, 4($s4)
jalr    $t9 ; strtoul
nop
lw      $gp, 0xE8+var_D0($sp)
or      $v0, $s0
sw      $v0, 4($s4)

loc_4106D4:
la      $t9, TSP_XML_GetNodeByUrl
lw      $a0, 0xE8+var_B8($sp)
la      $a1, aActionName  # "action.name"
jalr    $t9 ; TSP_XML_GetNodeByUrl
move    $a2, $s6
lw      $gp, 0xE8+var_D0($sp)
lw      $a0, 0xE8+var_B4($sp)
sw      $s5, 0xE8+var_D8($sp)
la      $t9, TSP_XML_GetNodeValue
move    $a3, $zero
move    $a1, $zero
move    $a2, $zero
jalr    $t9 ; TSP_XML_GetNodeValue
move    $s0, $v0
lw      $gp, 0xE8+var_D0($sp)
addu    $v0, $s0
la      $t9, ATP_UPNP_StrDup
bnez    $v0, loc_410740
nop
lw      $a0, 0xE8+var_B0($sp)
jalr    $t9 ; ATP_UPNP_StrDup
nop
move    $a1, $s1
li      $a2, 1
bnez    $v0, loc_410754
sw      $v0, 0($s4)

loc_410740:
jal     sub_40E648
move    $a0, $s3
lw      $gp, 0xE8+var_D0($sp)
b       loc_410818
move    $s0, $zero

loc_410754:
lw      $a0, 0xE8+var_B8($sp)
jal     sub_40F078
nop
lw      $a0, 0xE8+var_B8($sp)
move    $a1, $s1
move    $a2, $zero
jal     sub_40F078
sw      $v0, 8($s4)
lw      $gp, 0xE8+var_D0($sp)
lw      $a0, 0xE8+var_B8($sp)
la      $t9, TSP_XML_GetNodeNextSibling
nop
jalr    $t9 ; TSP_XML_GetNodeNextSibling
sw      $v0, 0xC($s4)
lw      $gp, 0xE8+var_D0($sp)
beqz    $v0, loc_4107E4
sw      $v0, 0xE8+var_B8($sp)
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0x14
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_4107C8
move    $s0, $v0
jal     sub_40E648
move    $a0, $s3
lw      $gp, 0xE8+var_D0($sp)
b       loc_410818
nop

loc_4107C8:
sw      $zero, 0($v0)
sw      $zero, 4($v0)
sw      $zero, 8($v0)
sw      $zero, 0xC($v0)
sw      $zero, 0x10($v0)
sw      $v0, 0x10($s4)
move    $s4, $v0

loc_4107E4:
lw      $v0, 0xE8+var_B8($sp)
lui     $a2, 0x41
la      $t9, TSP_XML_GetAttr
move    $a3, $s5
la      $a2, aAttr       # "attr"
move    $a0, $v0
bnez    $v0, loc_410674
move    $a1, $zero
b       loc_410818
move    $s0, $s3

loc_41080C:
b       loc_410818
move    $s0, $zero

loc_410814:
move    $s0, $s3

loc_410818:
la      $t9, TSP_XML_FreeNode
lw      $a0, 0xE8+var_BC($sp)
jalr    $t9 ; TSP_XML_FreeNode
sw      $s0, 0x24($s2)
lw      $v0, 0x24($s2)
nop
beqz    $v0, loc_410848
nop
lw      $v1, 0x28($s2)
nop
bnez    $v1, loc_41085C
li      $a0, 1

loc_410848:
jal     sub_40E8F8
move    $a0, $s2
lw      $gp, 0xE8+var_D0($sp)
b       loc_4108C8
move    $s2, $zero

loc_41085C:
lw      $v0, 0xC($v1)
nop
beq     $v0, $a0, loc_41087C
li      $v0, 1
lw      $v1, 0x10($v1)
nop
bnez    $v1, loc_41085C
move    $v0, $zero

loc_41087C:
lw      $a0, 0x28($s2)
jal     sub_40D534
sw      $v0, 0x20($s2)
lw      $a0, 0x24($s2)
jal     sub_40D5F0
nop
lw      $v0, 0x1C($s7)
lw      $gp, 0xE8+var_D0($sp)
bnez    $v0, loc_4108B0
move    $v1, $v0
b       loc_4108C8
sw      $s2, 0x1C($s7)

loc_4108AC:
move    $v1, $v0

loc_4108B0:
lw      $v0, 0x38($v0)
nop
bnez    $v0, loc_4108AC
nop
sw      $v1, 0x34($s2)
sw      $s2, 0x38($v1)

loc_4108C8:
lw      $v0, 0xE8+arg_18($sp)
bnez    $s2, loc_4108F0
sw      $s2, 0($v0)
b       loc_4108E8
lui     $v0, 0x4009

loc_4108DC:
b       loc_4108F4
lui     $v0, 0x4009

loc_4108E4:
lui     $v0, 0x4009

loc_4108E8:
b       loc_4108F4
ori     $v0, 0xB

loc_4108F0:
move    $v0, $zero

loc_4108F4:
lw      $ra, 0xE8+var_4($sp)
lw      $fp, 0xE8+var_8($sp)
lw      $s7, 0xE8+var_C($sp)
lw      $s6, 0xE8+var_10($sp)
lw      $s5, 0xE8+var_14($sp)
lw      $s4, 0xE8+var_18($sp)
lw      $s3, 0xE8+var_1C($sp)
lw      $s2, 0xE8+var_20($sp)
lw      $s1, 0xE8+var_24($sp)
lw      $s0, 0xE8+var_28($sp)
jr      $ra
addiu   $sp, 0xE8
 # End of function ATP_UPnP_RegService




sub_410924:

var_38= -0x38
var_34= -0x34
var_30= -0x30
var_28= -0x28
var_20= -0x20
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x48
li      $gp, 0x42E470
sw      $ra, 0x48+var_4($sp)
sw      $s4, 0x48+var_8($sp)
sw      $s3, 0x48+var_C($sp)
sw      $s2, 0x48+var_10($sp)
sw      $s1, 0x48+var_14($sp)
sw      $s0, 0x48+var_18($sp)
sw      $gp, 0x48+var_28($sp)
move    $s2, $a0
move    $s4, $a1
beqz    $a0, loc_410B2C
move    $s0, $zero
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0x30
lw      $gp, 0x48+var_28($sp)
beqz    $v0, loc_410B2C
move    $s0, $v0
la      $t9, memset
move    $a0, $v0
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x30
lw      $a0, 4($s2)
lw      $gp, 0x48+var_28($sp)
beqz    $a0, loc_4109B8
nop
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
nop
lw      $gp, 0x48+var_28($sp)
beqz    $v0, loc_410B14
sw      $v0, 4($s0)

loc_4109B8:
lw      $a0, 0($s2)
nop
beqz    $a0, loc_4109E4
nop
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
nop
lw      $gp, 0x48+var_28($sp)
beqz    $v0, loc_410B14
sw      $v0, 0($s0)

loc_4109E4:
lw      $a0, 8($s2)
nop
beqz    $a0, loc_410A10
nop
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
nop
lw      $gp, 0x48+var_28($sp)
beqz    $v0, loc_410B14
sw      $v0, 8($s0)

loc_410A10:
lw      $a0, 0x14($s2)
nop
beqz    $a0, loc_410A3C
nop
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
nop
lw      $gp, 0x48+var_28($sp)
beqz    $v0, loc_410B14
sw      $v0, 0x14($s0)

loc_410A3C:
lui     $a0, 0x42
lw      $v1, dword_426880
lw      $a1, 0x10($s2)
lw      $a2, 0x18($s2)
addiu   $v0, $v1, 1
sw      $v1, 0xC($s0)
lw      $s1, 0x1C($s2)
sw      $v0, dword_426880
addiu   $s3, $sp, 0x48+var_20
sw      $a1, 0x10($s0)
b       loc_410AA8
sw      $a2, 0x18($s0)

loc_410A6C:
lw      $v0, 0x18($s1)
lw      $a1, 4($s1)
lw      $a2, 0x10($s1)
sltu    $v0, $zero, $v0
lw      $a3, 0x14($s1)
sw      $v0, 0x48+var_38($sp)
lw      $v0, 0x1C($s1)
sw      $s3, 0x48+var_30($sp)
jal     ATP_UPnP_RegService
sw      $v0, 0x48+var_34($sp)
lw      $gp, 0x48+var_28($sp)
bnez    $v0, loc_410B14
nop
lw      $s1, 0x38($s1)
nop

loc_410AA8:
bnez    $s1, loc_410A6C
move    $a0, $s0
li      $v0, 1
bne     $s4, $v0, loc_410AF0
nop
lw      $a0, 0x24($s2)
nop
beqz    $a0, loc_410AF0
nop
jal     sub_410924
li      $a1, 1
lw      $gp, 0x48+var_28($sp)
move    $v1, $v0
beqz    $v0, loc_410B14
sw      $v0, 0x24($s0)
lw      $v0, 0x2C($v0)
sw      $s0, 0x20($v1)
sw      $v0, 0x2C($s0)

loc_410AF0:
lw      $a0, 0x28($s2)
nop
beqz    $a0, loc_410B2C
nop
jal     sub_410924
li      $a1, 1
lw      $gp, 0x48+var_28($sp)
bnez    $v0, loc_410B28
sw      $v0, 0x28($s0)

loc_410B14:
jal     UpnpDestoryDevice
move    $a0, $s0
lw      $gp, 0x48+var_28($sp)
b       loc_410B2C
move    $s0, $zero

loc_410B28:
sw      $s0, 0x2C($v0)

loc_410B2C:
lw      $ra, 0x48+var_4($sp)
move    $v0, $s0
lw      $s4, 0x48+var_8($sp)
lw      $s3, 0x48+var_C($sp)
lw      $s2, 0x48+var_10($sp)
lw      $s1, 0x48+var_14($sp)
lw      $s0, 0x48+var_18($sp)
jr      $ra
addiu   $sp, 0x48
 # End of function sub_410924




sub_410B50:

var_198= -0x198
var_194= -0x194
var_190= -0x190
var_188= -0x188
var_180= -0x180
var_17C= -0x17C
var_178= -0x178
var_174= -0x174
var_138= -0x138
var_38= -0x38
var_34= -0x34
var_30= -0x30
var_2C= -0x2C
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x1A8
li      $gp, 0x42E470
sw      $ra, 0x1A8+var_4($sp)
sw      $fp, 0x1A8+var_8($sp)
sw      $s7, 0x1A8+var_C($sp)
sw      $s6, 0x1A8+var_10($sp)
sw      $s5, 0x1A8+var_14($sp)
sw      $s4, 0x1A8+var_18($sp)
sw      $s3, 0x1A8+var_1C($sp)
sw      $s2, 0x1A8+var_20($sp)
sw      $s1, 0x1A8+var_24($sp)
sw      $s0, 0x1A8+var_28($sp)
sw      $gp, 0x1A8+var_188($sp)
move    $s5, $a0
beqz    $a0, loc_410D5C
move    $s4, $a1
beqz    $a1, loc_410D5C
lui     $v0, 0x41
addiu   $s7, $v0, (aSS_1 - 0x410000)  # "%s%s."
addiu   $v0, $sp, 0x1A8+var_178
sw      $v0, 0x1A8+var_38($sp)
addiu   $v0, $sp, 0x1A8+var_17C
sw      $v0, 0x1A8+var_34($sp)
addiu   $v0, $sp, 0x1A8+var_174
sw      $v0, 0x1A8+var_30($sp)
addiu   $v0, $sp, 0x1A8+var_180
lw      $s0, 0x1C($a0)
li      $s6, 0xFFFFFFFF
addiu   $s3, $sp, 0x1A8+var_138
sw      $v0, 0x1A8+var_2C($sp)
b       loc_410D4C
li      $fp, 1

loc_410BD4:
lw      $v0, 0x18($s0)
nop
bne     $v0, $s6, loc_410C54
nop
lw      $v0, 0x1C($s0)
nop
bnez    $v0, loc_410C04
nop
lw      $v0, 8($s0)
nop
beqz    $v0, loc_410D5C
nop

loc_410C04:
la      $t9, snprintf
move    $a0, $s3
li      $a1, 0x100
move    $a2, $s7
move    $a3, $s4
jalr    $t9 ; snprintf
sw      $v0, 0x1A8+var_198($sp)
lw      $a1, 0x1A8+var_38($sp)
lw      $a3, 0x1A8+var_34($sp)
move    $a0, $s3
jal     sub_40D3CC
li      $a2, 0x10
lw      $gp, 0x1A8+var_188($sp)
bnez    $v0, loc_410D60
nop
lw      $v1, 0x1A8+var_17C($sp)
nop
bne     $v1, $s6, loc_410C60
li      $v0, 0xFFFFFFFE

loc_410C50:
sw      $zero, 0x18($s0)

loc_410C54:
lw      $s0, 0x38($s0)
b       loc_410D4C
nop

loc_410C60:
beq     $v1, $v0, loc_410C50
nop
bnez    $v1, loc_410C8C
move    $a0, $s0
lw      $v0, 0x38($s0)
jal     sub_40EA74
sw      $v0, 0x1A8+var_180($sp)
lw      $gp, 0x1A8+var_188($sp)
lw      $s0, 0x1A8+var_180($sp)
b       loc_410D4C
nop

loc_410C8C:
lw      $v0, 0x1A8+var_178($sp)
nop
sw      $v0, 0x18($s0)
li      $v0, 1
beq     $v1, $v0, loc_410C54
li      $s1, 1
lw      $s2, 0x1A8+var_30($sp)
b       loc_410D00
nop

loc_410CB0:
lw      $a1, 4($s0)
lw      $a2, 0x10($s0)
lw      $a3, 0x14($s0)
sw      $fp, 0x1A8+var_198($sp)
lw      $v0, 0x1C($s0)
sw      $zero, 0x1A8+var_180($sp)
sw      $v0, 0x1A8+var_194($sp)
lw      $v0, 0x1A8+var_2C($sp)
jal     ATP_UPnP_RegService
sw      $v0, 0x1A8+var_190($sp)
lw      $gp, 0x1A8+var_188($sp)
bnez    $v0, loc_410D60
nop
lw      $v1, 0x1A8+var_180($sp)
nop
beqz    $v1, loc_410D60
lui     $v0, 0x4009
lw      $v0, 0($s2)
addiu   $s2, 4
sw      $v0, 0x18($v1)

loc_410D00:
lw      $v0, 0x1A8+var_17C($sp)
move    $a0, $s5
sltu    $v0, $s1, $v0
bnez    $v0, loc_410CB0
addiu   $s1, 1
b       loc_410D34
nop

loc_410D1C:
lw      $v0, 0x18($s0)
nop
addiu   $v0, -1
sltiu   $v0, -2
beqz    $v0, loc_410D4C
nop

loc_410D34:
lw      $s0, 0x38($s0)
nop
bnez    $s0, loc_410D1C
move    $v0, $zero
b       loc_410D60
nop

loc_410D4C:
bnez    $s0, loc_410BD4
move    $v0, $zero
b       loc_410D60
nop

loc_410D5C:
lui     $v0, 0x4009

loc_410D60:
lw      $ra, 0x1A8+var_4($sp)
lw      $fp, 0x1A8+var_8($sp)
lw      $s7, 0x1A8+var_C($sp)
lw      $s6, 0x1A8+var_10($sp)
lw      $s5, 0x1A8+var_14($sp)
lw      $s4, 0x1A8+var_18($sp)
lw      $s3, 0x1A8+var_1C($sp)
lw      $s2, 0x1A8+var_20($sp)
lw      $s1, 0x1A8+var_24($sp)
lw      $s0, 0x1A8+var_28($sp)
jr      $ra
addiu   $sp, 0x1A8
 # End of function sub_410B50




sub_410D90:

var_280= -0x280
var_278= -0x278
var_270= -0x270
var_26C= -0x26C
var_268= -0x268
var_22C= -0x22C
var_12C= -0x12C
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x290
li      $gp, 0x42E470
sw      $ra, 0x290+var_4($sp)
sw      $fp, 0x290+var_8($sp)
sw      $s7, 0x290+var_C($sp)
sw      $s6, 0x290+var_10($sp)
sw      $s5, 0x290+var_14($sp)
sw      $s4, 0x290+var_18($sp)
sw      $s3, 0x290+var_1C($sp)
sw      $s2, 0x290+var_20($sp)
sw      $s1, 0x290+var_24($sp)
sw      $s0, 0x290+var_28($sp)
sw      $gp, 0x290+var_278($sp)
move    $s2, $a0
beqz    $a0, loc_411040
lui     $s0, 0x4009
lw      $s0, 0x10($a0)
li      $v0, 0xFFFFFFFF
bne     $s0, $v0, loc_410DE8
addiu   $s1, $sp, 0x290+var_22C
sw      $zero, 0x10($a0)

loc_410DE8:
move    $a0, $s2
move    $a1, $s1
li      $a2, 0x100
jal     sub_40CF0C
move    $a3, $zero
lw      $gp, 0x290+var_278($sp)
bnez    $v0, loc_41103C
move    $fp, $v0
li      $v0, 0xFFFFFFFF
bne     $s0, $v0, loc_410FC8
sw      $s0, 0x10($s2)
move    $a0, $s1
addiu   $a1, $sp, 0x290+var_26C
li      $a2, 0x10
jal     sub_40D3CC
addiu   $a3, $sp, 0x290+var_270
lw      $gp, 0x290+var_278($sp)
bnez    $v0, loc_411040
move    $s0, $v0
lw      $a1, 0x290+var_270($sp)
nop
addiu   $v0, $a1, 2
sltiu   $v0, 2
beqz    $v0, loc_410E54
lui     $v0, 0x4009
b       loc_411040
ori     $s0, $v0, 0xB

loc_410E54:
bnez    $a1, loc_410E70
lui     $a0, 0x42
jal     sub_40E87C
move    $a0, $s2
lw      $gp, 0x290+var_278($sp)
b       loc_411040
nop

loc_410E70:
lw      $v0, (dword_426880 - 0x420000)($a0)
lw      $a2, 0x290+var_26C($sp)
addiu   $v1, $v0, 1
sw      $v0, 0xC($s2)
li      $v0, 1
sw      $a2, 0x10($s2)
beq     $a1, $v0, loc_410EB0
sw      $v1, (dword_426880 - 0x420000)($a0)
lui     $v0, 0x41
move    $s7, $s1
addiu   $s6, $v0, (aSD_0 - 0x410000)  # "%s%d."
addiu   $s4, $sp, 0x290+var_268
move    $s0, $s2
li      $s3, 1
b       loc_410F50
addiu   $s5, $sp, 0x290+var_12C

loc_410EB0:
addiu   $s0, $sp, 0x290+var_12C
sw      $a2, 0x290+var_280($sp)
lui     $a2, 0x41
la      $t9, snprintf
la      $a2, aSD_0       # "%s%d."
move    $a3, $s1
move    $a0, $s0
b       loc_410F8C
li      $a1, 0x100

loc_410ED4:
jal     sub_410924
nop
lw      $gp, 0x290+var_278($sp)
move    $a0, $s5
li      $a1, 0x100
la      $t9, snprintf
move    $a2, $s6
move    $a3, $s7
beqz    $v0, loc_411074
move    $s1, $v0
lw      $v0, 0x24($s0)
lw      $t0, 0($s4)
lw      $v1, 0x2C($s2)
sw      $v0, 0x24($s1)
lw      $v0, 0x24($s0)
addiu   $s4, 4
sw      $v1, 0x2C($s1)
sw      $s0, 0x20($s1)
beqz    $v0, loc_410F28
sw      $t0, 0x10($s1)
sw      $s1, 0x20($v0)

loc_410F28:
sw      $s1, 0x24($s0)
jalr    $t9 ; snprintf
sw      $t0, 0x290+var_280($sp)
move    $a0, $s1
jal     sub_410B50
move    $a1, $s5
lw      $gp, 0x290+var_278($sp)
bnez    $v0, loc_411040
move    $s0, $v0
move    $s0, $s1

loc_410F50:
lw      $v0, 0x290+var_270($sp)
move    $a0, $s2
move    $a1, $zero
sltu    $v0, $s3, $v0
bnez    $v0, loc_410ED4
addiu   $s3, 1
lw      $v0, 0x290+var_26C($sp)
la      $t9, snprintf
addiu   $s0, $sp, 0x290+var_12C
lui     $a2, 0x41
sw      $v0, 0x290+var_280($sp)
la      $a2, aSD_0       # "%s%d."
move    $a0, $s0
li      $a1, 0x100
addiu   $a3, $sp, 0x290+var_22C

loc_410F8C:
jalr    $t9 ; snprintf
nop
move    $a1, $s0
jal     sub_410B50
move    $a0, $s2
lw      $gp, 0x290+var_278($sp)
bnez    $v0, loc_411040
move    $s0, $v0
move    $a0, $s2
addiu   $a1, $sp, 0x290+var_22C
li      $a2, 0x100
jal     sub_40CF0C
move    $a3, $zero
b       loc_410FE8
nop

loc_410FC8:
lui     $v1, 0x42
lw      $v0, dword_426880
move    $a1, $s1
move    $a0, $s2
sw      $v0, 0xC($s2)
addiu   $v0, 1
jal     sub_410B50
sw      $v0, dword_426880

loc_410FE8:
lw      $gp, 0x290+var_278($sp)
bnez    $v0, loc_411040
move    $s0, $v0
lw      $a0, 0x24($s2)
nop
beqz    $a0, loc_411018
nop
jal     sub_410D90
nop
lw      $gp, 0x290+var_278($sp)
bnez    $v0, loc_411040
move    $s0, $v0

loc_411018:
lw      $a0, 0x28($s2)
nop
beqz    $a0, loc_41103C
nop
jal     sub_410D90
nop
lw      $gp, 0x290+var_278($sp)
b       loc_411040
move    $s0, $v0

loc_41103C:
move    $s0, $fp

loc_411040:
lw      $ra, 0x290+var_4($sp)
move    $v0, $s0
lw      $fp, 0x290+var_8($sp)
lw      $s7, 0x290+var_C($sp)
lw      $s6, 0x290+var_10($sp)
lw      $s5, 0x290+var_14($sp)
lw      $s4, 0x290+var_18($sp)
lw      $s3, 0x290+var_1C($sp)
lw      $s2, 0x290+var_20($sp)
lw      $s1, 0x290+var_24($sp)
lw      $s0, 0x290+var_28($sp)
jr      $ra
addiu   $sp, 0x290

loc_411074:
lui     $v0, 0x4009
b       loc_411040
ori     $s0, $v0, 2
 # End of function sub_410D90




.globl ATP_UPNP_RefreshFromDB
ATP_UPNP_RefreshFromDB:

var_30= -0x30
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x40
li      $gp, 0x42E470
sw      $ra, 0x40+var_4($sp)
sw      $s7, 0x40+var_8($sp)
sw      $s6, 0x40+var_C($sp)
sw      $s5, 0x40+var_10($sp)
sw      $s4, 0x40+var_14($sp)
sw      $s3, 0x40+var_18($sp)
sw      $s2, 0x40+var_1C($sp)
sw      $s1, 0x40+var_20($sp)
sw      $s0, 0x40+var_24($sp)
sw      $gp, 0x40+var_30($sp)
la      $s0, g_pstUpnpGvarHead
lui     $v0, 0x42
sw      $zero, dword_426880
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($s0)
nop
lw      $a0, 0($v0)
jal     sub_410D90
nop
lw      $gp, 0x40+var_30($sp)
bnez    $v0, loc_4113CC
move    $s4, $v0
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($s0)
nop
lw      $s1, 0($v0)
lui     $v0, 0x41
addiu   $s7, $v0, (aWanconnectiond - 0x410000)  # "WANConnectionDevice:1"
lui     $v0, 0x41
addiu   $s6, $v0, (aWanipconnectio - 0x410000)  # "WANIPConnection:1"
lui     $v0, 0x41
b       loc_411278
addiu   $s5, $v0, (aWanpppconnecti - 0x410000)  # "WANPPPConnection:1"

loc_411108:
la      $t9, strcmp
lw      $a1, 4($s1)
jalr    $t9 ; strcmp
move    $a0, $s7
lw      $gp, 0x40+var_30($sp)
bnez    $v0, loc_411244
move    $s3, $zero
lw      $s2, 0x1C($s1)
b       loc_411180
nop

loc_411130:
lw      $s0, 4($s2)
jalr    $t9 ; strcmp
move    $a1, $s0
lw      $gp, 0x40+var_30($sp)
move    $a1, $s0
la      $t9, strcmp
beqz    $v0, loc_411164
move    $a0, $s5
jalr    $t9 ; strcmp
nop
lw      $gp, 0x40+var_30($sp)
bnez    $v0, loc_41117C
nop

loc_411164:
jal     sub_40DA64
move    $a0, $s2
xori    $v0, 1
lw      $gp, 0x40+var_30($sp)
sltiu   $v0, 1
addu    $s3, $v0

loc_41117C:
lw      $s2, 0x38($s2)

loc_411180:
la      $t9, strcmp
bnez    $s2, loc_411130
move    $a0, $s6
bnez    $s3, loc_411244
nop
lw      $s0, 0x24($s1)
lw      $v0, 0x20($s1)
bnez    $s0, loc_411200
nop
beqz    $v0, loc_4111B4
nop
b       loc_4111C8
sw      $zero, 0x24($v0)

loc_4111B4:
lw      $v0, 0x2C($s1)
nop
beqz    $v0, loc_4111C8
nop
sw      $zero, 0x28($v0)

loc_4111C8:
lw      $s0, 0x28($s1)
nop
bnez    $s0, loc_411230
move    $v0, $s1

loc_4111D8:
lw      $s0, 0x24($v0)
nop
bnez    $s0, loc_411230
nop
lw      $v0, 0x2C($v0)
nop
bnez    $v0, loc_4111D8
nop
b       loc_411230
nop

loc_411200:
beqz    $v0, loc_411210
nop
b       loc_411224
sw      $s0, 0x24($v0)

loc_411210:
lw      $v0, 0x2C($s1)
nop
beqz    $v0, loc_411224
nop
sw      $s0, 0x28($v0)

loc_411224:
lw      $v0, 0x20($s1)
sw      $zero, 0x24($s1)
sw      $v0, 0x20($s0)

loc_411230:
jal     UpnpDestoryDevice
move    $a0, $s1
lw      $gp, 0x40+var_30($sp)
b       loc_411278
move    $s1, $s0

loc_411244:
lw      $s0, 0x28($s1)
nop
bnez    $s0, loc_411274
nop

loc_411254:
lw      $s0, 0x24($s1)
nop
bnez    $s0, loc_411274
nop
lw      $s1, 0x2C($s1)
nop
bnez    $s1, loc_411254
nop

loc_411274:
move    $s1, $s0

loc_411278:
bnez    $s1, loc_411108
lui     $v0, 0x41
addiu   $s2, $v0, (aWandevice1 - 0x410000)  # "WANDevice:1"
la      $v0, g_pstUpnpGvarHead
nop
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $s0, 0($v0)
b       loc_4113B0
nop

loc_4112A0:
la      $t9, strcmp
lw      $a1, 4($s0)
jalr    $t9 ; strcmp
move    $a0, $s2
lw      $gp, 0x40+var_30($sp)
bnez    $v0, loc_41137C
nop
lw      $v0, 0x28($s0)
nop
bnez    $v0, loc_41137C
nop
lw      $s1, 0x24($s0)
lw      $v0, 0x20($s0)
bnez    $s1, loc_411338
nop
beqz    $v0, loc_4112EC
nop
b       loc_411300
sw      $zero, 0x24($v0)

loc_4112EC:
lw      $v0, 0x2C($s0)
nop
beqz    $v0, loc_411300
nop
sw      $zero, 0x28($v0)

loc_411300:
lw      $s1, 0x28($s0)
nop
bnez    $s1, loc_411368
move    $v0, $s0

loc_411310:
lw      $s1, 0x24($v0)
nop
bnez    $s1, loc_411368
nop
lw      $v0, 0x2C($v0)
nop
bnez    $v0, loc_411310
nop
b       loc_411368
nop

loc_411338:
beqz    $v0, loc_411348
nop
b       loc_41135C
sw      $s1, 0x24($v0)

loc_411348:
lw      $v0, 0x2C($s0)
nop
beqz    $v0, loc_41135C
nop
sw      $s1, 0x28($v0)

loc_41135C:
lw      $v0, 0x20($s0)
sw      $zero, 0x24($s0)
sw      $v0, 0x20($s1)

loc_411368:
jal     UpnpDestoryDevice
move    $a0, $s0
lw      $gp, 0x40+var_30($sp)
b       loc_4113B0
move    $s0, $s1

loc_41137C:
lw      $s1, 0x28($s0)
nop
bnez    $s1, loc_4113AC
nop

loc_41138C:
lw      $s1, 0x24($s0)
nop
bnez    $s1, loc_4113AC
nop
lw      $s0, 0x2C($s0)
nop
bnez    $s0, loc_41138C
nop

loc_4113AC:
move    $s0, $s1

loc_4113B0:
bnez    $s0, loc_4112A0
nop
jal     sub_40EAF0
nop
jal     sub_40DD88
nop
lw      $gp, 0x40+var_30($sp)

loc_4113CC:
lw      $ra, 0x40+var_4($sp)
move    $v0, $s4
lw      $s7, 0x40+var_8($sp)
lw      $s6, 0x40+var_C($sp)
lw      $s5, 0x40+var_10($sp)
lw      $s4, 0x40+var_14($sp)
lw      $s3, 0x40+var_18($sp)
lw      $s2, 0x40+var_1C($sp)
lw      $s1, 0x40+var_20($sp)
lw      $s0, 0x40+var_24($sp)
jr      $ra
addiu   $sp, 0x40
 # End of function ATP_UPNP_RefreshFromDB




.globl ATP_UPNP_RefreshUpnpTree
ATP_UPNP_RefreshUpnpTree:

var_10= -0x10
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x20
li      $gp, 0x42E470
sw      $ra, 0x20+var_4($sp)
sw      $s0, 0x20+var_8($sp)
sw      $gp, 0x20+var_10($sp)
la      $t9, ATP_UPNP_DestroyAllDevices
nop
jalr    $t9 ; ATP_UPNP_DestroyAllDevices
nop
lw      $gp, 0x20+var_10($sp)
nop
la      $t9, ATP_UPNP_RegDeviceAndService
nop
jalr    $t9 ; ATP_UPNP_RegDeviceAndService
nop
jal     ATP_UPNP_RefreshFromDB
move    $s0, $v0
lw      $ra, 0x20+var_4($sp)
addu    $v0, $s0
lw      $gp, 0x20+var_10($sp)
lw      $s0, 0x20+var_8($sp)
jr      $ra
addiu   $sp, 0x20
 # End of function ATP_UPNP_RefreshUpnpTree




.globl ATP_UPnP_RegDevice
ATP_UPnP_RegDevice:

var_78= -0x78
var_70= -0x70
var_6C= -0x6C
var_68= -0x68
var_64= -0x64
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4
arg_10=  0x10
arg_14=  0x14
arg_18=  0x18

lui     $gp, 0x43
addiu   $sp, -0x88
li      $gp, 0x42E470
sw      $ra, 0x88+var_4($sp)
sw      $s6, 0x88+var_8($sp)
sw      $s5, 0x88+var_C($sp)
sw      $s4, 0x88+var_10($sp)
sw      $s3, 0x88+var_14($sp)
sw      $s2, 0x88+var_18($sp)
sw      $s1, 0x88+var_1C($sp)
sw      $s0, 0x88+var_20($sp)
sw      $gp, 0x88+var_78($sp)
move    $s2, $a2
move    $s3, $a0
move    $s4, $a1
lw      $s5, 0x88+arg_14($sp)
lw      $s6, 0x88+arg_18($sp)
beqz    $a2, loc_4117E0
move    $s1, $a3
addiu   $v0, $a3, -1
sltiu   $v0, 3
beqz    $v0, loc_4117E4
lui     $v0, 0x4009
la      $v0, g_pstUpnpGvarHead
bnez    $a0, loc_4114E4
nop
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $v0, 0($v0)
nop
bnez    $v0, loc_4117E4
lui     $v0, 0x4009
b       loc_4114FC
nop

loc_4114E4:
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $v0, 0($v0)
nop
beqz    $v0, loc_4117E4
lui     $v0, 0x4009

loc_4114FC:
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0x30
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_411744
move    $s0, $v0
la      $t9, memset
move    $a0, $v0
move    $a1, $zero
jalr    $t9 ; memset
li      $a2, 0x30
sw      $s1, 0x18($s0)
move    $a0, $s2
addiu   $a1, $sp, 0x88+var_68
addiu   $a2, $sp, 0x88+var_70
addiu   $a3, $sp, 0x88+var_6C
sw      $zero, 0x88+var_68($sp)
sw      $zero, 0x88+var_70($sp)
jal     sub_40EE0C
sw      $zero, 0x88+var_6C($sp)
lw      $gp, 0x88+var_78($sp)
bnez    $v0, loc_4115B8
nop
lw      $s1, 0x88+var_70($sp)
lw      $v0, 0x88+var_6C($sp)
beqz    $s1, loc_4115D0
sw      $v0, 4($s0)
la      $t9, strncmp
la      $a1, aDevice     # "device"
move    $a0, $s1
jalr    $t9 ; strncmp
li      $a2, 6
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_4115D0
nop
la      $t9, ATP_UPNP_Free
lw      $a0, 0x88+var_68($sp)
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x88+var_78($sp)
lw      $a0, 0x88+var_70($sp)
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop

loc_4115B8:
jal     sub_40E7A0
move    $a0, $s0
lui     $v0, 0x4009
lw      $gp, 0x88+var_78($sp)
b       loc_4117E4
li      $v0, 0x40090005

loc_4115D0:
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
move    $a0, $s1
lw      $s1, 0x88+var_68($sp)
lw      $gp, 0x88+var_78($sp)
beqz    $s1, loc_4116A0
sw      $zero, 0x88+var_70($sp)
la      $t9, strncmp
la      $a1, aSchemasUpnpOrg  # "schemas-upnp-org"
move    $a0, $s1
jalr    $t9 ; strncmp
li      $a2, 0x10
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_4116A0
lui     $a1, 0x41
la      $t9, strncmp
la      $a1, aDslforumOrg  # "dslforum-org"
move    $a0, $s1
jalr    $t9 ; strncmp
li      $a2, 0xC
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_4116A0
move    $a0, $s1
addiu   $s2, $sp, 0x88+var_64
move    $a1, $s2
jal     sub_40F56C
li      $a2, 0x40
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_411668
nop
la      $t9, ATP_UPNP_Free
lw      $a0, 0x88+var_68($sp)
jalr    $t9 ; ATP_UPNP_Free
nop
b       loc_411738
nop

loc_411668:
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
move    $a0, $s2
lw      $gp, 0x88+var_78($sp)
lw      $a0, 0x88+var_68($sp)
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
sw      $v0, 0($s0)
lw      $v0, 0($s0)
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_411738
nop

loc_4116A0:
beqz    $s4, loc_4116C4
nop
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
move    $a0, $s4
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_411738
sw      $v0, 8($s0)

loc_4116C4:
sw      $zero, 0x10($s0)
lw      $v0, 0x88+arg_10($sp)
nop
beqz    $v0, loc_4116DC
li      $v0, 0xFFFFFFFF
sw      $v0, 0x10($s0)

loc_4116DC:
bnez    $s5, loc_411710
sw      $zero, 0x14($s0)
lw      $a0, 4($s0)
addiu   $s1, $sp, 0x88+var_64
move    $a1, $s1
jal     sub_40F56C
li      $a2, 0x40
lw      $gp, 0x88+var_78($sp)
bnez    $v0, loc_411728
move    $a0, $s1
la      $t9, ATP_UPNP_StrDup
b       loc_411718
nop

loc_411710:
la      $t9, ATP_UPNP_StrDup
move    $a0, $s5

loc_411718:
jalr    $t9 ; ATP_UPNP_StrDup
nop
lw      $gp, 0x88+var_78($sp)
sw      $v0, 0x14($s0)

loc_411728:
lw      $v0, 0x14($s0)
nop
bnez    $v0, loc_411750
nop

loc_411738:
jal     sub_40E7A0
move    $a0, $s0
lw      $gp, 0x88+var_78($sp)

loc_411744:
lui     $v0, 0x4009
b       loc_4117E4
li      $v0, 0x40090002

loc_411750:
beqz    $s6, loc_41175C
sw      $s3, 0x2C($s0)
sw      $s0, 0($s6)

loc_41175C:
la      $v0, g_pstUpnpGvarHead
nop
lw      $v1, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $v0, 0($v1)
nop
bnez    $v0, loc_411784
nop
b       loc_4117E4
sw      $s0, 0($v1)

loc_411784:
bnez    $s3, loc_4117A0
nop
jal     sub_40E7A0
move    $a0, $s0
lw      $gp, 0x88+var_78($sp)
b       loc_4117E4
lui     $v0, 0x4009

loc_4117A0:
lw      $v0, 0x28($s3)
nop
bnez    $v0, loc_4117C8
move    $v1, $v0
b       loc_4117E4
sw      $s0, 0x28($s3)

loc_4117B8:
sw      $s0, 0x24($v1)
b       loc_4117E4
move    $v0, $zero

loc_4117C4:
move    $v1, $v0

loc_4117C8:
lw      $v0, 0x24($v0)
nop
bnez    $v0, loc_4117C4
nop
b       loc_4117B8
sw      $v1, 0x20($s0)

loc_4117E0:
lui     $v0, 0x4009

loc_4117E4:
lw      $ra, 0x88+var_4($sp)
lw      $s6, 0x88+var_8($sp)
lw      $s5, 0x88+var_C($sp)
lw      $s4, 0x88+var_10($sp)
lw      $s3, 0x88+var_14($sp)
lw      $s2, 0x88+var_18($sp)
lw      $s1, 0x88+var_1C($sp)
lw      $s0, 0x88+var_20($sp)
jr      $ra
addiu   $sp, 0x88
 # End of function ATP_UPnP_RegDevice




sub_41180C:

var_1E8= -0x1E8
var_1E4= -0x1E4
var_1E0= -0x1E0
var_1DC= -0x1DC
var_1D8= -0x1D8
var_1D4= -0x1D4
var_1D0= -0x1D0
var_1C8= -0x1C8
var_1C0= -0x1C0
var_1BC= -0x1BC
var_1B8= -0x1B8
var_1B4= -0x1B4
var_1B0= -0x1B0
var_1AC= -0x1AC
var_16D= -0x16D
var_16C= -0x16C
var_12C= -0x12C
var_EC= -0xEC
var_A8= -0xA8
var_A4= -0xA4
var_A0= -0xA0
var_9C= -0x9C
var_98= -0x98
var_94= -0x94
var_90= -0x90
var_8C= -0x8C
var_88= -0x88
var_84= -0x84
var_80= -0x80
var_7C= -0x7C
var_78= -0x78
var_74= -0x74
var_70= -0x70
var_6C= -0x6C
var_68= -0x68
var_64= -0x64
var_60= -0x60
var_5C= -0x5C
var_58= -0x58
var_54= -0x54
var_50= -0x50
var_4C= -0x4C
var_48= -0x48
var_44= -0x44
var_40= -0x40
var_3C= -0x3C
var_38= -0x38
var_34= -0x34
var_30= -0x30
var_2C= -0x2C
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4
arg_0=  0
arg_4=  4
arg_8=  8
arg_C=  0xC

lui     $gp, 0x43
addiu   $sp, -0x1E8
li      $gp, 0x42E470
sw      $ra, 0x1E8+var_4($sp)
sw      $fp, 0x1E8+var_8($sp)
sw      $s7, 0x1E8+var_C($sp)
sw      $s6, 0x1E8+var_10($sp)
sw      $s5, 0x1E8+var_14($sp)
sw      $s4, 0x1E8+var_18($sp)
sw      $s3, 0x1E8+var_1C($sp)
sw      $s2, 0x1E8+var_20($sp)
sw      $s1, 0x1E8+var_24($sp)
sw      $s0, 0x1E8+var_28($sp)
sw      $gp, 0x1E8+var_1C8($sp)
sw      $a0, 0x1E8+arg_0($sp)
sw      $a1, 0x1E8+arg_4($sp)
sw      $a2, 0x1E8+arg_8($sp)
beqz    $a0, loc_412604
sw      $a3, 0x1E8+arg_C($sp)
beqz    $a1, loc_412604
xori    $v0, $a2, 1
lw      $a0, 0x18($a0)
sltiu   $v0, 1
li      $v1, 2
subu    $v1, $v0
and     $v1, $a0
beqz    $v1, loc_41260C
sw      $zero, 0x1E8+var_70($sp)
b       loc_412640
addiu   $v0, $sp, 0x1E8+var_1C0

loc_411884:
lw      $a0, 0x1E8+arg_0($sp)
lw      $a3, 0x1E8+arg_8($sp)
move    $a1, $s0
jal     UpnpGetDeviceType
li      $a2, 0x40
lw      $gp, 0x1E8+var_1C8($sp)
addiu   $v0, $sp, 0x1E8+var_1BC
lui     $a2, 0x41
la      $t9, TSP_XML_CreateNode
la      $a2, aDevicetype  # "deviceType"
move    $a0, $zero
move    $a1, $zero
move    $a3, $s0
jalr    $t9 ; TSP_XML_CreateNode
sw      $v0, 0x1E8+var_1D8($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1BC($sp)
lw      $a0, 0x1E8+var_1C0($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
sw      $v0, 0x1E8+var_9C($sp)
lw      $v1, 0x1E8+arg_0($sp)
lw      $gp, 0x1E8+var_1C8($sp)
sw      $v0, 0x1E8+var_3C($sp)
lw      $a1, 8($v1)
lw      $s3, 0x1E8+var_1BC($sp)
bnez    $a1, loc_411914
sb      $zero, 0x1E8+var_1AC($sp)
lw      $a0, 4($v1)
move    $a1, $s0
jal     sub_40F56C
li      $a2, 0x40
lw      $gp, 0x1E8+var_1C8($sp)
b       loc_41192C
nop

loc_411914:
la      $t9, strncpy
move    $a0, $s0
jalr    $t9 ; strncpy
li      $a2, 0x40
lw      $gp, 0x1E8+var_1C8($sp)
sb      $zero, 0x1E8+var_16D($sp)

loc_41192C:
la      $t9, TSP_XML_CreateNode
addiu   $s1, $sp, 0x1E8+var_1BC
la      $a2, aFriendlyname  # "friendlyName"
addiu   $a3, $sp, 0x1E8+var_1AC
sw      $s1, 0x1E8+var_1D8($sp)
move    $a0, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1BC($sp)
move    $a0, $s3
la      $t9, TSP_XML_AddNextSiblingNode
la      $s2, g_stDevDesc
jalr    $t9 ; TSP_XML_AddNextSiblingNode
sw      $v0, 0x1E8+var_40($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a3, (g_stDevDesc - 0x426850)($s2)
lui     $a2, 0x41
la      $t9, TSP_XML_CreateNode
la      $a2, aManufacturer  # "manufacturer"
sw      $s1, 0x1E8+var_1D8($sp)
move    $a0, $zero
sw      $v0, 0x1E8+var_44($sp)
lw      $s0, 0x1E8+var_1BC($sp)
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1BC($sp)
move    $a0, $s0
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
sw      $v0, 0x1E8+var_48($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a3, (dword_426868 - 0x426850)($s2)
lui     $a2, 0x41
la      $t9, TSP_XML_CreateNode
la      $a2, aManufacturerur  # "manufacturerURL"
sw      $s1, 0x1E8+var_1D8($sp)
move    $a0, $zero
sw      $v0, 0x1E8+var_4C($sp)
lw      $s0, 0x1E8+var_1BC($sp)
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1BC($sp)
move    $a0, $s0
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
sw      $v0, 0x1E8+var_50($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a3, (dword_42685C - 0x426850)($s2)
lui     $a2, 0x41
la      $t9, TSP_XML_CreateNode
la      $a2, aModeldescripti  # "modelDescription"
sw      $s1, 0x1E8+var_1D8($sp)
move    $a0, $zero
sw      $v0, 0x1E8+var_54($sp)
lw      $s0, 0x1E8+var_1BC($sp)
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1BC($sp)
move    $a0, $s0
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
sw      $v0, 0x1E8+var_58($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a3, (dword_426854 - 0x426850)($s2)
lui     $a2, 0x41
la      $t9, TSP_XML_CreateNode
la      $a2, aModelname  # "modelName"
sw      $s1, 0x1E8+var_1D8($sp)
move    $a0, $zero
sw      $v0, 0x1E8+var_5C($sp)
lw      $s0, 0x1E8+var_1BC($sp)
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1BC($sp)
move    $a0, $s0
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
sw      $v0, 0x1E8+var_60($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a3, (dword_426858 - 0x426850)($s2)
lui     $a2, 0x41
la      $t9, TSP_XML_CreateNode
la      $a2, aModelnumber  # "modelNumber"
sw      $s1, 0x1E8+var_1D8($sp)
move    $a0, $zero
sw      $v0, 0x1E8+var_64($sp)
lw      $s0, 0x1E8+var_1BC($sp)
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1BC($sp)
move    $a0, $s0
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
sw      $v0, 0x1E8+var_68($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a3, (dword_426864 - 0x426850)($s2)
lui     $a2, 0x41
la      $t9, TSP_XML_CreateNode
la      $a2, aModelurl   # "modelURL"
sw      $s1, 0x1E8+var_1D8($sp)
move    $a0, $zero
sw      $v0, 0x1E8+var_6C($sp)
lw      $s0, 0x1E8+var_1BC($sp)
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1BC($sp)
move    $a0, $s0
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
move    $fp, $v0
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a3, 0x10($s2)
lui     $a2, 0x41
la      $t9, TSP_XML_CreateNode
la      $a2, aSerialnumber  # "serialNumber"
sw      $s1, 0x1E8+var_1D8($sp)
move    $a0, $zero
move    $a1, $zero
lw      $s0, 0x1E8+var_1BC($sp)
jalr    $t9 ; TSP_XML_CreateNode
move    $s6, $v0
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1BC($sp)
move    $a0, $s0
la      $t9, TSP_XML_AddNextSiblingNode
move    $s5, $v0
jalr    $t9 ; TSP_XML_AddNextSiblingNode
addiu   $s0, $sp, 0x1E8+var_16C
lw      $a1, 0x1E8+arg_0($sp)
lw      $a3, 0x1E8+arg_8($sp)
li      $a2, 0x40
lw      $a0, 0xC($a1)
move    $a1, $s0
lw      $s3, 0x1E8+var_1BC($sp)
move    $s4, $v0
jal     UpnpGetDeviceUuid
sb      $zero, 0x1E8+var_16C($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lui     $a2, 0x41
move    $a3, $s0
la      $t9, TSP_XML_CreateNode
la      $a2, aUdn        # "UDN"
sw      $s1, 0x1E8+var_1D8($sp)
move    $a0, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1BC($sp)
move    $a0, $s3
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
move    $s3, $v0
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a3, 0x1C($s2)
lui     $a2, 0x41
la      $t9, TSP_XML_CreateNode
sw      $s1, 0x1E8+var_1D8($sp)
la      $a2, aUpc        # "UPC"
move    $a0, $zero
move    $a1, $zero
lw      $s0, 0x1E8+var_1BC($sp)
jalr    $t9 ; TSP_XML_CreateNode
move    $s1, $v0
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1BC($sp)
move    $a0, $s0
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
move    $s0, $v0
lw      $a0, 0x1E8+var_3C($sp)
lw      $a1, 0x1E8+var_9C($sp)
lw      $gp, 0x1E8+var_1C8($sp)
addu    $v1, $a0, $a1
lw      $a0, 0x1E8+var_40($sp)
lw      $a1, 0x1E8+var_44($sp)
addu    $v1, $a0
lw      $a0, 0x1E8+var_48($sp)
addu    $v1, $a1
lw      $a1, 0x1E8+var_4C($sp)
addu    $v1, $a0
lw      $a0, 0x1E8+var_50($sp)
addu    $v1, $a1
lw      $a1, 0x1E8+var_54($sp)
addu    $v1, $a0
lw      $a0, 0x1E8+var_58($sp)
addu    $v1, $a1
lw      $a1, 0x1E8+var_5C($sp)
addu    $v1, $a0
lw      $a0, 0x1E8+var_60($sp)
addu    $v1, $a1
lw      $a1, 0x1E8+var_64($sp)
addu    $v1, $a0
lw      $a0, 0x1E8+var_68($sp)
addu    $v1, $a1
lw      $a1, 0x1E8+var_6C($sp)
addu    $v1, $a0
addu    $v1, $a1
addu    $v1, $fp
addu    $v1, $s6
addu    $v1, $s5
addu    $v1, $s4
addu    $v1, $s3
addu    $v1, $s1
addu    $v1, $s0
addu    $v1, $v0
lw      $v0, 0x1E8+var_1BC($sp)
sw      $v1, 0x1E8+var_70($sp)
beqz    $v1, loc_411CC8
sw      $v0, 0x1E8+var_A0($sp)
la      $t9, TSP_XML_FreeNode
lw      $a0, 0x1E8+var_1C0($sp)
jalr    $t9 ; TSP_XML_FreeNode
nop
b       loc_4125F8
nop

loc_411CC8:
lw      $v1, 0x1E8+arg_0($sp)
nop
lw      $v0, 0x2C($v1)
nop
bnez    $v0, loc_411FE4
lui     $v0, 0x42
lw      $s0, dword_426884
nop
beqz    $s0, loc_411FE4
addiu   $v0, $sp, 0x1E8+var_1B8
la      $t9, TSP_XML_CreateNode
lui     $a2, 0x41
sw      $v0, 0x1E8+var_1D8($sp)
sw      $zero, 0x1E8+var_1B8($sp)
la      $a2, aIconlist   # "iconList"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a3, $zero
lw      $gp, 0x1E8+var_1C8($sp)
sw      $v0, 0x1E8+var_A4($sp)
move    $fp, $s0
bnez    $v0, loc_411FDC
move    $s7, $zero
addiu   $a0, $sp, 0x1E8+var_1B4
addiu   $a1, $sp, 0x1E8+var_1B0
addiu   $v0, $sp, 0x1E8+var_12C
sw      $a0, 0x1E8+var_34($sp)
sw      $a1, 0x1E8+var_30($sp)
sw      $v0, 0x1E8+var_2C($sp)

loc_411D40:
lw      $v1, 0x1E8+var_34($sp)
la      $t9, TSP_XML_CreateNode
lui     $a2, 0x41
sw      $v1, 0x1E8+var_1D8($sp)
la      $a2, aIcon       # "icon"
move    $a3, $zero
move    $a0, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a0, 0x1E8+var_1B8($sp)
lw      $a1, 0x1E8+var_1B4($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
sw      $v0, 0x1E8+var_80($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a0, 0x1E8+var_30($sp)
lw      $a3, 0x1E8+var_1E4($fp)
la      $t9, TSP_XML_CreateNode
la      $a2, aMimetype   # "mimetype"
sw      $a0, 0x1E8+var_1D8($sp)
move    $a1, $zero
move    $a0, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $s0, $v0
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a0, 0x1E8+var_1B4($sp)
lw      $a1, 0x1E8+var_1B0($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
sw      $v0, 0x1E8+var_7C($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a3, 0x1E8+var_1DC($fp)
lw      $a0, 0x1E8+var_2C($sp)
la      $t9, snprintf
lui     $a2, 0x41
li      $a1, 0x40
la      $a2, (aMaxAgeD+8)  # "%d"
jalr    $t9 ; snprintf
sw      $v0, 0x1E8+var_78($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_30($sp)
lw      $a3, 0x1E8+var_2C($sp)
la      $t9, TSP_XML_CreateNode
la      $a2, aWidth      # "width"
sw      $a1, 0x1E8+var_1D8($sp)
move    $a0, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a0, 0x1E8+var_1B4($sp)
lw      $a1, 0x1E8+var_1B0($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
sw      $v0, 0x1E8+var_74($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a3, 0x1E8+var_1E0($fp)
lw      $a0, 0x1E8+var_2C($sp)
la      $t9, snprintf
lui     $a2, 0x41
li      $a1, 0x40
la      $a2, (aMaxAgeD+8)  # "%d"
jalr    $t9 ; snprintf
move    $s6, $v0
lw      $gp, 0x1E8+var_1C8($sp)
lw      $v0, 0x1E8+var_30($sp)
lw      $a3, 0x1E8+var_2C($sp)
la      $t9, TSP_XML_CreateNode
la      $a2, aHeight     # "height"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $v0, 0x1E8+var_1D8($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a0, 0x1E8+var_1B4($sp)
lw      $a1, 0x1E8+var_1B0($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
move    $s5, $v0
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a3, 0x1E8+var_1D8($fp)
lw      $a0, 0x1E8+var_2C($sp)
la      $t9, snprintf
lui     $a2, 0x41
li      $a1, 0x40
la      $a2, (aMaxAgeD+8)  # "%d"
jalr    $t9 ; snprintf
move    $s4, $v0
lw      $gp, 0x1E8+var_1C8($sp)
lw      $v1, 0x1E8+var_30($sp)
lw      $a3, 0x1E8+var_2C($sp)
la      $t9, TSP_XML_CreateNode
lui     $a2, 0x41
sw      $v1, 0x1E8+var_1D8($sp)
la      $a2, aDepth      # "depth"
move    $a0, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a0, 0x1E8+var_1B4($sp)
lw      $a1, 0x1E8+var_1B0($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
move    $s3, $v0
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a0, 0x1E8+var_30($sp)
lw      $a3, 0x1E8+var_1E8($fp)
la      $t9, TSP_XML_CreateNode
lui     $a2, 0x41
sw      $a0, 0x1E8+var_1D8($sp)
move    $a1, $zero
move    $a0, $zero
la      $a2, aUrl        # "url"
jalr    $t9 ; TSP_XML_CreateNode
move    $s2, $v0
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a0, 0x1E8+var_1B4($sp)
lw      $a1, 0x1E8+var_1B0($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
move    $s1, $v0
lw      $a1, 0x1E8+var_80($sp)
lw      $v1, 0x1E8+var_7C($sp)
lw      $a0, 0x1E8+var_78($sp)
addu    $s0, $a1
lw      $a1, 0x1E8+var_74($sp)
addu    $s0, $v1
addu    $s0, $a0
addu    $s0, $a1
addu    $s0, $s6
addu    $s0, $s5
addu    $s0, $s4
addu    $s0, $s3
addu    $s0, $s2
addu    $s0, $s1
addu    $s0, $v0
lw      $v0, 0x1E8+var_A4($sp)
lw      $fp, 0x1E8+var_1D4($fp)
lw      $gp, 0x1E8+var_1C8($sp)
addu    $v0, $s0
bnez    $fp, loc_411D40
sw      $v0, 0x1E8+var_A4($sp)
la      $t9, TSP_XML_AddNextSiblingNode
lw      $a1, 0x1E8+var_1B8($sp)
lw      $a0, 0x1E8+var_A0($sp)
jalr    $t9 ; TSP_XML_AddNextSiblingNode
nop
lw      $v1, 0x1E8+var_A4($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $s7, 0x1E8+var_1B8($sp)
addu    $v0, $v1, $v0
beqz    $v0, loc_411FDC
move    $a0, $s7
la      $t9, TSP_XML_FreeNode
nop
jalr    $t9 ; TSP_XML_FreeNode
move    $s7, $zero
lw      $gp, 0x1E8+var_1C8($sp)

loc_411FDC:
bnez    $s7, loc_411FE8
sw      $s7, 0x1E8+var_1BC($sp)

loc_411FE4:
lw      $s7, 0x1E8+var_A0($sp)

loc_411FE8:
lw      $a0, 0x1E8+arg_0($sp)
nop
lw      $fp, 0x1C($a0)
nop
beqz    $fp, loc_412434
move    $s1, $zero
lw      $a1, 0x1E8+arg_8($sp)
li      $v1, 2
move    $a0, $fp
xori    $v0, $a1, 1
sltiu   $v0, 1
subu    $v1, $v0

loc_412018:
lw      $v0, 0x14($a0)
nop
and     $v0, $v1, $v0
bnez    $v0, loc_412044
lui     $a2, 0x41
lw      $a0, 0x38($a0)
nop
bnez    $a0, loc_412018
move    $s1, $zero
b       loc_412438
sw      $s1, 0x1E8+var_1BC($sp)

loc_412044:
la      $t9, TSP_XML_CreateNode
addiu   $v0, $sp, 0x1E8+var_1B4
sw      $v0, 0x1E8+var_1D8($sp)
sw      $zero, 0x1E8+var_1B4($sp)
addiu   $a2, (aServicelist - 0x410000)  # "serviceList"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a3, $zero
lw      $gp, 0x1E8+var_1C8($sp)
bnez    $v0, loc_412430
sw      $v0, 0x1E8+var_A8($sp)
lw      $v1, 0x1E8+arg_8($sp)
nop
xori    $v0, $v1, 1
sltiu   $v0, 1
li      $v1, 2
subu    $v1, $v0
sw      $v1, 0x1E8+var_38($sp)

loc_412090:
lw      $v0, 0x1E8+var_1D4($fp)
lw      $a0, 0x1E8+var_38($sp)
nop
and     $v0, $a0, $v0
bnez    $v0, loc_412674
lui     $a2, 0x41
lw      $fp, 0x1E8+var_1B0($fp)
b       loc_4123E4
nop

loc_4120B4:
lw      $a1, 0x1E8+arg_8($sp)
li      $v0, 1
bne     $a1, $v0, loc_4120CC
addiu   $a3, (aDslforumOrg - 0x410000)  # "dslforum-org"
la      $a3, (aSchemasUpnpOrg+8)  # "upnp-org"

loc_4120CC:
lui     $v1, 0x41

loc_4120D0:
addiu   $v1, (aServiceid - 0x410000)  # "serviceId"
sw      $v1, 0x1E8+var_1D8($sp)
lw      $v0, 0x1E8+var_1E0($fp)
la      $t9, snprintf
addiu   $s1, $sp, 0x1E8+var_12C
sw      $v0, 0x1E8+var_1D4($sp)
lw      $v0, 0x1E8+var_1DC($fp)
lui     $a2, 0x41
move    $a0, $s1
li      $a1, 0x40
la      $a2, aUrnSSSD    # "urn:%s:%s:%s%d"
jalr    $t9 ; snprintf
sw      $v0, 0x1E8+var_1D0($sp)
lw      $gp, 0x1E8+var_1C8($sp)
la      $a0, aUrnUpnpOrgServ  # "urn:upnp-org:serviceId"
la      $t9, strncmp
move    $a1, $s1
jalr    $t9 ; strncmp
li      $a2, 0x16
lw      $gp, 0x1E8+var_1C8($sp)
bnez    $v0, loc_41221C
move    $a1, $s1
la      $t9, memcpy
addiu   $s0, $sp, 0x1E8+var_EC
li      $a2, 0x40
jalr    $t9 ; memcpy
move    $a0, $s0
lw      $gp, 0x1E8+var_1C8($sp)
nop
la      $t9, strlen
nop
jalr    $t9 ; strlen
move    $a0, $s0
lw      $gp, 0x1E8+var_1C8($sp)
addu    $v0, $sp, $v0
addiu   $v0, 0x27
la      $t9, strrchr
move    $a0, $s0
lb      $s3, 0xD4($v0)
li      $a1, 0x3A
jalr    $t9 ; strrchr
sb      $zero, 0xD4($v0)
lw      $gp, 0x1E8+var_1C8($sp)
beqz    $v0, loc_41221C
move    $a0, $v0
lb      $v0, 1($v0)
addiu   $s2, $a0, 1
beqz    $v0, loc_41221C
sb      $zero, 0($a0)
la      $s0, g_astSerTypeToSerID
b       loc_412204
move    $s1, $zero

loc_4121A4:
jalr    $t9 ; strcmp
nop
lw      $gp, 0x1E8+var_1C8($sp)
bnez    $v0, loc_412204
addiu   $s1, 1
addiu   $s1, -1
la      $v0, g_astSerTypeToSerID
sll     $v1, $s1, 3
la      $t9, snprintf
addu    $v0, $v1
lw      $v1, 4($v0)
lui     $a2, 0x41
li      $v0, 0x3A
sw      $v0, 0x1E8+var_1D8($sp)
sw      $v1, 0x1E8+var_1D4($sp)
sw      $s3, 0x1E8+var_1D0($sp)
la      $a2, aSCSC       # "%s%c%s%c"
addiu   $a0, $sp, 0x1E8+var_12C
li      $a1, 0x40
jalr    $t9 ; snprintf
addiu   $a3, $sp, 0x1E8+var_EC
lw      $gp, 0x1E8+var_1C8($sp)
b       loc_41221C
nop

loc_412204:
lw      $v0, 0($s0)
la      $t9, strcmp
move    $a0, $s2
addiu   $s0, 8
bnez    $v0, loc_4121A4
move    $a1, $v0

loc_41221C:
la      $t9, TSP_XML_CreateNode
addiu   $s0, $sp, 0x1E8+var_12C
addiu   $s2, $sp, 0x1E8+var_1B0
lui     $a2, 0x41
move    $a3, $s0
la      $a2, aServiceid  # "serviceId"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x1E8+var_1D8($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1B0($sp)
move    $a0, $s4
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
sw      $v0, 0x1E8+var_88($sp)
sw      $v0, 0x1E8+var_84($sp)
lw      $v0, 0x1E8+arg_8($sp)
move    $a0, $fp
move    $a1, $s0
li      $a2, 0x40
move    $a3, $zero
lw      $s1, 0x1E8+var_1B0($sp)
jal     sub_40D098
sw      $v0, 0x1E8+var_1D8($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lui     $a2, 0x41
move    $a3, $s0
la      $t9, TSP_XML_CreateNode
la      $a2, aScpdurl    # "SCPDURL"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x1E8+var_1D8($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1B0($sp)
move    $a0, $s1
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
move    $s6, $v0
lw      $v1, 0x1E8+arg_8($sp)
move    $a0, $fp
move    $a1, $s0
li      $a2, 0x40
li      $a3, 1
sw      $v1, 0x1E8+var_1D8($sp)
lw      $s1, 0x1E8+var_1B0($sp)
jal     sub_40D098
move    $s5, $v0
lw      $gp, 0x1E8+var_1C8($sp)
lui     $a2, 0x41
move    $a3, $s0
la      $t9, TSP_XML_CreateNode
la      $a2, aControlurl  # "controlURL"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x1E8+var_1D8($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1B0($sp)
move    $a0, $s1
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
move    $s4, $v0
move    $s3, $v0
lw      $v0, 0x1E8+arg_8($sp)
move    $a0, $fp
move    $a1, $s0
li      $a2, 0x40
li      $a3, 2
lw      $s1, 0x1E8+var_1B0($sp)
jal     sub_40D098
sw      $v0, 0x1E8+var_1D8($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lui     $a2, 0x41
move    $a3, $s0
la      $t9, TSP_XML_CreateNode
move    $a0, $zero
move    $a1, $zero
la      $a2, aEventsuburl  # "eventSubURL"
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x1E8+var_1D8($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1B0($sp)
move    $a0, $s1
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
move    $s0, $v0
lw      $a0, 0x1E8+var_98($sp)
lw      $a1, 0x1E8+var_94($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $fp, 0x1E8+var_1B0($fp)
addu    $v1, $a0, $a1
lw      $a0, 0x1E8+var_A8($sp)
lw      $a1, 0x1E8+var_90($sp)
addu    $v1, $a0
lw      $a0, 0x1E8+var_8C($sp)
addu    $v1, $a1
lw      $a1, 0x1E8+var_88($sp)
addu    $v1, $a0
lw      $a0, 0x1E8+var_84($sp)
addu    $v1, $a1
addu    $v1, $a0
addu    $v1, $s6
addu    $v1, $s5
addu    $v1, $s4
addu    $v1, $s3
addu    $v1, $s0
addu    $v1, $v0
sw      $v1, 0x1E8+var_A8($sp)

loc_4123E4:
bnez    $fp, loc_412090
nop
la      $t9, TSP_XML_AddNextSiblingNode
lw      $a1, 0x1E8+var_1B4($sp)
jalr    $t9 ; TSP_XML_AddNextSiblingNode
move    $a0, $s7
lw      $a1, 0x1E8+var_A8($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $s1, 0x1E8+var_1B4($sp)
addu    $v0, $a1, $v0
beqz    $v0, loc_412434
move    $a0, $s1
la      $t9, TSP_XML_FreeNode
nop
jalr    $t9 ; TSP_XML_FreeNode
move    $s1, $zero
lw      $gp, 0x1E8+var_1C8($sp)
b       loc_412438
sw      $s1, 0x1E8+var_1BC($sp)

loc_412430:
move    $s1, $zero

loc_412434:
sw      $s1, 0x1E8+var_1BC($sp)

loc_412438:
bnez    $s1, loc_412444
nop
move    $s1, $s7

loc_412444:
lw      $v1, 0x1E8+arg_8($sp)
lw      $a0, 0x1E8+arg_0($sp)
xori    $v0, $v1, 1
sltiu   $v0, 1
li      $v1, 2
lw      $s0, 0x28($a0)
b       loc_412480
subu    $v1, $v0

loc_412464:
lw      $v0, 0x18($s0)
nop
and     $v0, $v1, $v0
bnez    $v0, loc_412490
addiu   $v0, $sp, 0x1E8+var_1BC
lw      $s0, 0x24($s0)
nop

loc_412480:
bnez    $s0, loc_412464
nop
b       loc_412508
nop

loc_412490:
la      $t9, TSP_XML_CreateNode
la      $a2, aDevicelist  # "deviceList"
move    $a0, $zero
move    $a1, $zero
move    $a3, $zero
sw      $v0, 0x1E8+var_1D8($sp)
jalr    $t9 ; TSP_XML_CreateNode
sw      $zero, 0x1E8+var_1BC($sp)
lw      $a1, 0x1E8+var_1BC($sp)
lw      $a2, 0x1E8+arg_8($sp)
move    $a0, $s0
jal     sub_41180C
li      $a3, 1
lw      $gp, 0x1E8+var_1C8($sp)
bnez    $v0, loc_4124F4
nop
la      $t9, TSP_XML_AddNextSiblingNode
lw      $a1, 0x1E8+var_1BC($sp)
jalr    $t9 ; TSP_XML_AddNextSiblingNode
move    $a0, $s1
lw      $gp, 0x1E8+var_1C8($sp)
lw      $s1, 0x1E8+var_1BC($sp)
b       loc_412508
nop

loc_4124F4:
la      $t9, TSP_XML_FreeNode
lw      $a0, 0x1E8+var_1C0($sp)
jalr    $t9 ; TSP_XML_FreeNode
nop
lw      $gp, 0x1E8+var_1C8($sp)

loc_412508:
lw      $v1, 0x1E8+arg_C($sp)
li      $v0, 1
lw      $a1, 0x1E8+var_1C0($sp)
bne     $v1, $v0, loc_412528
nop
la      $t9, TSP_XML_AppendChildNode
b       loc_41252C
nop

loc_412528:
la      $t9, TSP_XML_AddNextSiblingNode

loc_41252C:
lw      $a0, 0x1E8+arg_4($sp)
jalr    $t9
nop
lw      $a1, 0x1E8+arg_0($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a0, 0x24($a1)
nop
beqz    $a0, loc_412564
nop
lw      $a1, 0x1E8+var_1C0($sp)
lw      $a2, 0x1E8+arg_8($sp)
jal     sub_41180C
move    $a3, $zero
lw      $gp, 0x1E8+var_1C8($sp)

loc_412564:
lw      $v1, 0x1E8+arg_0($sp)
nop
lw      $v0, 0x2C($v1)
nop
bnez    $v0, loc_41260C
nop
la      $v0, g_pstUPnPStack
la      $t9, inet_ntoa
lw      $v0, (g_pstUPnPStack - 0x42684C)($v0)
nop
lw      $a0, 4($v0)
jalr    $t9 ; inet_ntoa
addiu   $s0, $sp, 0x1E8+var_1AC
lw      $gp, 0x1E8+var_1C8($sp)
la      $a2, aHttpS      # "http://%s"
la      $t9, snprintf
move    $a3, $v0
move    $a0, $s0
jalr    $t9 ; snprintf
li      $a1, 0x40
lw      $gp, 0x1E8+var_1C8($sp)
addiu   $v0, $sp, 0x1E8+var_1BC
lui     $a2, 0x41
la      $t9, TSP_XML_CreateNode
move    $a0, $zero
move    $a1, $zero
sw      $v0, 0x1E8+var_1D8($sp)
la      $a2, aPresentationur  # "presentationURL"
jalr    $t9 ; TSP_XML_CreateNode
move    $a3, $s0
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1BC($sp)
la      $t9, TSP_XML_AddNextSiblingNode
nop
jalr    $t9 ; TSP_XML_AddNextSiblingNode
move    $a0, $s1

loc_4125F8:
lw      $gp, 0x1E8+var_1C8($sp)
b       loc_41260C
nop

loc_412604:
lui     $a0, 0x4009
sw      $a0, 0x1E8+var_70($sp)

loc_41260C:
lw      $ra, 0x1E8+var_4($sp)
lw      $v0, 0x1E8+var_70($sp)
lw      $fp, 0x1E8+var_8($sp)
lw      $s7, 0x1E8+var_C($sp)
lw      $s6, 0x1E8+var_10($sp)
lw      $s5, 0x1E8+var_14($sp)
lw      $s4, 0x1E8+var_18($sp)
lw      $s3, 0x1E8+var_1C($sp)
lw      $s2, 0x1E8+var_20($sp)
lw      $s1, 0x1E8+var_24($sp)
lw      $s0, 0x1E8+var_28($sp)
jr      $ra
addiu   $sp, 0x1E8

loc_412640:
la      $t9, TSP_XML_CreateNode
lui     $a2, 0x41
sw      $v0, 0x1E8+var_1D8($sp)
la      $a2, aDevice     # "device"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a3, $zero
lw      $gp, 0x1E8+var_1C8($sp)
bnez    $v0, loc_41260C
sw      $v0, 0x1E8+var_70($sp)
b       loc_411884
addiu   $s0, $sp, 0x1E8+var_1AC

loc_412674:
la      $t9, TSP_XML_CreateNode
addiu   $s2, $sp, 0x1E8+var_1B0
addiu   $a2, (aService - 0x410000)  # "service"
move    $a3, $zero
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x1E8+var_1D8($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a0, 0x1E8+var_1B4($sp)
lw      $a1, 0x1E8+var_1B0($sp)
la      $t9, TSP_XML_AddFirstChildNode
sw      $v0, 0x1E8+var_98($sp)
jalr    $t9 ; TSP_XML_AddFirstChildNode
addiu   $s0, $sp, 0x1E8+var_12C
lw      $a3, 0x1E8+arg_8($sp)
move    $a0, $fp
move    $a1, $s0
li      $a2, 0x40
lw      $s1, 0x1E8+var_1B0($sp)
jal     UpnpGetServiceType
sw      $v0, 0x1E8+var_94($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lui     $a2, 0x41
move    $a3, $s0
la      $t9, TSP_XML_CreateNode
move    $a0, $zero
move    $a1, $zero
la      $a2, aServicetype  # "serviceType"
jalr    $t9 ; TSP_XML_CreateNode
sw      $s2, 0x1E8+var_1D8($sp)
lw      $gp, 0x1E8+var_1C8($sp)
lw      $a1, 0x1E8+var_1B0($sp)
move    $a0, $s1
la      $t9, TSP_XML_AddFirstChildNode
nop
jalr    $t9 ; TSP_XML_AddFirstChildNode
sw      $v0, 0x1E8+var_90($sp)
sb      $zero, 0x1E8+var_12C($sp)
lw      $a3, 0x1E8+var_1E8($fp)
lw      $gp, 0x1E8+var_1C8($sp)
sw      $v0, 0x1E8+var_8C($sp)
lw      $s4, 0x1E8+var_1B0($sp)
bnez    $a3, loc_4120D0
lui     $v1, 0x41
b       loc_4120B4
lui     $a3, 0x41
 # End of function sub_41180C




.globl ATP_UPNP_RefreshDeivce
ATP_UPNP_RefreshDeivce:

var_78= -0x78
var_70= -0x70
var_68= -0x68
var_64= -0x64
var_60= -0x60
var_5C= -0x5C
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x88
li      $gp, 0x42E470
sw      $ra, 0x88+var_4($sp)
sw      $s3, 0x88+var_8($sp)
sw      $s2, 0x88+var_C($sp)
sw      $s1, 0x88+var_10($sp)
sw      $s0, 0x88+var_14($sp)
sw      $gp, 0x88+var_70($sp)
la      $t9, TSP_XML_CreateNode
addiu   $v0, $sp, 0x88+var_68
lui     $a2, 0x41
sw      $v0, 0x88+var_78($sp)
move    $s3, $a0
la      $a2, aRoot       # "root"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
move    $a3, $zero
lw      $gp, 0x88+var_70($sp)
bnez    $v0, loc_412A24
move    $s2, $v0
la      $t9, TSP_XML_AddAttr
lw      $a0, 0x88+var_68($sp)
lui     $a2, 0x41
lui     $a3, 0x41
la      $a2, aXmlns      # "xmlns"
la      $a3, aUrnSchemasUpnp_0  # "urn:schemas-upnp-org:device-1-0"
jalr    $t9 ; TSP_XML_AddAttr
move    $a1, $zero
lw      $gp, 0x88+var_70($sp)
beqz    $v0, loc_4127C4
move    $s2, $v0
la      $t9, TSP_XML_FreeNode
lw      $a0, 0x88+var_68($sp)
b       loc_4128C8
nop

loc_4127C4:
la      $t9, TSP_XML_CreateNode
addiu   $s1, $sp, 0x88+var_64
la      $a2, aSpecversion  # "specVersion"
move    $a3, $zero
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s1, 0x88+var_78($sp)
lw      $gp, 0x88+var_70($sp)
lw      $a0, 0x88+var_68($sp)
lw      $a1, 0x88+var_64($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
nop
lw      $gp, 0x88+var_70($sp)
lui     $a2, 0x41
lui     $a3, 0x41
la      $t9, TSP_XML_CreateNode
la      $a2, aMajor      # "major"
la      $a3, (aWanconnectiond+0x14)  # "1"
move    $a0, $zero
sw      $s1, 0x88+var_78($sp)
lw      $s0, 0x88+var_64($sp)
jalr    $t9 ; TSP_XML_CreateNode
move    $a1, $zero
lw      $gp, 0x88+var_70($sp)
lw      $a1, 0x88+var_64($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
move    $a0, $s0
lw      $gp, 0x88+var_70($sp)
lui     $a2, 0x41
lui     $a3, 0x41
la      $t9, TSP_XML_CreateNode
la      $a2, aMinor      # "minor"
la      $a3, (a2552552550+0xC)  # "0"
move    $a0, $zero
move    $a1, $zero
jalr    $t9 ; TSP_XML_CreateNode
sw      $s1, 0x88+var_78($sp)
lw      $gp, 0x88+var_70($sp)
lw      $a1, 0x88+var_64($sp)
la      $t9, TSP_XML_AppendChildNode
nop
jalr    $t9 ; TSP_XML_AppendChildNode
move    $a0, $s0
lw      $gp, 0x88+var_70($sp)
move    $a1, $s0
move    $a2, $s3
la      $v0, g_pstUpnpGvarHead
nop
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $a0, 0($v0)
jal     sub_41180C
move    $a3, $zero
lw      $gp, 0x88+var_70($sp)
lw      $a0, 0x88+var_68($sp)
beqz    $v0, loc_4128D8
move    $s2, $v0
la      $t9, TSP_XML_FreeNode
nop

loc_4128C8:
jalr    $t9 ; TSP_XML_FreeNode
nop
b       loc_412A20
nop

loc_4128D8:
la      $t9, TSP_XML_Transform
addiu   $a1, $sp, 0x88+var_60
jalr    $t9 ; TSP_XML_Transform
sw      $zero, 0x88+var_60($sp)
lw      $gp, 0x88+var_70($sp)
lw      $a0, 0x88+var_68($sp)
la      $t9, TSP_XML_FreeNode
nop
jalr    $t9 ; TSP_XML_FreeNode
move    $s2, $v0
lw      $gp, 0x88+var_70($sp)
bnez    $s2, loc_412A24
nop
lw      $v0, 0x88+var_60($sp)
nop
beqz    $v0, loc_412A24
li      $v0, 1
addiu   $a0, $sp, 0x88+var_5C
lui     $a2, 0x41
la      $t9, snprintf
bne     $s3, $v0, loc_41293C
lui     $a3, 0x41
lui     $v0, 0x41
b       loc_412944
la      $v0, aUpnpdevXml  # "/upnpdev.xml"

loc_41293C:
la      $v0, aTr064devXml  # "/tr064dev.xml"

loc_412944:
addiu   $a2, (aNotifySHttp11H+0x8C - 0x410000)  # "%s%s"
addiu   $a3, (aVar - 0x410000)  # "/var"
li      $a1, 0x40
jalr    $t9 ; snprintf
sw      $v0, 0x88+var_78($sp)
lw      $gp, 0x88+var_70($sp)
la      $a1, aWb         # "wb"
la      $t9, fopen
nop
jalr    $t9 ; fopen
addiu   $a0, $sp, 0x88+var_5C
lw      $gp, 0x88+var_70($sp)
bnez    $v0, loc_4129A0
move    $s1, $v0
la      $t9, free
lw      $a0, 0x88+var_60($sp)
jalr    $t9 ; free
nop
lui     $v0, 0x4009
lw      $gp, 0x88+var_70($sp)
b       loc_412A24
ori     $s2, $v0, 9

loc_4129A0:
la      $t9, fwrite
lui     $a0, 0x41
li      $a1, 0x16
li      $a2, 1
move    $a3, $v0
jalr    $t9 ; fwrite
la      $a0, aXmlVersion10_0  # "<?xml version=\"1.0\"?>\n"
lw      $gp, 0x88+var_70($sp)
lw      $s0, 0x88+var_60($sp)
la      $t9, strlen
nop
jalr    $t9 ; strlen
move    $a0, $s0
lw      $gp, 0x88+var_70($sp)
move    $a1, $v0
move    $a0, $s0
la      $t9, fwrite
li      $a2, 1
jalr    $t9 ; fwrite
move    $a3, $s1
lw      $gp, 0x88+var_70($sp)
lw      $a0, 0x88+var_60($sp)
la      $t9, free
nop
jalr    $t9 ; free
nop
lw      $gp, 0x88+var_70($sp)
nop
la      $t9, fclose
nop
jalr    $t9 ; fclose
move    $a0, $s1

loc_412A20:
lw      $gp, 0x88+var_70($sp)

loc_412A24:
lw      $ra, 0x88+var_4($sp)
move    $v0, $s2
lw      $s3, 0x88+var_8($sp)
lw      $s2, 0x88+var_C($sp)
lw      $s1, 0x88+var_10($sp)
lw      $s0, 0x88+var_14($sp)
jr      $ra
addiu   $sp, 0x88
 # End of function ATP_UPNP_RefreshDeivce




.globl upnpGetLocationUrl
upnpGetLocationUrl:

var_68= -0x68
var_64= -0x64
var_60= -0x60
var_58= -0x58
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4
arg_12=  0x12
arg_14=  0x14

lui     $gp, 0x43
addiu   $sp, -0x78
li      $gp, 0x42E470
sw      $ra, 0x78+var_4($sp)
sw      $s4, 0x78+var_8($sp)
sw      $s3, 0x78+var_C($sp)
sw      $s2, 0x78+var_10($sp)
sw      $s1, 0x78+var_14($sp)
sw      $s0, 0x78+var_18($sp)
sw      $gp, 0x78+var_60($sp)
move    $s1, $a1
move    $s4, $a2
lw      $v1, 0x78+arg_14($sp)
lhu     $s2, 0x78+arg_12($sp)
beqz    $a1, loc_412B20
move    $s3, $a3
bnez    $a0, loc_412AB0
sb      $zero, 0($a1)
li      $v0, 1
beq     $v1, $v0, loc_412AA4
nop
lui     $v0, 0x41
b       loc_412ADC
addiu   $s0, $v0, (aTr064devXml - 0x410000)  # "/tr064dev.xml"

loc_412AA4:
lui     $v0, 0x41
b       loc_412ADC
addiu   $s0, $v0, (aUpnpdevXml - 0x410000)  # "/upnpdev.xml"

loc_412AB0:
lw      $v0, 0x10($a0)
nop
beqz    $v0, loc_412B20
addiu   $s0, $sp, 0x78+var_58
move    $a1, $s0
li      $a2, 0x40
move    $a3, $zero
jal     sub_40D098
sw      $v1, 0x78+var_68($sp)
lw      $gp, 0x78+var_60($sp)
nop

loc_412ADC:
la      $t9, inet_ntoa
nop
jalr    $t9 ; inet_ntoa
move    $a0, $s3
lw      $gp, 0x78+var_60($sp)
lui     $a2, 0x41
sw      $s2, 0x78+var_68($sp)
la      $t9, snprintf
sw      $s0, 0x78+var_64($sp)
move    $a0, $s1
move    $a1, $s4
la      $a2, aHttpSDS    # "http://%s:%d%s"
jalr    $t9 ; snprintf
move    $a3, $v0
lw      $gp, 0x78+var_60($sp)
b       loc_412B24
move    $v0, $zero

loc_412B20:
lui     $v0, 0x4009

loc_412B24:
lw      $ra, 0x78+var_4($sp)
lw      $s4, 0x78+var_8($sp)
lw      $s3, 0x78+var_C($sp)
lw      $s2, 0x78+var_10($sp)
lw      $s1, 0x78+var_14($sp)
lw      $s0, 0x78+var_18($sp)
jr      $ra
addiu   $sp, 0x78
 # End of function upnpGetLocationUrl




.globl UpnpGetDeviceOrService
UpnpGetDeviceOrService:

var_78= -0x78
var_70= -0x70
var_6C= -0x6C
var_68= -0x68
var_64= -0x64
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x88
li      $gp, 0x42E470
sw      $ra, 0x88+var_4($sp)
sw      $s6, 0x88+var_8($sp)
sw      $s5, 0x88+var_C($sp)
sw      $s4, 0x88+var_10($sp)
sw      $s3, 0x88+var_14($sp)
sw      $s2, 0x88+var_18($sp)
sw      $s1, 0x88+var_1C($sp)
sw      $s0, 0x88+var_20($sp)
sw      $gp, 0x88+var_78($sp)
la      $t9, strncmp
move    $s4, $a1
lui     $a1, 0x41
move    $s6, $a2
la      $a1, aUuid       # "uuid:"
li      $a2, 5
move    $s2, $a3
jalr    $t9 ; strncmp
move    $s1, $a0
lw      $gp, 0x88+var_78($sp)
bnez    $v0, loc_412DD0
move    $a0, $s1
la      $v0, g_pstUpnpGvarHead
nop
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $s0, 0($v0)
b       loc_412CAC
addiu   $s2, $sp, 0x88+var_64

loc_412BC0:
lw      $v0, 0x18($s0)
nop
andi    $v0, 2
bnez    $v0, loc_412C0C
move    $a1, $s2
lw      $v0, 0x28($s0)
nop
bnez    $v0, loc_412CA8
nop

loc_412BE4:
lw      $v0, 0x24($s0)
nop
bnez    $v0, loc_412CA8
nop
lw      $s0, 0x2C($s0)
nop
bnez    $s0, loc_412BE4
move    $v0, $s0
b       loc_412CAC
move    $s0, $v0

loc_412C0C:
sb      $zero, 0x88+var_64($sp)
lw      $a0, 0xC($s0)
li      $a2, 0x40
jal     UpnpGetDeviceUuid
move    $a3, $zero
lw      $gp, 0x88+var_78($sp)
move    $a0, $s2
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a1, $s1
lw      $gp, 0x88+var_78($sp)
bnez    $v0, loc_412C78
nop
la      $t9, malloc
lw      $s1, 0($s4)
jalr    $t9 ; malloc
li      $a0, 0xC
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_413100
nop
sw      $v0, 0($s4)
sw      $s0, 4($v0)
sw      $s1, 8($v0)
sw      $zero, 0($s6)
b       loc_4131E4
sw      $zero, 0($v0)

loc_412C78:
lw      $v0, 0x28($s0)
nop
bnez    $v0, loc_412CA8
nop

loc_412C88:
lw      $v0, 0x24($s0)
nop
bnez    $v0, loc_412CA8
nop
lw      $s0, 0x2C($s0)
nop
bnez    $s0, loc_412C88
move    $v0, $s0

loc_412CA8:
move    $s0, $v0

loc_412CAC:
bnez    $s0, loc_412BC0
nop
la      $v0, g_pstUpnpGvarHead
nop
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $s0, 0($v0)
b       loc_412DC0
addiu   $s2, $sp, 0x88+var_64

loc_412CD0:
lw      $v0, 0x18($s0)
nop
andi    $v0, 1
bnez    $v0, loc_412D1C
move    $a1, $s2
lw      $v0, 0x28($s0)
nop
bnez    $v0, loc_412DBC
nop

loc_412CF4:
lw      $v0, 0x24($s0)
nop
bnez    $v0, loc_412DBC
nop
lw      $s0, 0x2C($s0)
nop
bnez    $s0, loc_412CF4
move    $v0, $s0
b       loc_412DC0
move    $s0, $v0

loc_412D1C:
sb      $zero, 0x88+var_64($sp)
lw      $a0, 0xC($s0)
li      $a2, 0x40
jal     UpnpGetDeviceUuid
li      $a3, 1
lw      $gp, 0x88+var_78($sp)
move    $a0, $s2
la      $t9, strcmp
nop
jalr    $t9 ; strcmp
move    $a1, $s1
lw      $gp, 0x88+var_78($sp)
bnez    $v0, loc_412D8C
nop
la      $t9, malloc
lw      $s1, 0($s4)
jalr    $t9 ; malloc
li      $a0, 0xC
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_413100
move    $v1, $v0
sw      $v0, 0($s4)
li      $v0, 1
sw      $v0, 0($s6)
sw      $s0, 4($v1)
sw      $s1, 8($v1)
b       loc_4131E4
sw      $zero, 0($v1)

loc_412D8C:
lw      $v0, 0x28($s0)
nop
bnez    $v0, loc_412DBC
nop

loc_412D9C:
lw      $v0, 0x24($s0)
nop
bnez    $v0, loc_412DBC
nop
lw      $s0, 0x2C($s0)
nop
bnez    $s0, loc_412D9C
move    $v0, $s0

loc_412DBC:
move    $s0, $v0

loc_412DC0:
bnez    $s0, loc_412CD0
lui     $v0, 0x4009
b       loc_4131E8
li      $v0, 0x40090004

loc_412DD0:
addiu   $a1, $sp, 0x88+var_70
addiu   $a2, $sp, 0x88+var_6C
addiu   $a3, $sp, 0x88+var_68
sw      $zero, 0x88+var_70($sp)
sw      $zero, 0x88+var_6C($sp)
jal     sub_40EE0C
sw      $zero, 0x88+var_68($sp)
lw      $gp, 0x88+var_78($sp)
bnez    $v0, loc_4131DC
lui     $v0, 0x4009
lw      $s0, 0x88+var_6C($sp)
nop
beqz    $s0, loc_412EA4
move    $s5, $zero
la      $t9, strncmp
la      $a1, aDevice     # "device"
move    $a0, $s0
jalr    $t9 ; strncmp
li      $a2, 6
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_412E8C
move    $s5, $zero
la      $t9, strncmp
la      $a1, aService    # "service"
move    $a0, $s0
jalr    $t9 ; strncmp
li      $a2, 7
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_412E8C
li      $s5, 1
la      $t9, ATP_UPNP_Free
lw      $a0, 0x88+var_70($sp)
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x88+var_78($sp)
lw      $a0, 0x88+var_6C($sp)
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x88+var_78($sp)
lw      $a0, 0x88+var_68($sp)
la      $t9, ATP_UPNP_Free
b       loc_4131CC
nop

loc_412E8C:
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
move    $a0, $s0
lw      $gp, 0x88+var_78($sp)
sw      $zero, 0x88+var_6C($sp)

loc_412EA4:
lw      $s0, 0x88+var_70($sp)
nop
beqz    $s0, loc_412F34
lui     $a1, 0x41
la      $t9, strncmp
la      $a1, aSchemasUpnpOrg  # "schemas-upnp-org"
move    $a0, $s0
jalr    $t9 ; strncmp
li      $a2, 0x10
lw      $gp, 0x88+var_78($sp)
bnez    $v0, loc_412EE4
lui     $a1, 0x41
li      $v0, 1
la      $t9, ATP_UPNP_Free
b       loc_412F0C
sw      $v0, 0($s6)

loc_412EE4:
la      $t9, strncmp
addiu   $a1, (aDslforumOrg - 0x410000)  # "dslforum-org"
move    $a0, $s0
jalr    $t9 ; strncmp
li      $a2, 0xC
lw      $gp, 0x88+var_78($sp)
bnez    $v0, loc_412F20
nop
la      $t9, ATP_UPNP_Free
sw      $zero, 0($s6)

loc_412F0C:
jalr    $t9 ; ATP_UPNP_Free
move    $a0, $s0
lw      $gp, 0x88+var_78($sp)
b       loc_412F34
sw      $zero, 0x88+var_70($sp)

loc_412F20:
beqz    $s2, loc_412F2C
li      $v0, 1
sw      $v0, 0($s2)

loc_412F2C:
li      $v0, 1
sw      $v0, 0($s6)

loc_412F34:
la      $v0, g_pstUpnpGvarHead
move    $s3, $zero
lw      $v0, (g_pstUpnpGvarHead - 0x426840)($v0)
nop
lw      $s0, 0($v0)
b       loc_413180
move    $s2, $zero

loc_412F50:
bnez    $s5, loc_413054
nop
lw      $a0, 0x88+var_70($sp)
lw      $a1, 0($s0)
bnez    $a0, loc_412F98
nop
bnez    $a1, loc_41300C
nop
lw      $v0, 0($s6)
lw      $v1, 0x18($s0)
xori    $v0, 1
sltu    $v0, $zero, $v0
addiu   $v0, 1
and     $v0, $v1
bnez    $v0, loc_413210
nop
b       loc_41300C
nop

loc_412F98:
beqz    $a1, loc_41300C
nop
la      $t9, strstr
nop
jalr    $t9 ; strstr
nop
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_41300C
nop
la      $t9, strcmp
lw      $a0, 4($s0)
lw      $a1, 0x88+var_68($sp)
jalr    $t9 ; strcmp
nop
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_41300C
nop

loc_412FDC:
la      $t9, malloc
lw      $s1, 0($s4)
jalr    $t9 ; malloc
li      $a0, 0xC
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_413100
nop
sw      $s1, 8($v0)
sw      $s0, 4($v0)
sw      $v0, 0($s4)
sw      $zero, 0($v0)
li      $s3, 1

loc_41300C:
lw      $v0, 0x28($s0)
nop
bnez    $v0, loc_413254
nop

loc_41301C:
lw      $v0, 0x24($s0)
nop
bnez    $v0, loc_413254
nop
lw      $s0, 0x2C($s0)
nop
bnez    $s0, loc_41301C
nop
beqz    $s3, loc_413188
nop
la      $t9, ATP_UPNP_Free
lw      $a0, 0x88+var_68($sp)
b       loc_413198
nop

loc_413054:
lw      $s1, 0x1C($s0)
b       loc_413140
nop

loc_413060:
lw      $a0, 0x88+var_70($sp)
lw      $a1, 0($s1)
bnez    $a0, loc_4130A0
nop
bnez    $a1, loc_413138
nop
lw      $v0, 0($s6)
lw      $v1, 0x14($s1)
xori    $v0, 1
sltu    $v0, $zero, $v0
addiu   $v0, 1
and     $v0, $v1
bnez    $v0, loc_413238
nop
b       loc_413138
nop

loc_4130A0:
beqz    $a1, loc_413138
nop
la      $t9, strstr
nop
jalr    $t9 ; strstr
nop
lw      $gp, 0x88+var_78($sp)
beqz    $v0, loc_413138
nop
la      $t9, strcmp
lw      $a0, 4($s1)
lw      $a1, 0x88+var_68($sp)
jalr    $t9 ; strcmp
nop

loc_4130D8:
lw      $gp, 0x88+var_78($sp)
bnez    $v0, loc_413138
nop
la      $t9, malloc
lw      $s2, 0($s4)
jalr    $t9 ; malloc
li      $a0, 0xC
lw      $gp, 0x88+var_78($sp)
bnez    $v0, loc_413124
nop

loc_413100:
la      $t9, printf
lui     $a0, 0x41
lui     $a1, 0x41
la      $a0, aMallocMemoryFa  # "Malloc memory failed!%s"
jalr    $t9 ; printf
la      $a1, aUpnpgetdeviceo_0  # "UpnpGetDeviceOrService"
lw      $gp, 0x88+var_78($sp)
b       loc_4131E8
li      $v0, 1

loc_413124:
sw      $s2, 8($v0)
sw      $s0, 4($v0)
sw      $v0, 0($s4)
sw      $s1, 0($v0)
li      $s2, 1

loc_413138:
lw      $s1, 0x38($s1)
nop

loc_413140:
bnez    $s1, loc_413060
nop
lw      $v0, 0x28($s0)
nop
bnez    $v0, loc_413254
nop

loc_413158:
lw      $v0, 0x24($s0)
nop
bnez    $v0, loc_413254
nop
lw      $s0, 0x2C($s0)
nop
bnez    $s0, loc_413158
nop
b       loc_413188
nop

loc_413180:
bnez    $s0, loc_412F50
nop

loc_413188:
la      $t9, ATP_UPNP_Free
lw      $a0, 0x88+var_68($sp)
beqz    $s2, loc_4131CC
nop

loc_413198:
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $a0, 0x88+var_70($sp)
lw      $gp, 0x88+var_78($sp)
beqz    $a0, loc_4131E4
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x88+var_78($sp)
b       loc_4131E8
move    $v0, $zero

loc_4131CC:
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x88+var_78($sp)
lui     $v0, 0x4009

loc_4131DC:
b       loc_4131E8
ori     $v0, 4

loc_4131E4:
move    $v0, $zero

loc_4131E8:
lw      $ra, 0x88+var_4($sp)
lw      $s6, 0x88+var_8($sp)
lw      $s5, 0x88+var_C($sp)
lw      $s4, 0x88+var_10($sp)
lw      $s3, 0x88+var_14($sp)
lw      $s2, 0x88+var_18($sp)
lw      $s1, 0x88+var_1C($sp)
lw      $s0, 0x88+var_20($sp)
jr      $ra
addiu   $sp, 0x88

loc_413210:
la      $t9, strcmp
lw      $a0, 4($s0)
lw      $a1, 0x88+var_68($sp)
jalr    $t9 ; strcmp
nop
lw      $gp, 0x88+var_78($sp)
bnez    $v0, loc_41300C
nop
b       loc_412FDC
nop

loc_413238:
la      $t9, strcmp
lw      $a0, 4($s1)
lw      $a1, 0x88+var_68($sp)
jalr    $t9 ; strcmp
nop
b       loc_4130D8
nop

loc_413254:
b       loc_413180
move    $s0, $v0
 # End of function UpnpGetDeviceOrService




.globl UpnpRegSubscription
UpnpRegSubscription:

var_68= -0x68
var_60= -0x60
var_5C= -0x5C
var_54= -0x54
var_4C= -0x4C
var_47= -0x47
var_42= -0x42
var_3D= -0x3D
var_30= -0x30
var_28= -0x28
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4
arg_10=  0x10
arg_14=  0x14
arg_18=  0x18

lui     $gp, 0x43
addiu   $sp, -0x78
li      $gp, 0x42E470
sw      $ra, 0x78+var_4($sp)
sw      $fp, 0x78+var_8($sp)
sw      $s7, 0x78+var_C($sp)
sw      $s6, 0x78+var_10($sp)
sw      $s5, 0x78+var_14($sp)
sw      $s4, 0x78+var_18($sp)
sw      $s3, 0x78+var_1C($sp)
sw      $s2, 0x78+var_20($sp)
sw      $s1, 0x78+var_24($sp)
sw      $s0, 0x78+var_28($sp)
sw      $gp, 0x78+var_68($sp)
lw      $s7, 0x78+arg_14($sp)
move    $s3, $a1
addiu   $a1, $sp, 0x78+var_60
sb      $zero, 0($s7)
lw      $v0, 0x78+arg_18($sp)
move    $s6, $a2
move    $fp, $a3
sw      $zero, 0($v0)
li      $v0, 1
jal     UpnpGetServiceByUrl
sw      $v0, 0x78+var_60($sp)
lw      $gp, 0x78+var_68($sp)
beqz    $v0, loc_4135DC
move    $s2, $v0
lw      $v0, 0x20($v0)
nop
bnez    $v0, loc_4132E4
lui     $v0, 0x4009
b       loc_4135E4
li      $v0, 0x4009000B

loc_4132E4:
lw      $v0, 0x78+arg_10($sp)
nop
bnez    $v0, loc_4133A4
nop
beqz    $s3, loc_4135DC
addiu   $s1, $s2, 0x2C
lw      $s0, 0x2C($s2)
b       loc_413334
nop

loc_413308:
lw      $v0, 4($s0)
nop
beqz    $v0, loc_41332C
move    $a0, $v0
jalr    $t9 ; strcmp
nop
lw      $gp, 0x78+var_68($sp)
beqz    $v0, loc_413348
nop

loc_41332C:
addiu   $s1, $s0, 0x18
lw      $s0, 0x18($s0)

loc_413334:
la      $t9, strcmp
bnez    $s0, loc_413308
move    $a1, $s3
b       loc_4135E0
lui     $v0, 0x4009

loc_413348:
lw      $v0, 0x18($s0)
lw      $a0, 0($s0)
nop
beqz    $a0, loc_413370
sw      $v0, 0($s1)
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x78+var_68($sp)

loc_413370:
lw      $a0, 4($s0)
nop
beqz    $a0, loc_413398
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x78+var_68($sp)
nop

loc_413398:
la      $t9, ATP_UPNP_Free
b       loc_413440
move    $a0, $s0

loc_4133A4:
la      $t9, ATP_UTIL_GetSysTime
nop
jalr    $t9 ; ATP_UTIL_GetSysTime
addiu   $a0, $sp, 0x78+var_5C
lw      $gp, 0x78+var_68($sp)
beqz    $s3, loc_413454
nop
lw      $s0, 0x2C($s2)
b       loc_4133F4
nop

loc_4133CC:
lw      $s1, 4($s0)
nop
beqz    $s1, loc_4133F0
move    $a0, $s1
jalr    $t9 ; strcmp
nop
lw      $gp, 0x78+var_68($sp)
beqz    $v0, loc_413408
lui     $a2, 0x41

loc_4133F0:
lw      $s0, 0x18($s0)

loc_4133F4:
la      $t9, strcmp
bnez    $s0, loc_4133CC
move    $a1, $s3
b       loc_4135E0
lui     $v0, 0x4009

loc_413408:
lw      $v0, 0x78+var_5C($sp)
la      $t9, snprintf
addu    $v0, $s6, $v0
move    $a0, $s7
sw      $v0, 0x10($s0)
addiu   $a2, (aUuidS - 0x410000)  # "uuid:%s"
move    $a3, $s1
sw      $s6, 8($s0)
jalr    $t9 ; snprintf
li      $a1, 0x40
lw      $gp, 0x78+var_68($sp)
lw      $a0, 0x10($s0)
la      $t9, ATP_UPNP_AdaptUpdateNextTimer
nop

loc_413440:
jalr    $t9
nop
lw      $gp, 0x78+var_68($sp)
b       loc_4135E4
move    $v0, $zero

loc_413454:
bnez    $fp, loc_413464
lui     $v0, 0x4009
b       loc_4135E4
li      $v0, 0x40090006

loc_413464:
la      $t9, ATP_UPNP_Malloc
nop
jalr    $t9 ; ATP_UPNP_Malloc
li      $a0, 0x1C
lw      $gp, 0x78+var_68($sp)
beqz    $v0, loc_413578
move    $s0, $v0
addiu   $s1, $sp, 0x78+var_54
sw      $zero, 0($v0)
sw      $zero, 4($v0)
sw      $zero, 8($v0)
sw      $zero, 0xC($v0)
sw      $zero, 0x10($v0)
sw      $zero, 0x14($v0)
sw      $zero, 0x18($v0)
li      $s3, 0xA
move    $s5, $s1
addiu   $s4, $sp, 0x78+var_30

loc_4134AC:
la      $t9, rand
nop
jalr    $t9 ; rand
nop
bnez    $s3, loc_4134C8
div     $v0, $s3
break   0x1C00

loc_4134C8:
lw      $gp, 0x78+var_68($sp)
mfhi    $v0
addiu   $v0, 0x30
sb      $v0, 0($s1)
addiu   $s1, 1
bne     $s1, $s4, loc_4134AC
li      $v0, 0x2D
la      $t9, ATP_UPNP_StrDup
move    $a0, $s5
sb      $v0, 0x78+var_3D($sp)
sb      $v0, 0x78+var_4C($sp)
sb      $v0, 0x78+var_47($sp)
sb      $v0, 0x78+var_42($sp)
jalr    $t9 ; ATP_UPNP_StrDup
sb      $zero, 0x78+var_30($sp)
lw      $gp, 0x78+var_68($sp)
sw      $v0, 4($s0)
la      $t9, ATP_UPNP_StrDup
nop
jalr    $t9 ; ATP_UPNP_StrDup
move    $a0, $fp
lw      $a3, 4($s0)
lw      $gp, 0x78+var_68($sp)
beqz    $a3, loc_413534
sw      $v0, 0($s0)
bnez    $v0, loc_413584
lui     $a2, 0x41

loc_413534:
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
move    $a0, $v0
lw      $gp, 0x78+var_68($sp)
lw      $a0, 4($s0)
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x78+var_68($sp)
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
move    $a0, $s0
lw      $gp, 0x78+var_68($sp)

loc_413578:
lui     $v0, 0x4009
b       loc_4135E4
li      $v0, 0x40090002

loc_413584:
la      $t9, snprintf
move    $a0, $s7
addiu   $a2, (aUuidS - 0x410000)  # "uuid:%s"
jalr    $t9 ; snprintf
li      $a1, 0x40
lw      $v0, 0x78+var_5C($sp)
lw      $v1, 0x2C($s2)
lw      $gp, 0x78+var_68($sp)
addu    $v0, $s6, $v0
sw      $s6, 8($s0)
sw      $v0, 0x10($s0)
beqz    $v1, loc_4135C4
sw      $s2, 0x14($s0)
lw      $v0, 0x18($v1)
nop
sw      $v0, 0x18($s0)

loc_4135C4:
lw      $v0, 0x78+arg_18($sp)
sw      $s0, 0x2C($s2)
lw      $a0, 0x10($s0)
la      $t9, ATP_UPNP_AdaptUpdateNextTimer
b       loc_413440
sw      $s0, 0($v0)

loc_4135DC:
lui     $v0, 0x4009

loc_4135E0:
ori     $v0, 4

loc_4135E4:
lw      $ra, 0x78+var_4($sp)
lw      $fp, 0x78+var_8($sp)
lw      $s7, 0x78+var_C($sp)
lw      $s6, 0x78+var_10($sp)
lw      $s5, 0x78+var_14($sp)
lw      $s4, 0x78+var_18($sp)
lw      $s3, 0x78+var_1C($sp)
lw      $s2, 0x78+var_20($sp)
lw      $s1, 0x78+var_24($sp)
lw      $s0, 0x78+var_28($sp)
jr      $ra
addiu   $sp, 0x78
 # End of function UpnpRegSubscription




.globl ATP_UPNP_CheckExpiredSubscription
ATP_UPNP_CheckExpiredSubscription:

var_38= -0x38
var_30= -0x30
var_24= -0x24
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x48
li      $gp, 0x42E470
sw      $ra, 0x48+var_4($sp)
sw      $s7, 0x48+var_8($sp)
sw      $s6, 0x48+var_C($sp)
sw      $s5, 0x48+var_10($sp)
sw      $s4, 0x48+var_14($sp)
sw      $s3, 0x48+var_18($sp)
sw      $s2, 0x48+var_1C($sp)
sw      $s1, 0x48+var_20($sp)
sw      $s0, 0x48+var_24($sp)
sw      $gp, 0x48+var_38($sp)
la      $t9, ATP_UTIL_GetSysTime
addiu   $a0, $sp, 0x48+var_30
jalr    $t9 ; ATP_UTIL_GetSysTime
move    $s3, $zero
lw      $gp, 0x48+var_38($sp)
lw      $s5, 0x48+var_30($sp)
la      $v0, g_pstUpnpGvarHead
nop
lw      $v1, (g_pstUpnpGvarHead - 0x426840)($v0)
lui     $v0, 0x41
addiu   $s7, $v0, (aSubscriptionSS - 0x410000)  # "Subscription %s:%s expired.\n"
lui     $v0, 0x41
lw      $s1, 0($v1)
b       loc_4137BC
addiu   $s6, $v0, (aSubscribeListI - 0x410000)  # "subscribe list internal error.\n"

loc_413684:
lw      $s2, 0x1C($s1)
b       loc_413780
nop

loc_413690:
lw      $s0, 0x2C($s2)
b       loc_413770
nop

loc_41369C:
lw      $v1, 0x10($s0)
lw      $s4, 0x18($s0)
sltu    $v0, $s5, $v1
bnez    $v0, loc_413758
nop
la      $t9, printf
lw      $a1, 4($s0)
lw      $a2, 0($s0)
jalr    $t9 ; printf
move    $a0, $s7
lw      $v0, 0x14($s0)
lw      $gp, 0x48+var_38($sp)
lw      $v1, 0x2C($v0)
b       loc_4136EC
addiu   $a1, $v0, 0x2C

loc_4136D8:
beq     $v1, $s0, loc_4136FC
nop
addiu   $a1, $v1, 0x18
lw      $v1, 0x18($v1)
nop

loc_4136EC:
bnez    $v1, loc_4136D8
move    $a0, $s6
b       loc_4137F0
nop

loc_4136FC:
lw      $v0, 0x18($s0)
lw      $a0, 0($s0)
nop
beqz    $a0, loc_413724
sw      $v0, 0($a1)
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x48+var_38($sp)

loc_413724:
lw      $a0, 4($s0)
nop
beqz    $a0, loc_41374C
nop
la      $t9, ATP_UPNP_Free
nop
jalr    $t9 ; ATP_UPNP_Free
nop
lw      $gp, 0x48+var_38($sp)
nop

loc_41374C:
la      $t9, ATP_UPNP_Free
b       loc_4137F8
move    $a0, $s0

loc_413758:
beqz    $s3, loc_413768
sltu    $v0, $v1, $s3
beqz    $v0, loc_413770
move    $s0, $s4

loc_413768:
move    $s3, $v1
move    $s0, $s4

loc_413770:
bnez    $s0, loc_41369C
nop
lw      $s2, 0x38($s2)
nop

loc_413780:
bnez    $s2, loc_413690
nop
lw      $v0, 0x28($s1)
nop
bnez    $v0, loc_4137B8
nop

loc_413798:
lw      $v0, 0x24($s1)
nop
bnez    $v0, loc_4137B8
nop
lw      $v0, 0x2C($s1)
nop
bnez    $v0, loc_413798
move    $s1, $v0

loc_4137B8:
move    $s1, $v0

loc_4137BC:
bnez    $s1, loc_413684
move    $v0, $s3
lw      $ra, 0x48+var_4($sp)
lw      $s7, 0x48+var_8($sp)
lw      $s6, 0x48+var_C($sp)
lw      $s5, 0x48+var_10($sp)
lw      $s4, 0x48+var_14($sp)
lw      $s3, 0x48+var_18($sp)
lw      $s2, 0x48+var_1C($sp)
lw      $s1, 0x48+var_20($sp)
lw      $s0, 0x48+var_24($sp)
jr      $ra
addiu   $sp, 0x48

loc_4137F0:
la      $t9, perror
nop

loc_4137F8:
jalr    $t9
move    $s0, $s4
lw      $gp, 0x48+var_38($sp)
b       loc_413770
nop
 # End of function ATP_UPNP_CheckExpiredSubscription




.globl upnpScpdStrip
upnpScpdStrip:

var_38= -0x38
var_30= -0x30
var_2C= -0x2C
var_28= -0x28
var_20= -0x20
var_1C= -0x1C
var_18= -0x18
var_14= -0x14
var_10= -0x10
var_C= -0xC
var_8= -8
var_4= -4

lui     $gp, 0x43
addiu   $sp, -0x48
li      $gp, 0x42E470
sw      $ra, 0x48+var_4($sp)
sw      $s6, 0x48+var_8($sp)
sw      $s5, 0x48+var_C($sp)
sw      $s4, 0x48+var_10($sp)
sw      $s3, 0x48+var_14($sp)
sw      $s2, 0x48+var_18($sp)
sw      $s1, 0x48+var_1C($sp)
sw      $s0, 0x48+var_20($sp)
sw      $gp, 0x48+var_38($sp)
beqz    $a0, loc_413A7C
move    $s3, $a1
beqz    $a1, loc_413A7C
nop
la      $t9, TSP_XML_ParseFile
sw      $zero, 0x48+var_28($sp)
sw      $zero, 0x48+var_2C($sp)
sw      $zero, 0x48+var_30($sp)
sw      $zero, 0($a1)
jalr    $t9 ; TSP_XML_ParseFile
addiu   $a1, $sp, 0x48+var_30
lw      $gp, 0x48+var_38($sp)
bnez    $v0, loc_413A80
move    $s0, $v0
la      $t9, TSP_XML_GetNodeByUrl
lw      $a0, 0x48+var_30($sp)
la      $a1, aScpdActionlist_0  # "scpd.actionList"
jalr    $t9 ; TSP_XML_GetNodeByUrl
addiu   $a2, $sp, 0x48+var_2C
lw      $gp, 0x48+var_38($sp)
beqz    $v0, loc_4138B0
move    $s0, $v0
li      $v0, 0x1F000703
beq     $s0, $v0, loc_413960
nop
b       loc_413A00
nop

loc_4138B0:
la      $t9, TSP_XML_RemoveAttr
lw      $a0, 0x48+var_2C($sp)
la      $a2, aCfmnodename  # "cfmNodeName"
jalr    $t9 ; TSP_XML_RemoveAttr
move    $a1, $zero
lw      $gp, 0x48+var_38($sp)
beqz    $v0, loc_4138E4
move    $s0, $v0
li      $v0, 0x1F000703
bne     $s0, $v0, loc_413A00
nop

loc_4138E4:
la      $t9, TSP_XML_GetNodeFirstChild
lw      $a0, 0x48+var_2C($sp)
jalr    $t9 ; TSP_XML_GetNodeFirstChild
nop
sw      $v0, 0x48+var_2C($sp)
lui     $v0, 0x41
addiu   $s2, $v0, (aAttr - 0x410000)  # "attr"
lui     $v0, 0x1F00
lw      $gp, 0x48+var_38($sp)
b       loc_413948
ori     $s1, $v0, 0x703

loc_413910:
jalr    $t9 ; TSP_XML_RemoveAttr
nop
lw      $gp, 0x48+var_38($sp)
nop
la      $t9, TSP_XML_GetNodeNextSibling
beqz    $v0, loc_413934
move    $s0, $v0
bne     $v0, $s1, loc_413A00
nop

loc_413934:
lw      $a0, 0x48+var_2C($sp)
jalr    $t9 ; TSP_XML_GetNodeNextSibling
nop
lw      $gp, 0x48+var_38($sp)
sw      $v0, 0x48+var_2C($sp)

loc_413948:
lw      $v0, 0x48+var_2C($sp)
la      $t9, TSP_XML_RemoveAttr
move    $a1, $zero
move    $a2, $s2
bnez    $v0, loc_413910
move    $a0, $v0

loc_413960:
la      $t9, TSP_XML_GetNodeByUrl
lw      $a0, 0x48+var_30($sp)
la      $a1, aScpdServicesta  # "scpd.serviceStateTable.stateVariable"
jalr    $t9 ; TSP_XML_GetNodeByUrl
addiu   $a2, $sp, 0x48+var_28
lw      $gp, 0x48+var_38($sp)
beqz    $v0, loc_413A34
addiu   $s2, $sp, 0x48+var_2C
la      $t9, TSP_XML_FreeNode
lw      $a0, 0x48+var_30($sp)
b       loc_413A08
move    $s0, $v0

loc_413994:
jalr    $t9 ; TSP_XML_GetNodeByUrl
nop
lw      $gp, 0x48+var_38($sp)
lw      $a0, 0x48+var_2C($sp)
move    $a2, $s5
la      $t9, TSP_XML_RemoveAttr
move    $a1, $zero
jalr    $t9 ; TSP_XML_RemoveAttr
move    $s0, $v0
lw      $gp, 0x48+var_38($sp)
addu    $s0, $v0, $s0
move    $a1, $zero
la      $t9, TSP_XML_RemoveAttr
beqz    $s0, loc_4139D8
move    $a2, $s4
bne     $s0, $s1, loc_413A00
nop

loc_4139D8:
lw      $a0, 0x48+var_2C($sp)
jalr    $t9 ; TSP_XML_RemoveAttr
nop
lw      $gp, 0x48+var_38($sp)
nop
la      $t9, TSP_XML_GetNodeNextSibling
beqz    $v0, loc_413A1C
move    $s0, $v0
beq     $v0, $s1, loc_413A1C
nop

loc_413A00:
la      $t9, TSP_XML_FreeNode
lw      $a0, 0x48+var_30($sp)

loc_413A08:
jalr    $t9 ; TSP_XML_FreeNode
nop
lw      $gp, 0x48+var_38($sp)
b       loc_413A80
nop

loc_413A1C:
lw      $a0, 0x48+var_28($sp)
jalr    $t9 ; TSP_XML_GetNodeNextSibling
nop
lw      $gp, 0x48+var_38($sp)
b       loc_413A54
sw      $v0, 0x48+var_28($sp)

loc_413A34:
lui     $v0, 0x41
addiu   $s6, $v0, (aStatevariableN - 0x410000)  # "stateVariable.name"
lui     $v0, 0x41
addiu   $s5, $v0, (aCfmnodename - 0x410000)  # "cfmNodeName"
lui     $v0, 0x1F00
ori     $s1, $v0, 0x703
lui     $v0, 0x41
addiu   $s4, $v0, (aDftvalue - 0x410000)  # "dftValue"

loc_413A54:
lw      $v0, 0x48+var_28($sp)
la      $t9, TSP_XML_GetNodeByUrl
move    $a1, $s6
move    $a2, $s2
bnez    $v0, loc_413994
move    $a0, $v0
lw      $v0, 0x48+var_30($sp)
move    $s0, $zero
b       loc_413A80
sw      $v0, 0($s3)

loc_413A7C:
lui     $s0, 0x4009

loc_413A80:
lw      $ra, 0x48+var_4($sp)
move    $v0, $s0
lw      $s6, 0x48+var_8($sp)
lw      $s5, 0x48+var_C($sp)
lw      $s4, 0x48+var_10($sp)
lw      $s3, 0x48+var_14($sp)
lw      $s2, 0x48+var_18($sp)
lw      $s1, 0x48+var_1C($sp)
lw      $s0, 0x48+var_20($sp)
jr      $ra
addiu   $sp, 0x48
 # End of function upnpScpdStrip

.align 4



sub_413AB0:

var_18= -0x18
var_C= -0xC
var_8= -8
var_4= -4

addiu   $sp, -0x28
sw      $ra, 0x28+var_4($sp)
sw      $s1, 0x28+var_8($sp)
sw      $s0, 0x28+var_C($sp)
sw      $gp, 0x28+var_18($sp)
lui     $v0, 0x42
addiu   $s0, $v0, (unk_426000 - 0x420000)
b       loc_413AE0
li      $s1, 0xFFFFFFFF

loc_413AD4:
jalr    $t9
nop
lw      $gp, 0x28+var_18($sp)

loc_413AE0:
lw      $t9, 0($s0)
nop
bne     $t9, $s1, loc_413AD4
addiu   $s0, -4
lw      $ra, 0x28+var_4($sp)
lw      $s1, 0x28+var_8($sp)
lw      $s0, 0x28+var_C($sp)
jr      $ra
addiu   $sp, 0x28
 # End of function sub_413AB0

.align 4



_ATP_MSG_SimpleBuilder:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xE4
 # End of function _ATP_MSG_SimpleBuilder




_TSP_XML_ParseFile:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xE2
 # End of function _TSP_XML_ParseFile




_ATP_HTTP_ClientRecvAllBody:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xE1
 # End of function _ATP_HTTP_ClientRecvAllBody




_ATP_UTIL_StrFileClose:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xE0
 # End of function _ATP_UTIL_StrFileClose




_TSP_XML_FreeMem:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xDF
 # End of function _TSP_XML_FreeMem




_ATP_CFMA_GetObjInstNum:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xDD
 # End of function _ATP_CFMA_GetObjInstNum




_strftime:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xDA
 # End of function _strftime




_calloc:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xD9
 # End of function _calloc




_ATP_MSG_SendSimpleMsg:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xD8
 # End of function _ATP_MSG_SendSimpleMsg




_ATP_UTIL_StrFileFlush:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xD7
 # End of function _ATP_UTIL_StrFileFlush




_ATP_UTIL_GVarSetValue:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xD6
 # End of function _ATP_UTIL_GVarSetValue




_TSP_XML_SetNode:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xD5
 # End of function _TSP_XML_SetNode




___errno_location:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xD3
 # End of function ___errno_location




_ATP_LOG_Printf:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xD1
 # End of function _ATP_LOG_Printf




_fwrite:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xD0
 # End of function _fwrite




_system:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xCF
 # End of function _system




_usleep:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xCD
 # End of function _usleep




_memcpy:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xCC
 # End of function _memcpy




_ATP_UTIL_GVarInit:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xCB
 # End of function _ATP_UTIL_GVarInit




_TSP_XML_Transform:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xCA
 # End of function _TSP_XML_Transform




_ATP_UTIL_GetIpAddresses:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xC7
 # End of function _ATP_UTIL_GetIpAddresses




_strcat:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xBF
 # End of function _strcat




_ATP_CFMA_GetPara:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xBE
 # End of function _ATP_CFMA_GetPara




_ATP_HTTP_ClientGetSendBuf:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xBD
 # End of function _ATP_HTTP_ClientGetSendBuf




_ATP_MSG_RegisterMsgProc:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xBC
 # End of function _ATP_MSG_RegisterMsgProc




_ATP_HTTP_ClientSend:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xBB
 # End of function _ATP_HTTP_ClientSend




_strcasecmp:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xB9
 # End of function _strcasecmp




_ATP_UTIL_TimerDel:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xB8
 # End of function _ATP_UTIL_TimerDel




_strtoul:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xB7
 # End of function _strtoul




_ATP_UTIL_ParseUrl:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xB6
 # End of function _ATP_UTIL_ParseUrl




_ATP_UTIL_GetSysTime:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xB5
 # End of function _ATP_UTIL_GetSysTime




_ATP_UTIL_SockBaseRegEvtProc:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xB4
 # End of function _ATP_UTIL_SockBaseRegEvtProc




_malloc:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xB3
 # End of function _malloc




_strrchr:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xB0
 # End of function _strrchr




_strncmp:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xAF
 # End of function _strncmp




___uClibc_main:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xAE
 # End of function ___uClibc_main




_TSP_XML_AddAttr:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xAD
 # End of function _TSP_XML_AddAttr




_TSP_XML_GetNodeValue:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xAA
 # End of function _TSP_XML_GetNodeValue




_strlen:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xA9
 # End of function _strlen




_ATP_CFM_FreeObj:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xA5
 # End of function _ATP_CFM_FreeObj




_ATP_CFM_CfgMsgAppendPara:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xA4
 # End of function _ATP_CFM_CfgMsgAppendPara




_snprintf:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xA3
 # End of function _snprintf




_ATP_UTIL_SocketCreateClient:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xA1
 # End of function _ATP_UTIL_SocketCreateClient




_ATP_DBGetParaByName:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xA0
 # End of function _ATP_DBGetParaByName




_ATP_DBGetPara:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x9F
 # End of function _ATP_DBGetPara




_ATP_UTIL_SSLCreateCtx:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x9C
 # End of function _ATP_UTIL_SSLCreateCtx




_TSP_XML_RemoveNode:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x9A
 # End of function _TSP_XML_RemoveNode




_TSP_XML_AddNextSiblingNode:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x99
 # End of function _TSP_XML_AddNextSiblingNode




_TSP_XML_GetNodeByUrl:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x97
 # End of function _TSP_XML_GetNodeByUrl




_ATP_UTIL_StrFileToBuf:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x96
 # End of function _ATP_UTIL_StrFileToBuf




_ATP_DBGetObj:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x95
 # End of function _ATP_DBGetObj




_TSP_XML_GetAttr:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x92
 # End of function _TSP_XML_GetAttr




_TSP_XML_CloneNodeSelf:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x91
 # End of function _TSP_XML_CloneNodeSelf




_ATP_UTIL_TimerAdd:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x8E
 # End of function _ATP_UTIL_TimerAdd




_ATP_UTIL_StrFileOpen:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x8D
 # End of function _ATP_UTIL_StrFileOpen




_ATP_HTTP_ClientSetSocket:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x8B
 # End of function _ATP_HTTP_ClientSetSocket




_fclose:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x88
 # End of function _fclose




_setsockopt:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x87
 # End of function _setsockopt




_fread:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x85
 # End of function _fread




_ATP_UTIL_BgetStrdup:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x84
 # End of function _ATP_UTIL_BgetStrdup




_ATP_UTIL_StrFileWriteBin:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x82
 # End of function _ATP_UTIL_StrFileWriteBin




_fopen:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x81
 # End of function _fopen




_BSP_NET_GetBaseMacAddress:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x80
 # End of function _BSP_NET_GetBaseMacAddress




_time:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x7F
 # End of function _time




_ATP_CFM_UtilConvertValueType:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x7E
 # End of function _ATP_CFM_UtilConvertValueType




_ATP_UTIL_SocketConnect:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x7D
 # End of function _ATP_UTIL_SocketConnect




_ATP_CFM_GetParaNumOfMsg:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x7B
 # End of function _ATP_CFM_GetParaNumOfMsg




_ATP_HTTP_PacketSetHeader:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x7A
 # End of function _ATP_HTTP_PacketSetHeader




_localtime:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x78
 # End of function _localtime




_close:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x77
 # End of function _close




_ATP_UTIL_BgetFree:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x75
 # End of function _ATP_UTIL_BgetFree




_ATP_DBKeyListToDomain:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x74
 # End of function _ATP_DBKeyListToDomain




_TSP_XML_FreeNode:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x73
 # End of function _TSP_XML_FreeNode




_TSP_XML_Parse:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x72
 # End of function _TSP_XML_Parse




_TSP_XML_AppendChildNode:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x71
 # End of function _TSP_XML_AppendChildNode




_ATP_CFM_CfgMsgHeadBuilder:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x70
 # End of function _ATP_CFM_CfgMsgHeadBuilder




_ATP_CFM_GetParaOfMsgByOID:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x6F
 # End of function _ATP_CFM_GetParaOfMsgByOID




_ATP_HTTP_PacketDestroy:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x6E
 # End of function _ATP_HTTP_PacketDestroy




_strncpy:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x6B
 # End of function _strncpy




_ATP_HTTP_PacketGetHeaderValue:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x69
 # End of function _ATP_HTTP_PacketGetHeaderValue




_ATP_UTIL_StrFileBuffer:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x67
 # End of function _ATP_UTIL_StrFileBuffer




_TSP_XML_CreateNode:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x66
 # End of function _TSP_XML_CreateNode




_ATP_CFM_MsgFree:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x65
 # End of function _ATP_CFM_MsgFree




_ATP_HTTP_ClientDisconnect:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x64
 # End of function _ATP_HTTP_ClientDisconnect




_ATP_MSG_SendAndRecv:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x63
 # End of function _ATP_MSG_SendAndRecv




_BSP_SYS_GetInfo:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x62
 # End of function _BSP_SYS_GetInfo




_TSP_XML_RemoveAttr:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x60
 # End of function _TSP_XML_RemoveAttr




_ATP_CFM_ExtReboot:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x5E
 # End of function _ATP_CFM_ExtReboot




_ATP_UTIL_StrFileReSize:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x5D
 # End of function _ATP_UTIL_StrFileReSize




_ATP_HTTP_ClientSendEx:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x5C
 # End of function _ATP_HTTP_ClientSendEx




_ATP_UTIL_GVarDelModule:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x5A
 # End of function _ATP_UTIL_GVarDelModule




_ATP_DBDomainToKeyList:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x59
 # End of function _ATP_DBDomainToKeyList




_ATP_UTIL_SocketRecv:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x58
 # End of function _ATP_UTIL_SocketRecv




_memset:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x57
 # End of function _memset




_inet_ntoa:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x56
 # End of function _inet_ntoa




_ATP_UTIL_SocketSetTTL:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x55
 # End of function _ATP_UTIL_SocketSetTTL




_perror:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x54
 # End of function _perror




_ATP_HTTP_ServerCreate:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x53
 # End of function _ATP_HTTP_ServerCreate




_ATP_UTIL_SocketSend:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x52
 # End of function _ATP_UTIL_SocketSend




_ATP_CFMA_SetPara:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x51
 # End of function _ATP_CFMA_SetPara




_TSP_XML_GetNodeNextSibling:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x4E
 # End of function _TSP_XML_GetNodeNextSibling




_TSP_XML_AddFirstChildNode:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x4C
 # End of function _TSP_XML_AddFirstChildNode




_ATP_UTIL_SockBaseStart:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x4A
 # End of function _ATP_UTIL_SockBaseStart




_ATP_DBInit:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x49
 # End of function _ATP_DBInit




_ATP_UTIL_GetMimeTypeFromSuffix:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x48
 # End of function _ATP_UTIL_GetMimeTypeFromSuffix




_inet_addr:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x47
 # End of function _inet_addr




_memcmp:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x46
 # End of function _memcmp




_ATP_UTIL_SocketCreateServer:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x44
 # End of function _ATP_UTIL_SocketCreateServer




_socket:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x43
 # End of function _socket




_fseek:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x42
 # End of function _fseek




_ATP_CFM_GetParaOfMsgBySeqNum:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x40
 # End of function _ATP_CFM_GetParaOfMsgBySeqNum




_ATP_UTIL_SocketSetMcastIf:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x3D
 # End of function _ATP_UTIL_SocketSetMcastIf




_rand:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x3C
 # End of function _rand




_exit:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x39
 # End of function _exit




_strstr:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x36
 # End of function _strstr




_ATP_HTTP_ServerAppendSocket:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x35
 # End of function _ATP_HTTP_ServerAppendSocket




_strcmp:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x34
 # End of function _strcmp




_ATP_UTIL_GVarGetMemHandle:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x33
 # End of function _ATP_UTIL_GVarGetMemHandle




_getopt:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x32
 # End of function _getopt




_ATP_UTIL_StrFilePrintf:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x2F
 # End of function _ATP_UTIL_StrFilePrintf




_ATP_UTIL_SocketDisconnect:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x2E
 # End of function _ATP_UTIL_SocketDisconnect




_ftell:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x2D
 # End of function _ftell




_free:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x2B
 # End of function _free




_atoi:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x2A
 # End of function _atoi




_ATP_HTTP_ClientCreate:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x29
 # End of function _ATP_HTTP_ClientCreate




_strchr:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x28
 # End of function _strchr




_ATP_UTIL_StrFileTell:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x26
 # End of function _ATP_UTIL_StrFileTell




_listen:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x24
 # End of function _listen




_srand:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x23
 # End of function _srand




_printf:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x22
 # End of function _printf




_strdup:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x21
 # End of function _strdup




_puts:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x20
 # End of function _puts




_ATP_UTIL_GVarGetValue:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x1F
 # End of function _ATP_UTIL_GVarGetValue




_ATP_UTIL_BgetMalloc:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x1D
 # End of function _ATP_UTIL_BgetMalloc




_ATP_MSG_Init:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x1B
 # End of function _ATP_MSG_Init




_signal:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x1A
 # End of function _signal




_ATP_UTIL_TimerChgPeriod:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x19
 # End of function _ATP_UTIL_TimerChgPeriod




_ATP_UTIL_SocketJoinMcast:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x17
 # End of function _ATP_UTIL_SocketJoinMcast




_ATP_HTTP_ClientCheckAuthorization:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x14
 # End of function _ATP_HTTP_ClientCheckAuthorization




_TSP_XML_GetNodeFirstChild:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x12
 # End of function _TSP_XML_GetNodeFirstChild




_ATP_UTIL_SocketClose:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0x10
 # End of function _ATP_UTIL_SocketClose




_strcpy:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xC
 # End of function _strcpy




_ATP_MSG_Send:
lw      $t9, dword_426480
move    $t7, $ra
jalr    $t9
li      $t8, 0xB
nop
nop
nop
nop
 # End of function _ATP_MSG_Send




.globl _term_proc
_term_proc:

var_10= -0x10
var_8= -8
var_4= -4

li      $gp, 0x1A060     # _fini
addu    $gp, $t9
addiu   $sp, -0x20
sw      $gp, 0x20+var_10($sp)
sw      $ra, 0x20+var_4($sp)
sw      $gp, 0x20+var_8($sp)
bal     loc_414434
nop

loc_414434:
li      $gp, 0x42E470
la      $t9, dword_400000
nop
addiu   $t9, (sub_402A60 - 0x400000)
jalr    $t9 ; sub_402A60
nop
lw      $gp, 0x20+var_10($sp)
nop
lw      $ra, 0x20+var_4($sp)
jr      $ra
addiu   $sp, 0x20
 # End of function _term_proc

.align 4
aAtpv:.ascii "atpv"<0>
.byte 0, 0, 0
aS:.ascii "\r\n"
.ascii "%s.\n"<0>
.byte 0
aSTR:.ascii "s:t:r"<0>
.half 0
aUpnpCmsIsNotRe:.ascii "Upnp: cms is not ready, wait fo"
.ascii "r next chance."<0>
.half 0
aUpnp:.ascii "upnp"<0>
.byte 0, 0, 0
aTr064RegMsgDbP:.ascii "tr064 reg msg/db proc failed:%X"
.ascii "\n"<0>
.byte 0, 0, 0
aEtcUpnp:.ascii "/etc/upnp"<0>
.half 0
aFatalErrorCrea:.ascii "Fatal error, create upnp stack "
.ascii "failed."<0>
.byte 0
aCreateUpnpHttp:.ascii "Create upnp http socket failed:"
.ascii " %d.\n"<0>
.byte 0, 0, 0
aEtcRootPem:.ascii "/etc/root.pem"<0>
.half 0
aEtcServercertP:.ascii "/etc/servercert.pem"<0>
aEtcServerkeyPe:.ascii "/etc/serverkey.pem"<0>
.byte 0
aCreateTr064Htt:.ascii "Create tr064 https socket faile"
.ascii "d: %d.\n"<0>
.byte 0
aCanNotStartHtt:.ascii "Can not start https socket."<0>
aNotify:.ascii "NOTIFY"<0>
.byte 0
aMSearch:.ascii "M-SEARCH"<0>
.byte 0, 0, 0
aSubscribe:.ascii "SUBSCRIBE"<0>
.half 0
aUnsubscribe:.ascii "UNSUBSCRIBE"<0>
aNt:.ascii "NT"<0>
.byte 0
dword_4145EC:.word 0x4E545300, 0x55534E00, 0x4D414E00
.word 0x4D580000, 0x53540000, 0x45585400
.word 0x54494D45, 0x4F555400, 0x43414C4C
.word 0x4241434B, 0
aBrctlAddbrBr09:.ascii "brctl addbr br0:9 2> /dev/null"<0>
.byte 0
aIfconfigBr0916:.ascii "ifconfig br0:9 169.254.100.156 "
.ascii "netmask 255.0.0.0 2> /dev/null"<0>
.half 0
aIfconfigBr09Up:.ascii "ifconfig br0:9 up 2> /dev/null"<0>
.byte 0
a169254100156:.ascii "169.254.100.156"<0>
aIfconfigBr09Do:.ascii "ifconfig br0:9 down 2> /dev/nul"
.ascii "l"<0>
.byte 0, 0, 0
aBrctlDelbrBr09:.ascii "brctl delbr br0:9 2> /dev/null"<0>
.byte 0
aMic:.ascii "mic"<0>
aRouteAddNet239:.ascii "route add -net 239.0.0.0 netmas"
.ascii "k 255.0.0.0 dev br0"<0>
.byte 0
aHuaweiModel:.ascii "Huawei Model"<0>
.byte 0, 0, 0
aHttpWwwHuaweiC:.ascii "http://www.huawei.com"<0>
.half 0
a000000000001:.ascii "000000000001"<0>
.byte 0, 0, 0
a239255255250:.ascii "239.255.255.250"<0>
aGetPubInfoFrom:.ascii "Get pub info from shm failed."<0>
.half 0
aLayer3forwardi_0:.ascii "Layer3Forwarding"<0>
.byte 0, 0, 0
aL3forwarding:.ascii "L3Forwarding"<0>
.byte 0, 0, 0
aWancommoninter_0:.ascii "WANCommonInterfaceConfig"<0>
.byte 0, 0, 0
aWancommonifc:.ascii "WANCommonIFC"<0>
.byte 0, 0, 0
aWanpotslinkcon:.ascii "WANPOTSLinkConfig"<0>
.half 0
aWanpotslinkc:.ascii "WANPOTSLinkC"<0>
.byte 0, 0, 0
aWandsllinkconf_0:.ascii "WANDSLLinkConfig"<0>
.byte 0, 0, 0
aWandsllinkc:.ascii "WANDSLLinkC"<0>
aWancablelinkco:.ascii "WANCableLinkConfig"<0>
.byte 0
aWancablelinkc:.ascii "WANCableLinkC"<0>
.half 0
aWanethernetlin_0:.ascii "WANEthernetLinkConfig"<0>
.half 0
aWanethlinkc:.ascii "WANEthLinkC"<0>
aWanpppconnecti_0:.ascii "WANPPPConnection"<0>
.byte 0, 0, 0
aWanpppconn:.ascii "WANPPPConn"<0>
.byte 0
aWanipconnectio_0:.ascii "WANIPConnection"<0>
aWanipconn:.ascii "WANIPConn"<0>
.half 0
aLanhostconfigm_0:.ascii "LANHostConfigManagement"<0>
aLanhostcfg:.ascii "LANHostCfg"<0>
.byte 0
.align 4
dword_4148D0:.word 0, 0, 0, 0, 0, 0
dword_4148E8:.word 0, 0, 0, 0, 0, 0
dword_414900:.word 0x4E657700
aFcspreserved:.ascii "FCSPreserved"<0>
.byte 0, 0, 0
aAutoconfig:.ascii "AutoConfig"<0>
.byte 0
aEnabledforinte:.ascii "EnabledForInternet"<0>
.byte 0
aSubnetmask:.ascii "SubnetMask"<0>
.byte 0
a2552552550:.ascii "255.255.255.0"<0>
.half 0
aDhcprelay:.ascii "DHCPRelay"<0>
.half 0
aUpstreammaxbit:.ascii "UpstreamMaxBitRate"<0>
.byte 0
aDownstreammaxb:.ascii "DownstreamMaxBitRate"<0>
.byte 0, 0, 0
dword_414988:.word 0x496E7465, 0x726E6574, 0x47617465
.word 0x77617944, 0x65766963, 0x652E4C41
.word 0x4E446576, 0x6963652E, 0x312E585F
.word 0x574C414E
aEnable:.ascii "Enable"<0>
.byte 0
aInternetgatewa_0:.ascii "InternetGatewayDevice.DeviceInf"
.ascii "o.SoftwareVersion"<0>
.byte 0, 0, 0
aSoftwareversio:.ascii "SoftwareVersion"<0>
aWepkeyDWepkey:.ascii "WEPKey.%d.WEPKey"<0>
.byte 0, 0, 0
aWepkeyD:.ascii "WEPKey%d"<0>
.byte 0, 0, 0
aPresharedkey1P:.ascii "PreSharedKey.1.PreSharedKey"<0>
aPresharedkey:.ascii "PreSharedKey"<0>
.byte 0, 0, 0
aNatenabled:.ascii "NATEnabled"<0>
.byte 0
aRsipavailable:.ascii "RSIPAvailable"<0>
.half 0
aNewremotehost:.ascii "NewRemoteHost"<0>
.half 0
aNewexternalpor:.ascii "NewExternalPort"<0>
aNewprotocol:.ascii "NewProtocol"<0>
aNewinternalpor:.ascii "NewInternalPort"<0>
aNewinternalcli:.ascii "NewInternalClient"<0>
.half 0
aNewenabled:.ascii "NewEnabled"<0>
.byte 0
aNewportmapping:.ascii "NewPortMappingDescription"<0>
.half 0
aNewleasedurati:.ascii "NewLeaseDuration"<0>
.byte 0, 0, 0
aNewportmapping_0:.ascii "NewPortMappingIndex"<0>
aWpa11iencrypti:.ascii "WPA11iEncryptionModes"<0>
.half 0
aWpa11iauthenti:.ascii "WPA11iAuthenticationMode"<0>
.byte 0, 0, 0
aNewpassword:.ascii "NewPassword"<0>
aRemotehost:.ascii "RemoteHost"<0>
.byte 0
aExternalport:.ascii "ExternalPort"<0>
.byte 0, 0, 0
aProtocol:.ascii "Protocol"<0>
.byte 0, 0, 0
aCms:.ascii "cms"<0>
aInternalport:.ascii "InternalPort"<0>
.byte 0, 0, 0
aInternalclient:.ascii "InternalClient"<0>
.byte 0
aEnabled:.ascii "Enabled"<0>
aFalse:.ascii "false"<0>
.half 0
aTrue:.ascii "true"<0>
.byte 0, 0, 0
aPortmappingdes:.ascii "PortMappingDescription"<0>
.byte 0
aWandevice1_0:.ascii "WANDevice.1."<0>
.byte 0, 0, 0
aWandslinterfac_0:.ascii "WANDSLInterfaceConfig."<0>
.byte 0
aLinktype:.ascii "LinkType"<0>
.byte 0, 0, 0
aEoa:.ascii "EoA"<0>
aLinkstatus:.ascii "LinkStatus"<0>
.byte 0
aNewsecuritypor:.ascii "NewSecurityPort"<0>
aNewstatus:.ascii "NewStatus"<0>
.half 0
aChangesapplied:.ascii "ChangesApplied"<0>
.byte 0
aNewsessionid:.ascii "NewSessionID"<0>
.byte 0, 0, 0
aNewdownloadurl:.ascii "NewDownloadURL"<0>
.byte 0
aNewstatusurl:.ascii "NewStatusURL"<0>
.byte 0, 0, 0
aUpgGUST1Firmwa:.ascii "upg -g -U %s -t '1 Firmware Upg"
.ascii "rade Image' -c upnp -r %s -d -b"
.ascii <0>
.byte 0
aInternetgatewa:.ascii "InternetGatewayDevice:1"<0>
aUrnWwwHuaweiCo:.ascii "urn:www-huawei-com:service:Devi"
.ascii "ceUpgrade:1"<0>
.byte 0
aDevupgXml:.ascii "DevUpg.xml"<0>
.byte 0
aLayer3forwardi:.ascii "Layer3Forwarding:1"<0>
.byte 0
aL3fwdXml:.ascii "L3Fwd.xml"<0>
.half 0
aLanconfigsecur:.ascii "LANConfigSecurity:1"<0>
aLansecXml:.ascii "LANSec.xml"<0>
.byte 0
aUrnWwwHuaweiCo_0:.ascii "urn:www-huawei-com:service:Devi"
.ascii "ceConfig:1"<0>
.half 0
aDevcfgXml:.ascii "DevCfg.xml"<0>
.byte 0
aWandevice1:.ascii "WANDevice:1"<0>
aWancommoninter:.ascii "WANCommonInterfaceConfig:1"<0>
.byte 0
aWancommonifc1X:.ascii "WanCommonIfc1.xml"<0>
.half 0
aWandslinterfac:.ascii "WANDSLInterfaceConfig:1"<0>
aWandslifcfgXml:.ascii "WanDslIfCfg.xml"<0>
aWanconnectiond:.ascii "WANConnectionDevice:1"<0>
.half 0
aWandsllinkconf:.ascii "WANDSLLinkConfig:1"<0>
.byte 0
aWandsllinkXml:.ascii "WanDslLink.xml"<0>
.byte 0
aWanipconnectio:.ascii "WANIPConnection:1"<0>
.half 0
aWanipconnXml:.ascii "WanIpConn.xml"<0>
.half 0
aWanpppconnecti:.ascii "WANPPPConnection:1"<0>
.byte 0
aWanpppconnXml:.ascii "WanPppConn.xml"<0>
.byte 0
aLandevice1:.ascii "LANDevice:1"<0>
aLanhostconfigm:.ascii "LANHostConfigManagement:1"<0>
.half 0
aLanhostcfgmgmt:.ascii "LanHostCfgMgmt.xml"<0>
.byte 0
aWlanconfigurat:.ascii "WLANConfiguration:1"<0>
aWlancfgXml:.ascii "WLANCfg.xml"<0>
aUpgrade:.ascii "Upgrade"<0>
aGetsoftwarever:.ascii "GetSoftwareVersion"<0>
.byte 0
aSetsecuritykey:.ascii "SetSecurityKeys"<0>
aSetenable:.ascii "SetEnable"<0>
.half 0
aSetpresharedke:.ascii "SetPreSharedKey"<0>
aSetwpa11ibeaco:.ascii "SetWPA11iBeaconSecurityProperti"
.ascii "es"<0>
.half 0
aGetsecuritykey:.ascii "GetSecurityKeys"<0>
aGetenable:.ascii "GetEnable"<0>
.half 0
aSetconfigpassw:.ascii "SetConfigPassword"<0>
.half 0
aConfigurations:.ascii "ConfigurationStarted"<0>
.byte 0, 0, 0
aConfigurationf:.ascii "ConfigurationFinished"<0>
.half 0
aGetsecuritypor:.ascii "GetSecurityPort"<0>
aReboot:.ascii "Reboot"<0>
.byte 0
aGetdsllinkinfo:.ascii "GetDSLLinkInfo"<0>
.byte 0
aAddportmapping:.ascii "AddPortMapping"<0>
.byte 0
aDeleteportmapp:.ascii "DeletePortMapping"<0>
.half 0
aGetgenericport:.ascii "GetGenericPortMappingEntry"<0>
.byte 0
aGetspecificpor:.ascii "GetSpecificPortMappingEntry"<0>
aGetnatrsipstat:.ascii "GetNATRSIPStatus"<0>
.byte 0, 0, 0
aGetlinklayerma:.ascii "GetLinkLayerMaxBitRates"<0>
aSetdhcprelay:.ascii "SetDHCPRelay"<0>
.byte 0, 0, 0
aGetdhcprelay:.ascii "GetDHCPRelay"<0>
.byte 0, 0, 0
aSetsubnetmask:.ascii "SetSubnetMask"<0>
.half 0
aGetsubnetmask:.ascii "GetSubnetMask"<0>
.half 0
aSetenabledfori:.ascii "SetEnabledForInternet"<0>
.half 0
aGetenabledfori:.ascii "GetEnabledForInternet"<0>
.half 0
aRequestconnect:.ascii "RequestConnection"<0>
.half 0
aForceterminati:.ascii "ForceTermination"<0>
.byte 0, 0, 0
aGetautoconfig:.ascii "GetAutoConfig"<0>
.half 0
aSetfcspreserve:.ascii "SetFCSPreserved"<0>
aGetfcspreserve:.ascii "GetFCSPreserved"<0>
aSetdsllinktype:.ascii "SetDSLLinkType"<0>
.byte 0
aSetdestination:.ascii "SetDestinationAddress"<0>
.half 0
aSetatmencapsul:.ascii "SetATMEncapsulation"<0>
aSetconnectiont:.ascii "SetConnectionType"<0>
.half 0
aGetusername:.ascii "GetUserName"<0>
aGetpassword:.ascii "GetPassword"<0>
aSetusername:.ascii "SetUserName"<0>
aSetpassword:.ascii "SetPassword"<0>
aSetipinterface:.ascii "SetIPInterfaceInfo"<0>
.byte 0
aSetdnsservers:.ascii "SetDNSServers"<0>
.half 0
aSetssid:.ascii "SetSSID"<0>
aSetbeacontype:.ascii "SetBeaconType"<0>
.half 0
aSetradiomode:.ascii "SetRadioMode"<0>
.byte 0, 0, 0
aSetchannel:.ascii "SetChannel"<0>
.byte 0
aSetdefaultwepk:.ascii "SetDefaultWEPKeyIndex"<0>
.half 0
aSetbasbeaconse:.ascii "SetBasBeaconSecurityProperties"<0>
.byte 0
aSetwpabeaconse:.ascii "SetWPABeaconSecurityProperties"<0>
.byte 0
aSet11ibeaconse:.ascii "Set11iBeaconSecurityProperties"<0>
.byte 0
aSetwepencrypti:.ascii "SetWEPEncryptionLevel"<0>
.half 0
.align 4
dword_415260:.word 0, 0, 0, 0, 0, 0
dword_415278:.word 0, 0, 0, 0, 0, 0
dword_415290:.word 0, 0, 0, 0, 0, 0
dword_4152A8:.word 0, 0, 0, 0, 0, 0
dword_4152C0:.word 0, 0, 0, 0, 0, 0
dword_4152D8:.word 0, 0, 0, 0, 0, 0
dword_4152F0:.word 0, 0, 0, 0, 0, 0
dword_415308:.word 0, 0, 0, 0, 0, 0
aHg532ev100r001:.ascii "HG532eV100R001C01B020 UPNP <lib"
.ascii "upnpapi.a> V1.02"<0>
aSD_2:.ascii "%s%d"<0>
.byte 0, 0, 0
aNotifySHttp11H:.ascii "NOTIFY %s HTTP/1.1\r\n"
.ascii "HOST: %s:%d\r\n"
.ascii "CONTENT-TYPE: text/xml\r\n"
.ascii "CONTENT-LENGTH: %d\r\n"
.ascii "NT: upnp:event\r\n"
.ascii "NTS: upnp:propchange\r\n"
.ascii "SID: uuid:%s\r\n"
.ascii "SEQ: %d\r\n"
.ascii "\r\n"
.ascii "%s%s"<0>
.byte 0, 0, 0
aXmlVersion10:.ascii "<?xml version=\"1.0\"?>\r\n"<0>
aPropertyset:.ascii "propertyset"<0>
aXmlns:.ascii "xmlns"<0>
.half 0
aUrnSchemasUpnp:.ascii "urn:schemas-upnp-org:event-1-0"<0>
.byte 0
aProperty:.ascii "property"<0>
.byte 0, 0, 0
aDslfConfig:.ascii "dslf-config"<0>
aDslfReset:.ascii "dslf-reset"<0>
.byte 0
aLinuxUpnp10Hua:.ascii "Linux UPnP/1.0 Huawei-ATP-IGD"<0>
.half 0
aMaxAgeD:.ascii "max-age=%d"<0>
.byte 0
dword_415488:.word 0x25733A3A
aUpnpRootdevice:.ascii "upnp:rootdevice"<0>
aSS:.ascii "%s::%s"<0>
.byte 0
aUuid:.ascii "uuid:"<0>
.half 0
aTextXmlCharset:.ascii "text/xml; charset=\"utf-8\""<0>
.half 0
aKeepAlive:.ascii "Keep-Alive"<0>
.byte 0
aSEnvelopeXmlns:.ascii "<s:Envelope\n"
.ascii "xmlns:s=\"http://schemas.xmlsoa"
.ascii "p.org/soap/envelope/\"\n"
.ascii "s:encodingStyle=\"http://schema"
.ascii "s.xmlsoap.org/soap/encoding/\">"
.ascii "\n"
.ascii "<s:Body>\n"
.ascii "<s:Fault>\n"
.ascii "<faultcode>s:Client</faultcode>"
.ascii "\n"
.ascii "<faultstring>UPnPError</faultst"
.ascii "ring>\n"
.ascii "<detail>\n"
.ascii "<UPnPError xmlns=\"urn:schemas-"
.ascii "upnp-org:control-1-0\">\n"
.ascii "<errorCode>%d</errorCode>\n"
.ascii "<errorDescription>%s</errorDesc"
.ascii "ription>\n"
.ascii "</UPnPError>\n"
.ascii "</detail>\n"
.ascii "</s:Fault>\n"
.ascii "</s:Body>\n"
.ascii "</s:Envelope>\n"<0>
aRb:.ascii "rb"<0>
.byte 0
aADBYHMSGmt:.ascii "%a, %d %b %Y %H:%M:%S GMT"<0>
.half 0
aXmlVersion10S:.ascii "<?xml version=\"1.0\"?>\n"
.ascii "%s"<0>
.byte 0, 0, 0
aCtrlu:.ascii "/ctrlu/"<0>
aHeader:.ascii "Header"<0>
.byte 0
aSessionid:.ascii "SessionID"<0>
.half 0
aBody:.ascii "Body"<0>
.byte 0, 0, 0
aSresponse:.ascii "%sResponse"<0>
.byte 0
aTr064SetAction:.ascii "tr064 set action(%s) failed !"<0>
.half 0
aUpnpSetActionS:.ascii "upnp set action(%s)"<0>
aParamSValueS:.ascii "[param %s, value:%s]"<0>
.byte 0, 0, 0
aSuccess:.ascii " success !"<0>
.byte 0
aTr064SetAction_0:.ascii "tr064 set action(%s) failed, Er"
.ascii "rorCode: %d!"<0>
aInfinite:.ascii "infinite"<0>
.byte 0, 0, 0
aAtpUpnpCore:.ascii "ATP UPnP Core"<0>
.half 0
aSecondD:.ascii "Second-%d"<0>
.half 0
aSsdpDiscover:.ascii "ssdp:discover"<0>
.half 0
aMxInvalidC:.ascii "MX  invalid <%c>\n"<0>
.half 0
aUpnpdevXml:.ascii "/upnpdev.xml"<0>
.byte 0, 0, 0
aVar:.ascii "/var"<0>
.byte 0, 0, 0
aTr064devXml:.ascii "/tr064dev.xml"<0>
.half 0
aIcon_0:.ascii "/icon/"<0>
.byte 0
aSS_0:.ascii "%s/%s"<0>
.half 0
aDesc:.ascii "/desc/"<0>
.byte 0
aFileNotFound:.ascii "File not found.\n"<0>
.byte 0, 0, 0
asc_4157F4:.ascii "*"<0>
.half 0
a23925525525019:.ascii "239.255.255.250:1900"<0>
.byte 0, 0, 0
aSsdpAlive:.ascii "ssdp:alive"<0>
.byte 0
aSsdpByebye:.ascii "ssdp:byebye"<0>
asc_415828:.ascii "::"<0>
.byte 0
.align 4
dword_415830:.word 0, 0, 0, 0, 0, 0
dword_415848:.word 0, 0, 0, 0, 0, 0
dword_415860:.word 0, 0, 0, 0, 0, 0, 0, 0
aSD:.ascii "%s.%d."<0>
.byte 0
aS_0:.ascii "%s."<0>
aEvt:.ascii "/evt/"<0>
.half 0
aCtrlt:.ascii "/ctrlt/"<0>
aSSD:.ascii "%s%s_%d"<0>
aDslforumOrg:.ascii "dslforum-org"<0>
.byte 0, 0, 0
aSchemasUpnpOrg:.ascii "schemas-upnp-org"<0>
.byte 0, 0, 0
aUrnSSS:.ascii "urn:%s:%s:%s"<0>
.byte 0, 0, 0
aService:.ascii "service"<0>
aDevice:.ascii "device"<0>
.byte 0
aUuidS22x22x22x:.ascii "uuid:%s%2.2x-%2.2x%2.2x%2.2x%2."
.ascii "2x%2.2x%2.2x"<0>
a00e0fc37252528:.ascii "00e0fc37-2525-2828-25"<0>
.half 0
a00e0fc37262628:.ascii "00e0fc37-2626-2828-26"<0>
.half 0
aUpnpAll:.ascii "upnp:all"<0>
.byte 0, 0, 0
aSsdpAll:.ascii "ssdp:all"<0>
.byte 0, 0, 0
aSD_1:.ascii "%s_%d"<0>
.half 0
aEnableGotValue:.ascii "Enable Got value: %d\n"<0>
.half 0
aNatenabledGotV:.ascii "NATEnabled Got value: %d\n"
.ascii "\n"<0>
.byte 0
aPstlastIsNull:.ascii "pstLast is null"<0>
aSwancommoninte:.ascii "%sWANCommonInterfaceConfig.WANA"
.ascii "ccessType"<0>
.byte 0, 0, 0
aDsl:.ascii "DSL"<0>
aWanethernetlin:.ascii "WANEthernetLinkConfig:1"<0>
aEthernet:.ascii "Ethernet"<0>
.byte 0, 0, 0
aUrn:.ascii "urn:"<0>
.byte 0, 0, 0
aActionArgument:.ascii "action.argumentList.argument"<0>
.byte 0, 0, 0
aArgumentDirect:.ascii "argument.direction"<0>
.byte 0
aIn:.ascii "in"<0>
.byte 0
aOut:.ascii "out"<0>
aArgumentName:.ascii "argument.name"<0>
.half 0
aArgumentRelate:.ascii "argument.relatedStateVariable"<0>
.half 0
aScpdActionlist_0:.ascii "scpd.actionList"<0>
aCfmnodename:.ascii "cfmNodeName"<0>
aScpdServicesta:.ascii "scpd.serviceStateTable.stateVar"
.ascii "iable"<0>
.byte 0, 0, 0
aSendevents:.ascii "sendEvents"<0>
.byte 0
aYes:.ascii "yes"<0>
aStatevariableN:.ascii "stateVariable.name"<0>
.byte 0
aDftvalue:.ascii "dftValue"<0>
.byte 0, 0, 0
aScpdActionlist:.ascii "scpd.actionList.action"<0>
.byte 0
aAttr:.ascii "attr"<0>
.byte 0, 0, 0
aActionName:.ascii "action.name"<0>
aSS_1:.ascii "%s%s."<0>
.half 0
aSD_0:.ascii "%s%d."<0>
.half 0
aDevicetype:.ascii "deviceType"<0>
.byte 0
aFriendlyname:.ascii "friendlyName"<0>
.byte 0, 0, 0
aManufacturer:.ascii "manufacturer"<0>
.byte 0, 0, 0
aManufacturerur:.ascii "manufacturerURL"<0>
aModeldescripti:.ascii "modelDescription"<0>
.byte 0, 0, 0
aModelname:.ascii "modelName"<0>
.half 0
aModelnumber:.ascii "modelNumber"<0>
aModelurl:.ascii "modelURL"<0>
.byte 0, 0, 0
aSerialnumber:.ascii "serialNumber"<0>
.byte 0, 0, 0
aUdn:.ascii "UDN"<0>
aUpc:.ascii "UPC"<0>
aIconlist:.ascii "iconList"<0>
.byte 0, 0, 0
aIcon:.ascii "icon"<0>
.byte 0, 0, 0
aMimetype:.ascii "mimetype"<0>
.byte 0, 0, 0
aWidth:.ascii "width"<0>
.half 0
aHeight:.ascii "height"<0>
.byte 0
aDepth:.ascii "depth"<0>
.half 0
aUrl:.ascii "url"<0>
aServicelist:.ascii "serviceList"<0>
aUrnSSSD:.ascii "urn:%s:%s:%s%d"<0>
.byte 0
aServiceid:.ascii "serviceId"<0>
.half 0
aUrnUpnpOrgServ:.ascii "urn:upnp-org:serviceId"<0>
.byte 0
aSCSC:.ascii "%s%c%s%c"<0>
.byte 0, 0, 0
aScpdurl:.ascii "SCPDURL"<0>
aControlurl:.ascii "controlURL"<0>
.byte 0
aEventsuburl:.ascii "eventSubURL"<0>
aDevicelist:.ascii "deviceList"<0>
.byte 0
aHttpS:.ascii "http://%s"<0>
.half 0
aPresentationur:.ascii "presentationURL"<0>
aServicetype:.ascii "serviceType"<0>
aRoot:.ascii "root"<0>
.byte 0, 0, 0
aUrnSchemasUpnp_0:.ascii "urn:schemas-upnp-org:device-1-0"
.ascii <0>
aSpecversion:.ascii "specVersion"<0>
aMajor:.ascii "major"<0>
.half 0
aMinor:.ascii "minor"<0>
.half 0
aWb:.ascii "wb"<0>
.byte 0
aXmlVersion10_0:.ascii "<?xml version=\"1.0\"?>\n"<0>
.byte 0
aHttpSDS:.ascii "http://%s:%d%s"<0>
.byte 0
aMallocMemoryFa:.ascii "Malloc memory failed!%s"<0>
aUpnpgetdeviceo_0:.ascii "UpnpGetDeviceOrService"<0>
.byte 0
aUuidS:.ascii "uuid:%s"<0>
aSubscriptionSS:.ascii "Subscription %s:%s expired.\n"<0>
.byte 0, 0, 0
aSubscribeListI:.ascii "subscribe list internal error.\n"
.ascii <0>
dword_415D70:.word 0, 0, 0, 0, 0, 0, 0, 0
dword_415D90:.word 0


 # Segment type: Pure data
.data # LOAD
unk_426000:.byte 0xFF
.byte 0xFF
.byte 0xFF
.byte 0xFF
.byte    0
.byte    0
.byte    0
.byte    0
unk_426008:.byte 0xFF
.byte 0xFF
.byte 0xFF
.byte 0xFF
unk_42600C:.byte    0
.byte    0
.byte    0
.byte    0
dword_426010:.word 0
.globl g_astSerTypeToSerID
g_astSerTypeToSerID:.word aLayer3forwardi_0  # "Layer3Forwarding"
.word aL3forwarding      # "L3Forwarding"
.word aWancommoninter_0  # "WANCommonInterfaceConfig"
.word aWancommonifc      # "WANCommonIFC"
.word aWanpotslinkcon    # "WANPOTSLinkConfig"
.word aWanpotslinkc      # "WANPOTSLinkC"
.word aWandsllinkconf_0  # "WANDSLLinkConfig"
.word aWandsllinkc       # "WANDSLLinkC"
.word aWancablelinkco    # "WANCableLinkConfig"
.word aWancablelinkc     # "WANCableLinkC"
.word aWanethernetlin_0  # "WANEthernetLinkConfig"
.word aWanethlinkc       # "WANEthLinkC"
.word aWanpppconnecti_0  # "WANPPPConnection"
.word aWanpppconn        # "WANPPPConn"
.word aWanipconnectio_0  # "WANIPConnection"
.word aWanipconn         # "WANIPConn"
.word aLanhostconfigm_0  # "LANHostConfigManagement"
.word aLanhostcfg        # "LANHostCfg"
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.globl g_astActionArray
g_astActionArray:.word aUpgrade  # "Upgrade"
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x74  # t
.byte 0x9C
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4E  # N
.byte 0xB4
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x50  # P
.byte 0x98
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x4E  # N
.byte 0xC8
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x61  # a
.byte 0xBC
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4E  # N
.byte 0xD8
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x71  # q
.byte 0x64  # d
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4E  # N
.byte 0xE4
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x60  # `
.byte 0x2C  # ,
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4E  # N
.byte 0xF4
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x5E  # ^
.byte 0x30  # 0
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0x18
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x51  # Q
.byte 0x24  # $
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0x28  # (
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x50  # P
.byte    8
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0x34  # 4
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x64  # d
.byte 0xCC
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0x48  # H
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x73  # s
.byte 0xFC
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0x60  # `
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x73  # s
.byte 0x44  # D
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0x78  # x
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x72  # r
.byte 0x88
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0x88
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x71  # q
.byte 0x10
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0x90
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x6E  # n
.byte 0xF4
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0xA0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x69  # i
.byte    0
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0xB0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x65  # e
.byte 0xB8
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0xC4
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x59  # Y
.byte 0x58  # X
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0xE0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x56  # V
.byte 0x10
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0xA0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x69  # i
.byte    0
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0xB0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x65  # e
.byte 0xB8
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0xC4
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x59  # Y
.byte 0x58  # X
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0xE0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x56  # V
.byte 0x10
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0xFC
.byte    0
.byte 0x41  # A
.byte 0x4E  # N
.byte    8
.byte    0
.byte 0x40  # @
.byte 0x53  # S
.byte 0x88
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x4F  # O
.byte 0xFC
.byte    0
.byte 0x41  # A
.byte 0x4E  # N
.byte 0x2C  # ,
.byte    0
.byte 0x40  # @
.byte 0x53  # S
.byte 0x88
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0x10
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x4F  # O
.byte 0xA8
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0x28  # (
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x41  # A
.byte 0x20
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0x38  # 8
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x4F  # O
.byte 0x88
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0x48  # H
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x41  # A
.byte 0x2C  # ,
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0x58  # X
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x4F  # O
.byte 0x68  # h
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0x68  # h
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x41  # A
.byte 0x38  # 8
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0x80
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x4F  # O
.byte 0x48  # H
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0x98
.byte    0
.byte 0x41  # A
.byte 0x4E  # N
.byte 0x2C  # ,
.byte    0
.byte 0x40  # @
.byte 0x41  # A
.byte 0x44  # D
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0x98
.byte    0
.byte 0x41  # A
.byte 0x4E  # N
.byte    8
.byte    0
.byte 0x40  # @
.byte 0x41  # A
.byte 0x44  # D
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0xAC
.byte    0
.byte 0x41  # A
.byte 0x4E  # N
.byte 0x2C  # ,
.byte    0
.byte 0x40  # @
.byte 0x41  # A
.byte 0x50  # P
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0xAC
.byte    0
.byte 0x41  # A
.byte 0x4E  # N
.byte    8
.byte    0
.byte 0x40  # @
.byte 0x41  # A
.byte 0x50  # P
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0xC0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x4F  # O
.byte 0x28  # (
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0xD0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x41  # A
.byte 0x5C  # \
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0xE0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x4F  # O
.byte    8
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte 0x50  # P
.byte 0xF0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0x18
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0x2C  # ,
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0x40  # @
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0x4C  # L
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0x58  # X
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0x64  # d
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0x2C  # ,
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0x70  # p
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0x84
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0x94
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0x9C
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0xAC
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0xBC
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0xC8
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x51  # Q
.byte 0xE0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x52  # R
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x52  # R
.byte 0x20
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte 0x41  # A
.byte 0x52  # R
.byte 0x40  # @
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte 0x45  # E
.byte 0x14
.byte    0
.byte    0
.byte    0
.byte    1
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.globl _fdata
_fdata:.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
off_426430:.word aNotify  # "NOTIFY"
.word aMSearch           # "M-SEARCH"
.word aSubscribe         # "SUBSCRIBE"
.word aUnsubscribe       # "UNSUBSCRIBE"
.byte    0
.byte    0
.byte    0
.byte    0
off_426444:.word aNt     # "NT"
.word dword_4145EC
.word dword_4145EC+4
.word dword_4145EC+8
.word dword_4145EC+0xC
.word dword_4145EC+0x10
.word dword_4145EC+0x14
.word dword_4145EC+0x18
.word dword_4145EC+0x20
.word aSetssid+4         # "SID"
.align 4
.globl __RLD_MAP
__RLD_MAP:.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
dword_426480:.word 0
.byte 0x80
.byte    0
.byte    0
.byte    0
.byte    0
.byte 0x40  # @
.byte    0
.byte    0
.byte    0
.byte 0x41  # A
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.byte    0
.word ATP_MSG_Send
.word strcpy
.word _init_proc
.word main
.word ATP_UPNP_GetServiceByDomain
.word ATP_UTIL_SocketClose
.word UpnpDestroyAllStatVar
.word TSP_XML_GetNodeFirstChild
.word optarg
.word ATP_HTTP_ClientCheckAuthorization
.word g_astActionArray
.word ATP_UPNP_FreeEvent
.word ATP_UTIL_SocketJoinMcast
.word ATP_UPNP_GetVersion
.word ATP_UTIL_TimerChgPeriod
.word signal
.word ATP_MSG_Init
.word ATP_UPNP_NeedToEvent
.word ATP_UTIL_BgetMalloc
.word g_pvUpnpShmHandle
.word ATP_UTIL_GVarGetValue
.word puts
.word strdup
.word printf
.word srand
.word listen
.word ATP_UPNP_ForceBroadcast
.word ATP_UTIL_StrFileTell
.word ATP_UPNP_Malloc
.word strchr
.word ATP_HTTP_ClientCreate
.word atoi
.word free
.word UPnPGetActionByName
.word ftell
.word ATP_UTIL_SocketDisconnect
.word ATP_UTIL_StrFilePrintf
.word ATP_UPNP_RegDeviceAndService
.word g_pstUpnpGvarHead
.word getopt
.word ATP_UTIL_GVarGetMemHandle
.word strcmp
.word ATP_HTTP_ServerAppendSocket
.word strstr
.word ATP_UPNP_RefreshDeivce
.word g_astSerTypeToSerID
.word exit
.word ATP_UPNP_UnLockTr064Device
.word g_pstUPnPStack
.word rand
.word ATP_UTIL_SocketSetMcastIf
.word g_stDevDesc
.word ATP_XML_GetChildNodeByName
.word ATP_CFM_GetParaOfMsgBySeqNum
.word ATP_UPNP_Free
.word fseek
.word socket
.word ATP_UTIL_SocketCreateServer
.word upnpRestoreState
.word memcmp
.word inet_addr
.word ATP_UTIL_GetMimeTypeFromSuffix
.word ATP_DBInit
.word ATP_UTIL_SockBaseStart
.word ATP_TR064_GetDomainNameOfService
.word TSP_XML_AddFirstChildNode
.word upnpSetSsdpSocket
.word TSP_XML_GetNodeNextSibling
.word UpnpDestroyAllActions
.word device_iterator
.word ATP_CFMA_SetPara
.word ATP_UTIL_SocketSend
.word ATP_HTTP_ServerCreate
.word perror
.word ATP_UTIL_SocketSetTTL
.word inet_ntoa
.word memset
.word ATP_UTIL_SocketRecv
.word ATP_DBDomainToKeyList
.word ATP_UTIL_GVarDelModule
.word g_apcHttpExtendDirectives
.word ATP_HTTP_ClientSendEx
.word ATP_UTIL_StrFileReSize
.word ATP_CFM_ExtReboot
.word upnpGetLocationUrl
.word TSP_XML_RemoveAttr
.word upnpIsRootDevice
.word BSP_SYS_GetInfo
.word ATP_MSG_SendAndRecv
.word ATP_HTTP_ClientDisconnect
.word ATP_CFM_MsgFree
.word TSP_XML_CreateNode
.word ATP_UTIL_StrFileBuffer
.word upnpIsSsdpAll
.word ATP_HTTP_PacketGetHeaderValue
.word UpnpIsServiceValid
.word strncpy
.word ATP_UPNP_DestroyAllDevices
.word ATP_UPNP_MsgProc
.word ATP_HTTP_PacketDestroy
.word ATP_CFM_GetParaOfMsgByOID
.word ATP_CFM_CfgMsgHeadBuilder
.word TSP_XML_AppendChildNode
.word TSP_XML_Parse
.word TSP_XML_FreeNode
.word ATP_DBKeyListToDomain
.word ATP_UTIL_BgetFree
.word ATP_UPNP_RegAction
.word close
.word localtime
.word UpnpFreeGlobalVar
.word ATP_HTTP_PacketSetHeader
.word ATP_CFM_GetParaNumOfMsg
.word ATP_UPNP_CheckExpiredSubscription
.word ATP_UTIL_SocketConnect
.word ATP_CFM_UtilConvertValueType
.word time
.word BSP_NET_GetBaseMacAddress
.word fopen
.word ATP_UTIL_StrFileWriteBin
.word g_aucMacAddr
.word ATP_UTIL_BgetStrdup
.word fread
.word ATP_UPNP_LockTr064Device
.word setsockopt
.word fclose
.word UpnpGetServiceType
.word UpnpGetActListByActName
.word ATP_HTTP_ClientSetSocket
.word ATP_UPNP_SendEvent
.word ATP_UTIL_StrFileOpen
.word ATP_UTIL_TimerAdd
.word UpnpGetDeviceOrService
.word ATP_UPNP_AdaptUpdateNextTimer
.word TSP_XML_CloneNodeSelf
.word TSP_XML_GetAttr
.word g_apcHttpExtendHeaders
.word g_pstShmExt
.word ATP_DBGetObj
.word ATP_UTIL_StrFileToBuf
.word TSP_XML_GetNodeByUrl
.word UpnpIsDeviceValid
.word TSP_XML_AddNextSiblingNode
.word TSP_XML_RemoveNode
.word UpnpGetDeviceType
.word ATP_UTIL_SSLCreateCtx
.word ATP_UPnP_RegDevice
.word ATP_UPNP_RefreshUpnpTree
.word ATP_DBGetPara
.word ATP_DBGetParaByName
.word ATP_UTIL_SocketCreateClient
.word ATP_UPNP_RefreshFromDB
.word snprintf
.word ATP_CFM_CfgMsgAppendPara
.word ATP_CFM_FreeObj
.word ATP_UPNP_GetDeviceInfo
.word ATP_UPNP_SetTr064SecurityInfo
.word g_pcDescPath
.word strlen
.word TSP_XML_GetNodeValue
.word ATP_UPNP_AddEvent
.word ATP_UPNP_GetMacAddr
.word TSP_XML_AddAttr
.word __uClibc_main
.word strncmp
.word strrchr
.word ATP_UPNP_Init
.word upnpInitShmExt
.word malloc
.word ATP_UTIL_SockBaseRegEvtProc
.word ATP_UTIL_GetSysTime
.word ATP_UTIL_ParseUrl
.word strtoul
.word ATP_UTIL_TimerDel
.word strcasecmp
.word __register_frame_info
.word ATP_HTTP_ClientSend
.word ATP_MSG_RegisterMsgProc
.word ATP_HTTP_ClientGetSendBuf
.word ATP_CFMA_GetPara
.word strcat
.word ATP_UPNP_GetTr064SecurityInfo
.word _term_proc
.word ATP_UPnP_RegService
.word upnpScpdStrip
.word UpnpGetDeviceUuid
.word UpnpGetServiceByUrl
.word UpnpDestoryDevice
.word ATP_UTIL_GetIpAddresses
.word _Jv_RegisterClasses
.word UpnpRegSubscription
.word TSP_XML_Transform
.word ATP_UTIL_GVarInit
.word memcpy
.word usleep
.word g_bBaseExit
.word system
.word fwrite
.word ATP_LOG_Printf
.word g_ulIdleTime
.word __errno_location
.word ATP_UPNP_BroadcastSSDP
.word TSP_XML_SetNode
.word ATP_UTIL_GVarSetValue
.word ATP_UTIL_StrFileFlush
.word ATP_MSG_SendSimpleMsg
.word calloc
.word strftime
.word ATP_UPNP_StrDup
.word ATP_UPNP_RegEndActionFunc
.word ATP_CFMA_GetObjInstNum
.word __deregister_frame_info
.word TSP_XML_FreeMem
.word ATP_UTIL_StrFileClose
.word ATP_HTTP_ClientRecvAllBody
.word TSP_XML_ParseFile
.word upnpIsUpnpEnabled
.word ATP_MSG_SimpleBuilder
.align 4
.globl g_aucMacAddr
g_aucMacAddr:.space 1
byte_426801:.space 1
byte_426802:.space 1
byte_426803:.space 1
byte_426804:.space 1
byte_426805:.space 1
.align 4
byte_426810:.space 1
.align 3
unk_426818:.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.space 1
.globl g_pstShmExt
g_pstShmExt:.space 4
.align 4
.globl g_pstUpnpGvarHead
g_pstUpnpGvarHead:.space 4
.globl g_pvUpnpShmHandle
g_pvUpnpShmHandle:.space 4
.globl g_pcDescPath
g_pcDescPath:.space 4
.globl g_pstUPnPStack
g_pstUPnPStack:.space 4
.globl g_stDevDesc
g_stDevDesc:.space 4
dword_426854:.space 4
dword_426858:.space 4
dword_42685C:.space 4
.space 1
.space 1
.space 1
.space 1
dword_426864:.space 4
dword_426868:.space 4
.align 4
dword_426870:.space 4
dword_426874:.space 4
dword_426878:.space 4
.align 4
dword_426880:.space 4
dword_426884:.space 4
.align 4


 # Segment type: Zero-length
.data # .prgend
_end_0:


 # Segment type: Absolute symbols
.globl _fbss
_fbss= 0x426800
.globl _GLOBAL_OFFSET_TABLE_
_GLOBAL_OFFSET_TABLE_= 0x426480
.globl _gp
_gp= 0x42E470
.globl __bss_start
__bss_start= 0x426800
.globl _end
_end= 0x426890
.globl _edata
_edata= 0x426800


 # Segment type: Externs
.extern ATP_MSG_Send
.extern strcpy
.extern ATP_UTIL_SocketClose
.extern TSP_XML_GetNodeFirstChild
.extern optarg
.extern ATP_HTTP_ClientCheckAuthorization
.extern ATP_UTIL_SocketJoinMcast
.extern ATP_UTIL_TimerChgPeriod
.extern signal
.extern ATP_MSG_Init
.extern ATP_UTIL_BgetMalloc
.extern ATP_UTIL_GVarGetValue
.extern puts
.extern strdup
.extern printf
.extern srand
.extern listen
.extern ATP_UTIL_StrFileTell
.extern strchr
.extern ATP_HTTP_ClientCreate
.extern atoi
.extern free
.extern ftell
.extern ATP_UTIL_SocketDisconnect
.extern ATP_UTIL_StrFilePrintf
.extern getopt
.extern ATP_UTIL_GVarGetMemHandle
.extern strcmp
.extern ATP_HTTP_ServerAppendSocket
.extern strstr
.extern exit
.extern rand
.extern ATP_UTIL_SocketSetMcastIf
.extern ATP_CFM_GetParaOfMsgBySeqNum
.extern fseek
.extern socket
.extern ATP_UTIL_SocketCreateServer
.extern memcmp
.extern inet_addr
.extern ATP_UTIL_GetMimeTypeFromSuffix
.extern ATP_DBInit
.extern ATP_UTIL_SockBaseStart
.extern TSP_XML_AddFirstChildNode
.extern TSP_XML_GetNodeNextSibling
.extern ATP_CFMA_SetPara
.extern ATP_UTIL_SocketSend
.extern ATP_HTTP_ServerCreate
.extern perror
.extern ATP_UTIL_SocketSetTTL
.extern inet_ntoa
.extern memset
.extern ATP_UTIL_SocketRecv
.extern ATP_DBDomainToKeyList
.extern ATP_UTIL_GVarDelModule
.extern g_apcHttpExtendDirectives
.extern ATP_HTTP_ClientSendEx
.extern ATP_UTIL_StrFileReSize
.extern ATP_CFM_ExtReboot
.extern TSP_XML_RemoveAttr
.extern BSP_SYS_GetInfo
.extern ATP_MSG_SendAndRecv
.extern ATP_HTTP_ClientDisconnect
.extern ATP_CFM_MsgFree
.extern TSP_XML_CreateNode
.extern ATP_UTIL_StrFileBuffer
.extern ATP_HTTP_PacketGetHeaderValue
.extern strncpy
.extern ATP_HTTP_PacketDestroy
.extern ATP_CFM_GetParaOfMsgByOID
.extern ATP_CFM_CfgMsgHeadBuilder
.extern TSP_XML_AppendChildNode
.extern TSP_XML_Parse
.extern TSP_XML_FreeNode
.extern ATP_DBKeyListToDomain
.extern ATP_UTIL_BgetFree
.extern close
.extern localtime
.extern ATP_HTTP_PacketSetHeader
.extern ATP_CFM_GetParaNumOfMsg
.extern ATP_UTIL_SocketConnect
.extern ATP_CFM_UtilConvertValueType
.extern time
.extern BSP_NET_GetBaseMacAddress
.extern fopen
.extern ATP_UTIL_StrFileWriteBin
.extern ATP_UTIL_BgetStrdup
.extern fread
.extern setsockopt
.extern fclose
.extern ATP_HTTP_ClientSetSocket
.extern ATP_UTIL_StrFileOpen
.extern ATP_UTIL_TimerAdd
.extern TSP_XML_CloneNodeSelf
.extern TSP_XML_GetAttr
.extern g_apcHttpExtendHeaders
.extern ATP_DBGetObj
.extern ATP_UTIL_StrFileToBuf
.extern TSP_XML_GetNodeByUrl
.extern TSP_XML_AddNextSiblingNode
.extern TSP_XML_RemoveNode
.extern ATP_UTIL_SSLCreateCtx
.extern ATP_DBGetPara
.extern ATP_DBGetParaByName
.extern ATP_UTIL_SocketCreateClient
.extern snprintf
.extern ATP_CFM_CfgMsgAppendPara
.extern ATP_CFM_FreeObj
.extern strlen
.extern TSP_XML_GetNodeValue
.extern TSP_XML_AddAttr
.extern __uClibc_main
.extern strncmp
.extern strrchr
.extern malloc
.extern ATP_UTIL_SockBaseRegEvtProc
.extern ATP_UTIL_GetSysTime
.extern ATP_UTIL_ParseUrl
.extern strtoul
.extern ATP_UTIL_TimerDel
.extern strcasecmp
.extern __register_frame_info  # weak
.extern ATP_HTTP_ClientSend
.extern ATP_MSG_RegisterMsgProc
.extern ATP_HTTP_ClientGetSendBuf
.extern ATP_CFMA_GetPara
.extern strcat
.extern ATP_UTIL_GetIpAddresses
.extern _Jv_RegisterClasses  # weak
.extern TSP_XML_Transform
.extern ATP_UTIL_GVarInit
.extern memcpy
.extern usleep
.extern g_bBaseExit
.extern system
.extern fwrite
.extern ATP_LOG_Printf
.extern g_ulIdleTime
.extern __errno_location
.extern TSP_XML_SetNode
.extern ATP_UTIL_GVarSetValue
.extern ATP_UTIL_StrFileFlush
.extern ATP_MSG_SendSimpleMsg
.extern calloc
.extern strftime
.extern ATP_CFMA_GetObjInstNum
.extern __deregister_frame_info  # weak
.extern TSP_XML_FreeMem
.extern ATP_UTIL_StrFileClose
.extern ATP_HTTP_ClientRecvAllBody
.extern TSP_XML_ParseFile
.extern ATP_MSG_SimpleBuilder

 # end _ftext
